/* example script for running pvsamv1
   for webservice, designed for concept3D requirements
   
   runs 1 sub-array, cec 5 par module, snl inverter */

clear();


// web service input variables
sizekw = 4;
tilt = 20;
azimuth = 180;
track_mode = 0;
derate = 0.77;


// out-years system performance  	  
analysis_years = 25;
availability = 100; // percent
degradation = 0.5; // percent compounded annually

// electric load input
elec_load = alloc(8760);
for (i=0;i<8760;i++) elec_load[i] = 0;
// projected escalation of load (%/year)
elec_load_escalation = 0;

// utility rate input variables
rate_escalation = 0;
ur_sell_eq_buy = 1;
ur_monthly_fixed_charge = 0;
ur_flat_buy_rate = 0.12;
ur_flat_sell_rate = 0;
ur_tou_enable = 0;
ur_dc_enable = 0;
ur_tr_enable = 0;

federal_tax_rate = 28;
state_tax_rate = 7;
property_tax_rate = 0;
prop_tax_cost_assessed_percent = 100;
prop_tax_assessed_decline = 0;
sales_tax_rate = 5;
real_discount_rate = 8;
inflation_rate = 2.5;
insurance_rate = 0;

cost_per_watt = 5.714;
om_fixed = 0;
om_fixed_escal = 0;
om_production = 0;
om_production_escal = 0;
om_capacity = 20;
om_capacity_escal = 0;
om_fuel_cost = 0;
om_fuel_cost_escal = 0;
annual_fuel_usage = 0;

// incentives

itc_fed_amount = 0;
itc_fed_amount_deprbas_fed = 0;
itc_fed_amount_deprbas_sta = 0;
itc_sta_amount = 0;
itc_sta_amount_deprbas_fed = 0;
itc_sta_amount_deprbas_sta = 0;
itc_fed_percent = 30;
itc_fed_percent_maxvalue = 1e+099;
itc_fed_percent_deprbas_fed = 0;
itc_fed_percent_deprbas_sta = 0;
itc_sta_percent = 0;
itc_sta_percent_maxvalue = 1e+099;
itc_sta_percent_deprbas_fed = 0;
itc_sta_percent_deprbas_sta = 0;

ptc_fed_amount = 0;
ptc_fed_term = 10;
ptc_fed_escal = 2;
ptc_sta_amount = 0;
ptc_sta_term = 10;
ptc_sta_escal = 2;

ibi_fed_amount = 0;
ibi_fed_amount_tax_fed = 1;
ibi_fed_amount_tax_sta = 1;
ibi_fed_amount_deprbas_fed = 0;
ibi_fed_amount_deprbas_sta = 0;
ibi_sta_amount = 0;
ibi_sta_amount_tax_fed = 1;
ibi_sta_amount_tax_sta = 1;
ibi_sta_amount_deprbas_fed = 0;
ibi_sta_amount_deprbas_sta = 0;
ibi_uti_amount = 0;
ibi_uti_amount_tax_fed = 1;
ibi_uti_amount_tax_sta = 1;
ibi_uti_amount_deprbas_fed = 0;
ibi_uti_amount_deprbas_sta = 0;
ibi_oth_amount = 0;
ibi_oth_amount_tax_fed = 1;
ibi_oth_amount_tax_sta = 1;
ibi_oth_amount_deprbas_fed = 0;
ibi_oth_amount_deprbas_sta = 0;
ibi_fed_percent = 0;
ibi_fed_percent_maxvalue = 1e+099;
ibi_fed_percent_tax_fed = 1;
ibi_fed_percent_tax_sta = 1;
ibi_fed_percent_deprbas_fed = 0;
ibi_fed_percent_deprbas_sta = 0;
ibi_sta_percent = 0;
ibi_sta_percent_maxvalue = 1e+099;
ibi_sta_percent_tax_fed = 1;
ibi_sta_percent_tax_sta = 1;
ibi_sta_percent_deprbas_fed = 0;
ibi_sta_percent_deprbas_sta = 0;
ibi_uti_percent = 0;
ibi_uti_percent_maxvalue = 1e+099;
ibi_uti_percent_tax_fed = 1;
ibi_uti_percent_tax_sta = 1;
ibi_uti_percent_deprbas_fed = 0;
ibi_uti_percent_deprbas_sta = 0;
ibi_oth_percent = 0;
ibi_oth_percent_maxvalue = 1e+099;
ibi_oth_percent_tax_fed = 1;
ibi_oth_percent_tax_sta = 1;
ibi_oth_percent_deprbas_fed = 0;
ibi_oth_percent_deprbas_sta = 0;

cbi_fed_amount = 0;
cbi_fed_maxvalue = 1e+099;
cbi_fed_tax_fed = 1;
cbi_fed_tax_sta = 1;
cbi_fed_deprbas_fed = 0;
cbi_fed_deprbas_sta = 0;
cbi_sta_amount = 0;
cbi_sta_maxvalue = 1e+099;
cbi_sta_tax_fed = 1;
cbi_sta_tax_sta = 1;
cbi_sta_deprbas_fed = 0;
cbi_sta_deprbas_sta = 0;
cbi_uti_amount = 0;
cbi_uti_maxvalue = 1e+099;
cbi_uti_tax_fed = 1;
cbi_uti_tax_sta = 1;
cbi_uti_deprbas_fed = 0;
cbi_uti_deprbas_sta = 0;
cbi_oth_amount = 0;
cbi_oth_maxvalue = 1e+099;
cbi_oth_tax_fed = 1;
cbi_oth_tax_sta = 1;
cbi_oth_deprbas_fed = 0;
cbi_oth_deprbas_sta = 0;

pbi_fed_amount = 0;
pbi_fed_term = 0;
pbi_fed_escal = 0;
pbi_fed_tax_fed = 1;
pbi_fed_tax_sta = 1;
pbi_sta_amount = 0;
pbi_sta_term = 0;
pbi_sta_escal = 0;
pbi_sta_tax_fed = 1;
pbi_sta_tax_sta = 1;
pbi_uti_amount = 0;
pbi_uti_term = 0;
pbi_uti_escal = 0;
pbi_uti_tax_fed = 1;
pbi_uti_tax_sta = 1;
pbi_oth_amount = 0;
pbi_oth_term = 0;
pbi_oth_escal = 0;
pbi_oth_tax_fed = 1;
pbi_oth_tax_sta = 1;
total_installed_cost = sizekw*1000*cost_per_watt;
outln("total installed cost=" + total_installed_cost);
salvage_percentage = 0;

loan_debt = 100;
loan_term = 25;
loan_rate = 7.5;
is_mortgage = 0; // true/false

is_commercial = 0;
// enable macrs depreciation true/false (commercial only)
depr_fed_macrs = 1;
depr_sta_macrs = 1;

/* END OF INPUT VARIABLES */














// set the weather file.  the web service should take a 
// lat-long and use the perez satellite data or tmy2/3 data
// in the same way that the PVWatts service specifies the weather data
// --> essentially, this service and PVWatts should use exactly the same
//     method to get weather data for a location request
var( 'file_name', 'c:/sam/2013.9.20/weather/TX Abilene.tm2' );

var( 'system_size', sizekw );
var( 'track_mode', track_mode );
var( 'derate', derate );
var( 'tilt', tilt );
var( 'azimuth', azimuth );

// all variables have been set up for pvwattsv1
// run the model
run( 'pvwattsv1' );


// return the relevant outputs desired

ac_hourly = var('ac');
ac_monthly = var('ac_monthly');
sr_monthly = var('solrad_monthly');
ac_annual = var('ac_annual');
sr_annual = var('solrad_annual');

outln( 'ac_monthly (kWh) = ' + ac_monthly);
outln( 'ac_annual (kWh) = ' + ac_annual);

ac_hourly_kwh = alloc(8760);
for (i=0;i<8760;i++)
	ac_hourly_kwh[i] = ac_hourly[i]*0.001;


// ******** RESCOM SERVICE PORTION STARTS HERE ********* //

// start economic analysis
// calculate annualized output of the system for each year of its life
// setup curtailment schedule (no curtailment, factor=1)
curtailment = alloc( 12,24 );
for (r=0;r<12;r++)
	for (c=0;c<24;c++)
		curtailment[r][c] = 1;


var( 'analysis_years', analysis_years );
var( 'energy_availability', [ availability ] ); // 100% availability
var( 'energy_degradation', [ degradation ] ); // 0.5% per year
var( 'energy_curtailment', curtailment );
var( 'system_use_lifetime_output', 0 );
var( 'energy_net_hourly', ac_hourly_kwh );

run( 'annualoutput' );

outln( 'annual e_net_delivered (kWh) = ' + var('annual_e_net_delivered') );

// calculate annual revenue from utility rate
var( 'analysis_years', analysis_years );
var( 'system_availability', [ availability ] );
var( 'system_degradation', [ degradation ] );
var( 'rate_escalation', [ rate_escalation+inflation_rate ] );
var( 'ur_sell_eq_buy', ur_sell_eq_buy );
var( 'ur_monthly_fixed_charge', ur_monthly_fixed_charge );
var( 'ur_flat_buy_rate', ur_flat_buy_rate );
var( 'ur_flat_sell_rate', ur_flat_sell_rate );
var( 'ur_tou_enable', ur_tou_enable );
var( 'ur_dc_enable', ur_dc_enable );
var( 'ur_tr_enable', ur_tr_enable );

// set up energy generation and load
var( 'e_with_system', ac_hourly_kwh ); // electric generation (PV, kWh)
var( 'e_without_system', elec_load ); // electric load (kWh), negative value indicates draw from grid
var( 'load_escalation', [ elec_load_escalation ] );

run( 'utilityrate' );

outln( 'energy value ($) = ' + var('energy_value' ) );


// set up financial variables
var( 'analysis_years', analysis_years );
var( 'federal_tax_rate', federal_tax_rate );
var( 'state_tax_rate', state_tax_rate );
var( 'property_tax_rate', property_tax_rate );
var( 'prop_tax_cost_assessed_percent', prop_tax_cost_assessed_percent );
var( 'prop_tax_assessed_decline', prop_tax_assessed_decline );
var( 'sales_tax_rate', sales_tax_rate );
var( 'real_discount_rate', real_discount_rate );
var( 'inflation_rate', inflation_rate );
var( 'insurance_rate', insurance_rate );
var( 'system_capacity', sizekw );
var( 'system_heat_rate', 0 );
var( 'om_fixed', [ om_fixed ] );
var( 'om_fixed_escal', om_fixed_escal );
var( 'om_production', [ om_production ] );
var( 'om_production_escal', om_production_escal );
var( 'om_capacity', [ om_capacity ] );
var( 'om_capacity_escal', om_capacity_escal );
var( 'om_fuel_cost', [ om_fuel_cost ] );
var( 'om_fuel_cost_escal', om_fuel_cost_escal );
var( 'annual_fuel_usage', annual_fuel_usage );

var( 'itc_fed_amount', itc_fed_amount );
var( 'itc_fed_amount_deprbas_fed', itc_fed_amount_deprbas_fed );
var( 'itc_fed_amount_deprbas_sta', itc_fed_amount_deprbas_sta );
var( 'itc_sta_amount', itc_sta_amount );
var( 'itc_sta_amount_deprbas_fed', itc_sta_amount_deprbas_fed );
var( 'itc_sta_amount_deprbas_sta', itc_sta_amount_deprbas_sta );
var( 'itc_fed_percent', itc_fed_percent );
var( 'itc_fed_percent_maxvalue', itc_fed_percent_maxvalue );
var( 'itc_fed_percent_deprbas_fed', itc_fed_percent_deprbas_fed );
var( 'itc_fed_percent_deprbas_sta', itc_fed_percent_deprbas_sta );
var( 'itc_sta_percent', itc_sta_percent );
var( 'itc_sta_percent_maxvalue', itc_sta_percent_maxvalue );
var( 'itc_sta_percent_deprbas_fed', itc_sta_percent_deprbas_fed );
var( 'itc_sta_percent_deprbas_sta', itc_sta_percent_deprbas_sta );
var( 'ptc_fed_amount', [ ptc_fed_amount ] );
var( 'ptc_fed_term', ptc_fed_term );
var( 'ptc_fed_escal', ptc_fed_escal );
var( 'ptc_sta_amount', [ ptc_sta_amount ] );
var( 'ptc_sta_term', ptc_sta_term );
var( 'ptc_sta_escal', ptc_sta_escal );
var( 'ibi_fed_amount', ibi_fed_amount );
var( 'ibi_fed_amount_tax_fed', ibi_fed_amount_tax_fed );
var( 'ibi_fed_amount_tax_sta', ibi_fed_amount_tax_sta );
var( 'ibi_fed_amount_deprbas_fed', ibi_fed_amount_deprbas_fed );
var( 'ibi_fed_amount_deprbas_sta', ibi_fed_amount_deprbas_sta );
var( 'ibi_sta_amount', ibi_sta_amount );
var( 'ibi_sta_amount_tax_fed', ibi_sta_amount_tax_fed );
var( 'ibi_sta_amount_tax_sta', ibi_sta_amount_tax_sta );
var( 'ibi_sta_amount_deprbas_fed', ibi_sta_amount_deprbas_fed );
var( 'ibi_sta_amount_deprbas_sta', ibi_sta_amount_deprbas_sta );
var( 'ibi_uti_amount', ibi_uti_amount );
var( 'ibi_uti_amount_tax_fed', ibi_uti_amount_tax_fed );
var( 'ibi_uti_amount_tax_sta', ibi_uti_amount_tax_sta );
var( 'ibi_uti_amount_deprbas_fed', ibi_uti_amount_deprbas_fed );
var( 'ibi_uti_amount_deprbas_sta', ibi_uti_amount_deprbas_sta );
var( 'ibi_oth_amount', ibi_oth_amount );
var( 'ibi_oth_amount_tax_fed', ibi_oth_amount_tax_fed );
var( 'ibi_oth_amount_tax_sta', ibi_oth_amount_tax_sta );
var( 'ibi_oth_amount_deprbas_fed', ibi_oth_amount_deprbas_fed );
var( 'ibi_oth_amount_deprbas_sta', ibi_oth_amount_deprbas_sta );
var( 'ibi_fed_percent', ibi_fed_percent );
var( 'ibi_fed_percent_maxvalue', ibi_fed_percent_maxvalue );
var( 'ibi_fed_percent_tax_fed', ibi_fed_percent_tax_fed );
var( 'ibi_fed_percent_tax_sta', ibi_fed_percent_tax_sta );
var( 'ibi_fed_percent_deprbas_fed', ibi_fed_percent_deprbas_fed );
var( 'ibi_fed_percent_deprbas_sta', ibi_fed_percent_deprbas_sta );
var( 'ibi_sta_percent', ibi_sta_percent );
var( 'ibi_sta_percent_maxvalue', ibi_sta_percent_maxvalue );
var( 'ibi_sta_percent_tax_fed', ibi_sta_percent_tax_fed );
var( 'ibi_sta_percent_tax_sta', ibi_sta_percent_tax_sta );
var( 'ibi_sta_percent_deprbas_fed', ibi_sta_percent_deprbas_fed );
var( 'ibi_sta_percent_deprbas_sta', ibi_sta_percent_deprbas_sta );
var( 'ibi_uti_percent', ibi_uti_percent );
var( 'ibi_uti_percent_maxvalue', ibi_uti_percent_maxvalue );
var( 'ibi_uti_percent_tax_fed', ibi_uti_percent_tax_fed );
var( 'ibi_uti_percent_tax_sta', ibi_uti_percent_tax_sta );
var( 'ibi_uti_percent_deprbas_fed', ibi_uti_percent_deprbas_fed );
var( 'ibi_uti_percent_deprbas_sta', ibi_uti_percent_deprbas_sta );
var( 'ibi_oth_percent', ibi_oth_percent );
var( 'ibi_oth_percent_maxvalue', ibi_oth_percent_maxvalue );
var( 'ibi_oth_percent_tax_fed', ibi_oth_percent_tax_fed );
var( 'ibi_oth_percent_tax_sta', ibi_oth_percent_tax_sta );
var( 'ibi_oth_percent_deprbas_fed', ibi_oth_percent_deprbas_fed );
var( 'ibi_oth_percent_deprbas_sta', ibi_oth_percent_deprbas_sta );
var( 'cbi_fed_amount', cbi_fed_amount );
var( 'cbi_fed_maxvalue', cbi_fed_maxvalue );
var( 'cbi_fed_tax_fed', cbi_fed_tax_fed );
var( 'cbi_fed_tax_sta', cbi_fed_tax_sta );
var( 'cbi_fed_deprbas_fed', cbi_fed_deprbas_fed );
var( 'cbi_fed_deprbas_sta', cbi_fed_deprbas_sta );
var( 'cbi_sta_amount', cbi_sta_amount );
var( 'cbi_sta_maxvalue', cbi_sta_maxvalue );
var( 'cbi_sta_tax_fed', cbi_sta_tax_fed );
var( 'cbi_sta_tax_sta', cbi_sta_tax_sta );
var( 'cbi_sta_deprbas_fed', cbi_sta_deprbas_fed );
var( 'cbi_sta_deprbas_sta', cbi_sta_deprbas_sta );
var( 'cbi_uti_amount', cbi_uti_amount );
var( 'cbi_uti_maxvalue', cbi_uti_maxvalue );
var( 'cbi_uti_tax_fed', cbi_uti_tax_fed );
var( 'cbi_uti_tax_sta', cbi_uti_tax_sta );
var( 'cbi_uti_deprbas_fed', cbi_uti_deprbas_fed );
var( 'cbi_uti_deprbas_sta', cbi_uti_deprbas_sta );
var( 'cbi_oth_amount', cbi_oth_amount );
var( 'cbi_oth_maxvalue', cbi_oth_maxvalue );
var( 'cbi_oth_tax_fed', cbi_oth_tax_fed );
var( 'cbi_oth_tax_sta', cbi_oth_tax_sta );
var( 'cbi_oth_deprbas_fed', cbi_oth_deprbas_fed );
var( 'cbi_oth_deprbas_sta', cbi_oth_deprbas_sta );
var( 'pbi_fed_amount', [ pbi_fed_amount ] );
var( 'pbi_fed_term', pbi_fed_term );
var( 'pbi_fed_escal', pbi_fed_escal );
var( 'pbi_fed_tax_fed', pbi_fed_tax_fed );
var( 'pbi_fed_tax_sta', pbi_fed_tax_sta );
var( 'pbi_sta_amount', [ pbi_sta_amount ] );
var( 'pbi_sta_term', pbi_sta_term );
var( 'pbi_sta_escal', pbi_sta_escal );
var( 'pbi_sta_tax_fed', pbi_sta_tax_fed );
var( 'pbi_sta_tax_sta', pbi_sta_tax_sta );
var( 'pbi_uti_amount', [ pbi_uti_amount ] );
var( 'pbi_uti_term', pbi_uti_term );
var( 'pbi_uti_escal', pbi_uti_escal );
var( 'pbi_uti_tax_fed', pbi_uti_tax_fed );
var( 'pbi_uti_tax_sta', pbi_uti_tax_sta );
var( 'pbi_oth_amount', [ pbi_oth_amount ] );
var( 'pbi_oth_term', pbi_oth_term );
var( 'pbi_oth_escal', pbi_oth_escal );
var( 'pbi_oth_tax_fed', pbi_oth_tax_fed );
var( 'pbi_oth_tax_sta', pbi_oth_tax_sta );
var( 'total_installed_cost', total_installed_cost );
var( 'salvage_percentage', salvage_percentage );

var( 'loan_debt', loan_debt );
var( 'loan_rate', loan_rate );
var( 'loan_term', loan_term );

if ( is_commercial )
{
	var( 'market', 1 ); // commercial
	var( 'depr_fed_type', depr_fed_macrs );
	var( 'depr_sta_type', depr_sta_macrs );	
}
else
{
	var( 'market', 0 ); // residential
	var( 'mortgage', is_mortgage );
}

run( 'cashloan' );

outln( 'lcoe_real = ' + var('lcoe_real') );
outln( 'lcoe_nominal = ' + var('lcoe_nom') );
outln( 'npv = ' + var('npv') );