// Output file directory
file_dir = 'c:/Users/tneises/Documents/Projects/ssc_trunk/examples/';

// Set Model Input Parameters
	// System Design
var('htf', 17);					//[-] Integer code for HTF, 17: Salt_60_NaNO3_40_KNO3
var('htf_props', [[0]]);		//[-] Custom HTF props (only used if htf = 50)
var('T_htf_hot_des', 574);	//[C] HTF design hot temperature (PHX inlet)
var('dT_PHX_hot_approach', 20);	//[C] Temp diff between hot HTF and turbine inlet
var('T_amb_des', 30);			//[C] Ambient temperature at design
var('dT_mc_approach', 15);		//[C] Temperature difference between main compressor CO2 inlet and ambient air
var('site_elevation', 588);		//[m] Site elevation (used to calculate air density in air cooler design model)
var('W_dot_net_des', 10);		//[MWe] Design cycle power output (no cooling parasitics)
var('eta_thermal_des', 0.412);	//[-] Power cycle thermal efficiency
	// Cycle Design
var('eta_isen_mc', 0.89);		//[-] Main compressor isentropic efficiency
var('eta_isen_rc', 0.89);		//[-] Re-compressor isentropic efficiency
var('eta_isen_t', 0.90);		//[-] Turbine isentropic efficiency
var('LT_recup_eff_max', 1.0);	//[-] Maximum allowable effectiveness in LT recuperator
var('HT_recup_eff_max', 1.0);	//[-] Maximum allowable effectiveness in HT recuperator
var('P_high_limit',25);			//[MPa] Cycle high pressure limit
	// PHX design
var('dT_PHX_cold_approach', 20);	//[C] Temperature difference between cold HTF and cold CO2 PHX inlet
	// Air Cooler design
var('fan_power_frac',0.01);			//[-] Fraction of net cycle power consumed by air cooler fan
var('deltaP_cooler_frac',0.002);	//[-] Fraction of cycle high pressure that is design point cooler CO2 pressure drop

var('is_gen_od_polynomials', 0);

// Set Off-Design Inputs
var('od_cases', [

				//[574, 1, 45, 1, 1.E-3],
				//[574, 1, 30, 1, 1.E-4],
				//[574, 1, 45, 2, 1.E-3],
				//[574, 1, 30, 2, 1.E-4],
				//[574, 1, 45, 3, 1.E-3],
				//[574, 1, 30, 3, 1.E-4],
				//[574, 1, 45, 4, 1.E-3],
				//[574, 1, 30, 4, 1.E-4],
				//[574, 1, 45, 5, 1.E-3],
				//[574, 1, 30, 5, 1.E-4],
				//[574, 1, 45, 6, 1.E-3],
				//[574, 1, 30, 6, 1.E-4],
				//[574, 1, 45, 7, 1.E-3],
				//[574, 1, 30, 7, 1.E-4],
				//[574, 1, 45, 8, 1.E-3],
				
				[574, 0.5, 30, 1, 1.E-3],
				//[574, 1, 30, 1, 1.E-4],
				[574, 0.5, 30, 2, 1.E-3],
				//[574, 1, 30, 2, 1.E-4],
				[574, 0.5, 30, 3, 1.E-3],
				//[574, 1, 30, 3, 1.E-4],
				[574, 0.5, 30, 4, 1.E-3],
				//[574, 1, 30, 4, 1.E-4],
				[574, 0.5, 30, 5, 1.E-3],
				//[574, 1, 30, 5, 1.E-4],
				[574, 0.5, 30, 6, 1.E-3],
				//[574, 1, 30, 6, 1.E-4],
				[574, 0.5, 30, 7, 1.E-3],
				//[574, 1, 30, 7, 1.E-4],
				[574, 0.5, 30, 8, 1.E-3],
				//[574, 1, 30, 8, 1.E-4],
				
				[574, 0.75, 30, 1, 1.E-3],
				//[574, 1, 30, 1, 1.E-4],
				[574, 0.75, 30, 2, 1.E-3],
				//[574, 1, 30, 2, 1.E-4],
				[574, 0.75, 30, 3, 1.E-3],
				//[574, 1, 30, 3, 1.E-4],
				[574, 0.75, 30, 4, 1.E-3],
				//[574, 1, 30, 4, 1.E-4],
				[574, 0.75, 30, 5, 1.E-3],
				//[574, 1, 30, 5, 1.E-4],
				[574, 0.75, 30, 6, 1.E-3],
				//[574, 1, 30, 6, 1.E-4],
				[574, 0.75, 30, 7, 1.E-3],
				//[574, 1, 30, 7, 1.E-4],
				[574, 0.75, 30, 8, 1.E-3],
				//[574, 1, 30, 8, 1.E-4],
				
				[574, 1, 30, 1, 1.E-3],
				//[574, 1, 30, 1, 1.E-4],
				[574, 1, 30, 2, 1.E-3],
				//[574, 1, 30, 2, 1.E-4],
				[574, 1, 30, 3, 1.E-3],
				//[574, 1, 30, 3, 1.E-4],
				[574, 1, 30, 4, 1.E-3],
				//[574, 1, 30, 4, 1.E-4],
				[574, 1, 30, 5, 1.E-3],
				//[574, 1, 30, 5, 1.E-4],
				[574, 1, 30, 6, 1.E-3],
				//[574, 1, 30, 6, 1.E-4],
				[574, 1, 30, 7, 1.E-3],
				//[574, 1, 30, 7, 1.E-4],
				[574, 1, 30, 8, 1.E-3]]);
				//[574, 1, 30, 8, 1.E-4],
				
				//[574, 1, 0, 1, 1.E-3],
				//[574, 1, 0, 1, 1.E-4],
				//[574, 1, 0, 2, 1.E-3],
				//[574, 1, 0, 2, 1.E-4],
				//[574, 1, 0, 3, 1.E-3],
				//[574, 1, 0, 3, 1.E-4],
				//[574, 1, 0, 4, 1.E-3],
				//[574, 1, 0, 4, 1.E-4],
				//[574, 1, 0, 5, 1.E-3],
				//[574, 1, 0, 5, 1.E-4],
				//[574, 1, 0, 6, 1.E-3],
				//[574, 1, 0, 6, 1.E-4],
				//[574, 1, 0, 7, 1.E-3],
				//[574, 1, 0, 7, 1.E-4],
				//[574, 1, 0, 8, 1.E-3]]);
				//[574, 1, 0, 8, 1.E-4]]);

//var('is_m_dot_htf_fracs',0);
//var('m_dot_htf_fracs_in',[1.25,1.0,0.5,0.25]);		//[-]
//var('is_T_amb_od',0);
//var('T_amb_od_in',[30]);
//var('T_amb_od_in',[45,44,43,42,41,40,39,38,37,36,36,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15]);		//[C]

// Run Model
run('sco2_csp_system');
 
// Get Design Solution:
outln("The HTF design cold temperature (PHX outlet) is: ", var("T_htf_cold_des"), " C");
outln("The HTF temperature difference across the PHX is: ", var("T_htf_hot_des")-var("T_htf_cold_des"), " C");
outln("The HTF mass flow rate is: ", var("m_dot_htf_des"), " kg/s");
outln("The solved cycle thermal efficiency is: ", var("eta_thermal_calc"), " -");
outln("The total recuperator conductance is: ", var("UA_recup_total"), " kW/K");
outln("The low temperature recuperator conductance is: ", var("UA_LTR"), " kW/K");
outln("The high temperature recuperator conductance is: ", var("UA_HTR"), " kW/K");
outln("The recompression fraction is: ", var("recomp_frac"), " -");
outln("The main compressor outlet pressure is: ", var("P_comp_in"), " MPa");
outln("The main compressor inlet pressure is: ", var("P_comp_out"), " MPa");
outln("The PHX conductance is: ", var("UA_PHX"), " kW/K");
outln("The PHX effectiveness is: ", var("eff_PHX"), " -");
outln("The PHX NTU is: ", var("NTU_PHX"), " -");

// Get Off-Design Outputs:
outln("The off-design ambient temperature is: ", var("T_amb_od"), " C");
outln("The off-design HTF normalized mass flow rate is: ", var("m_dot_htf_fracs"), " -");
outln("The off-design HTF inlet temperature is: ", var("T_htf_hot_od"), " C");
outln("The off-design main compressor inlet pressure is: ", var("P_comp_in_od"), " MPa");
outln("The off-design main compressor speed is: ", var("N_mc_od"), " rpm");
outln("The off-design recompression fraction is: ", var("recomp_frac_od"), " -");
outln("The off-design cycle thermal efficiency is: ", var("eta_thermal_od"), " -");

// Setup output file
file_name = file_dir + 'test_sco2_csp_module.csv';
file_int = open(file_name, 'w');
headers_des = "T_htf_hot,"+		// C
			"T_amb,"+			// C
			"cycle_eta,"+		// -
			"cycle_power,"+		// MWe
			"mc_eta,"+ 			// -
			"rc_eta,"+			// -
			"t_eta,"+			// -
			"phx_hot_approach,"+		// C
			"phx_cold_approach,"+		// C
			"air_cooler_approach,"+ 	// C
			"fan_power_frac,"+ 			// -
			"deltaP_cooler_frac,"+		// -
			// Design solution
				// System
			"T_htf_cold,"+				// C
			"m_dot_htf,"+				// kg/s
			"cycle_eta_solved,"+		// -
			"m_dot_co2,"+				// kg/s
			"f_recomp,"+				// -
				// Compressor
			"P_comp_in,"+				// MPa
			"P_comp_out,"+				// MPa
			"mc_phi,"+					// -
			"mc_tip_ratio,"+			// -
			"mc_n_stages,"+				// -
			"mc_N,"+					// rpm
			"mc_D,"+ 					// m
			"mc_phi_surge,"+			// -
				// Recompressor
			"rc_phi,"+					// -
			"rc_tip_ratio1,"+			// -
			"rc_tip_ratio2,"+			// -
			"rc_n_stages,"+				// -
			"rc_N,"+					// rpm
			"rc_D1,"+					// m
			"rc_D2,"+					// m
			"rc_phi_surge,"+			// -
				// Turbine
			"t_nu,"+					// -
			"t_tip_ratio,"+				// -
			"t_N,"+						// rpm
			"t_D,"+						// m
				// Recuperators
			"recup_UA,"+	// kW/K
			"LTR_UA,"+		// kW/K
			"HTR_UA,"+		// kW/K
				// PHX
			"PHX_UA,"+		// kW/K
			"PHX_eff,"+		// -
			"PHX_NTU,"+		// -
			"T_co2_PHX_in";	// C
outln(file_name, " Design headers were successful? ", write_line(file_int,headers_des));
labels_des = "C,"+ 		// T_htf_hot
			"C,"+		// T_htf_hot
			"-,"+		// cycle_eta
			"MWe,"+		// cycle_power
			"-,"+		// mc_eta
			"-,"+		// rc_eta
			"-,"+		// t_eta
			"C,"+		// phx_hot_approach
			"C,"+		// phx_cold_approach
			"C,"+		// air_cooler_approach
			"-,"+		// fan_power_frac
			"-,"+		// deltaP_cooler_frac
			// Design solution
				// System
			"C,"+		// T_htf_cold
			"kg/s,"+	// m_dot_htf
			"-,"+		// cycle_eta_solved
			"kg/s,"+	// m_dot_co2
			"-,"+		// f_recomp
				// Compressor
			"MPa,"+		// P_comp_in
			"MPa,"+		// P_comp_out
			"-,"+		// mc_phi
			"-,"+		// mc_tip_ratio
			"-,"+		// mc_n_stages
			"rpm,"+		// mc_N
			"m,"+		// mc_D
			"-,"+ 		// mc_phi_surge
				// Recompressor
			"-,"+		// rc_phi
			"-,"+		// rc_tip_ratio1
			"-,"+		// rc_tip_ratio2
			"-,"+		// rc_n_stages
			"rpm,"+		// rc_N
			"m,"+		// rc_D1
			"m,"+		// rc_D2
			"-,"+		// rc_phi_surge
				// Turbine
			"-,"+		// t_nu
			"-,"+		// t_tip_ratio
			"rpm,"+		// t_N
			"m,"+		// t_D
				// Recuperators
			"kW/K,"+	// recup_UA
			"kW/K,"+	// LTR_UA
			"kW/K,"+	// HTR_UA
				// PHX
			"kW/K,"+	// PHX_UA
			"-,"+		// PHX_eff
			"-,"+		// PHX_NTU
			"C";		// T_co2_PHX_in
outln(file_name, " Design labels were successful? ", write_line(file_int,labels_des));
// Write design point
//outln(file_name, " Design point values were successful? ", write_line(file_int,
		// Design parameters
	write(file_int,to_string(var("T_htf_hot_des"))+",");
	write(file_int,to_string(var("T_amb_des"))+",");
	write(file_int,to_string(var("eta_thermal_des"))+",");
	write(file_int,to_string(var("W_dot_net_des"))+",");
	write(file_int,to_string(var("eta_isen_mc"))+",");
	write(file_int,to_string(var("eta_isen_rc"))+",");
	write(file_int,to_string(var("eta_isen_t"))+",");
	write(file_int,to_string(var("dT_PHX_hot_approach"))+",");
	write(file_int,to_string(var("dT_PHX_cold_approach"))+",");
	write(file_int,to_string(var("dT_mc_approach"))+",");
	write(file_int,to_string(var("fan_power_frac"))+",");
	write(file_int,to_string(var("deltaP_cooler_frac"))+",");
		// Design solution
	write(file_int,to_string(var("T_htf_cold_des"))+",");
	write(file_int,to_string(var("m_dot_htf_des"))+",");
	write(file_int,to_string(var("eta_thermal_calc"))+",");
	write(file_int,to_string(var("m_dot_co2_full"))+",");
	write(file_int,to_string(var("recomp_frac"))+",");
		// Compressor
	write(file_int,to_string(var("P_comp_in"))+",");
	write(file_int,to_string(var("P_comp_out"))+",");	
	write(file_int,to_string(var("mc_phi_des"))+",");
	write(file_int,to_string(var("mc_tip_ratio_des"))+",");
	write(file_int,to_string(var("mc_n_stages"))+",");
	write(file_int,to_string(var("mc_N_des"))+",");
	write(file_int,to_string(var("mc_D"))+",");
	write(file_int,to_string(var("mc_phi_surge"))+",");
		// Recompressor
	write(file_int,to_string(var("rc_phi_des"))+",");
	write(file_int,to_string(var("rc_tip_ratio1_des"))+",");
	write(file_int,to_string(var("rc_tip_ratio2_des"))+",");
	write(file_int,to_string(var("rc_n_stages"))+",");
	write(file_int,to_string(var("rc_N_des"))+",");
	write(file_int,to_string(var("rc_D1"))+",");
	write(file_int,to_string(var("rc_D2"))+",");
	write(file_int,to_string(var("rc_phi_surge"))+",");
		// Turbine
	write(file_int,to_string(var("t_nu_des"))+",");
	write(file_int,to_string(var("t_tip_ratio_des"))+",");
	write(file_int,to_string(var("t_N_des"))+",");
	write(file_int,to_string(var("t_D"))+",");
		// Recuperators
	write(file_int,to_string(var("UA_recup_total"))+",");
	write(file_int,to_string(var("UA_LTR"))+",");
	write(file_int,to_string(var("UA_HTR"))+",");
		// PHX
	write(file_int,to_string(var("UA_PHX"))+",");
	write(file_int,to_string(var("eff_PHX"))+",");
	write(file_int,to_string(var("NTU_PHX"))+",");
	write(file_int,to_string(var("T_co2_PHX_in"))+"\n");
	
// Write off-design headers and labels
headers_od = "m_dot_htf_frac,"+	// -
			"T_amb,"+			// C
			"T_htf_hot,"+		// C
				// Cycle control parameters
			"od_opt_obj,"+	// -
			"od_opt_tol,"+ 	// -
			"P_comp_in,"+	// MPa
			"phi_mc,"+		// -
			"f_recomp,"+	// -
				// Optimizer outputs
			"sim_time,"+	// s
				// System solution
			"cycle_eta,"+	// -
			"P_mc_out,"+	// MPa
			"T_htf_cold,"+	// C
			"m_dot_t_co2,"+ // kg/s
			"W_dot_net,"+ 	// MWe
			"Q_dot_in,"+	// MWt
				// Compressor
			"N_mc,"+			// rpm
			"tip_ratio_mc,"+	// -
				// Recompressor
			"rc_phi1,"+			// -
			"rc_phi2,"+			// -
			"rc_N,"+			// rpm
			"rc_tip_ratio,"+	// -
				// Turbine
			"t_nu,"+			// -
			"t_N,"+				// rpm
			"t_tip_ratio,"+		// -
				// PHX
			"T_co2_PHX_in,"+	// C
			"T_co2_PHX_out,"+	// C
			"phx_eff";			// -
outln(file_name, " Off-design heades were successful? ", write_line(file_int,headers_od));
labels_od = "-,"+	// m_dot_htf_frac
			"C,"+	// T_amb
			"C,"+	// T_htf_hot
				// Cycle control parameters
			"-,"+	// od_opt_obj
			"-,"+ 	// od_opt_tol
			"MPa,"+	// P_comp_in
			"-,"+	// phi_mc
			"-,"+	// f_recomp
				// Optimizer outputs
			"s,"+
				// System solution
			"-,"+		// cycle_eta
			"MPa,"+		// P_mc_out
			"C,"+		// T_htf_cold
			"kg/s,"+	// m_dot_t_co2
			"MWe,"+		// W_dot_net
			"MWt,"+		// Q_dot_in
				// Compressor
			"rpm,"+		// N_Mc
			"-,"+		// tip_ratio_mc
				// Recompressor
			"-,"+		// rc_phi1	
			"-,"+		// rc_phi2
			"rpm,"+		// rc_N
			"-,"+		// rc_tip_ratio
				// Turbine
			"-,"+		// t_nu
			"rpm,"+		// t_N
			"-,"+		// t_tip_ratio
				// PHX
			"C,"+		// T_co2_PHX_in
			"C,"+		// T_co2_PHX_out
			"-";		// phx_eff
outln(file_name, " Off-design labels were successful? ", write_line(file_int,labels_od));
// Write off-design results
n_od_runs = #var("T_amb_od");
for(i=0; i<n_od_runs; i++)
{
//outln(file_name, " Off-design run ", i, " was successful? ", write_line(file_int,
			// Parameters
		write(file_int,to_string(var("m_dot_htf_fracs")[i])+",");
		write(file_int,to_string(var("T_amb_od")[i])+",");
		write(file_int,to_string(var("T_htf_hot_od")[i])+",");
			// Cycle control parameters
		write(file_int,to_string(var("od_opt_obj_code")[i])+",");
		write(file_int,to_string(var("od_opt_conv_tol")[i])+",");
		write(file_int,to_string(var("P_comp_in_od")[i])+",");
		write(file_int,to_string(var("mc_phi_od")[i])+",");
		write(file_int,to_string(var("recomp_frac_od")[i])+",");
			// Optimizer outputs
		write(file_int,to_string(var("sim_time_od")[i])+",");
			// System solution
		write(file_int,to_string(var("eta_thermal_od")[i])+",");
		write(file_int,to_string(var("P_mc_out")[i])+",");
		write(file_int,to_string(var("T_htf_cold_od")[i])+",");
		write(file_int,to_string(var("m_dot_co2_full_od")[i])+",");
		write(file_int,to_string(var("W_dot_net_od")[i])+",");
		write(file_int,to_string(var("Q_dot_od")[i])+",");
			// Compressor
		write(file_int,to_string(var("N_mc_od")[i])+",");
		write(file_int,to_string(var("mc_tip_ratio_od")[i])+",");
			// Recompressor
		write(file_int,to_string(var("rc_phi_1_od")[i])+",");
		write(file_int,to_string(var("rc_phi_2_od")[i])+",");
		write(file_int,to_string(var("rc_N_od")[i])+",");
		write(file_int,to_string(var("rc_tip_ratio_od")[i])+",");
			// Turbine
		write(file_int,to_string(var("t_nu_od")[i])+",");
		write(file_int,to_string(var("t_N_od")[i])+",");
		write(file_int,to_string(var("t_tip_ratio_od")[i])+",");
			// PHX
		write(file_int,to_string(var("T_co2_PHX_in_od")[i])+",");
		write(file_int,to_string(var("T_co2_PHX_out_od")[i])+",");
		write(file_int,to_string(var("phx_eff_od")[i])+"\n");
}
outln("Off design runs complete!");


