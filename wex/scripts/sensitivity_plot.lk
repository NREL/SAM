function sensitivity_plot( data, baseline, label, units )
{
	width = 24;
	n = #data;
	newplot();
	colors = [ [0, 32, 96], [166, 166, 166], [ 0, 176, 240 ], [ 146, 208, 80 ], [ 255, 102, 0] ];
	
	
	lowest = baseline;
	highest = baseline;	
	for( i=0;i<n;i++ )
	{
		low = data[i][4];
		high = data[i][5];
		if ( low < lowest ) lowest = low;
		if ( high > highest ) highest = high;
	}
	
	xmin = lowest - 0.1*baseline;
	xmax = highest + 0.1*baseline;
	xrange = xmax-xmin;
	
	ylab = [];
	for( i=0;i<n;i++ )
	{
		low = data[i][4];
		high = data[i][5];
		
		C = colors[ mod(i,#colors) ];
		plot( [ low ], [n-i], {color=C, thick=width, type='hbar', baseline=baseline});
		plot( [ high ], [n-i], {'color'=C, thick=width, type='hbar', baseline=baseline});
		
		prefix = data[i][6];
		suffix = data[i][7];
		szadj = -1;
		
		c = 'white';
		al = 'left';
		dxdy = [3,0];
		if ( low > xrange )
		{
			al = 'right';
			dxdy = [-3,0];
		}
		else
		{
			dx = abs(low-baseline);
			if ( dx/xrange < 0.05 )
			{
				c = 'black';
				al = 'right';
				dxdy = [-3,0];
			}
		}
		
		annotate( prefix + sprintf('%,',data[i][1]) + suffix, [low, n-i], {size=szadj, color=c, align=al, dxdy=dxdy} ); 
		
		c = 'white';
		al = 'right';
		dxdy=[-3,0];
		if ( high < baseline )
		{
			al = 'left';
			dxdy = [3,0];
		}
		else
		{
			dx = abs(high-baseline);
			if ( dx/highest < 0.05 )
			{
				c = 'black';
				al = 'left';
				dxdy = [3,0];
			}
		}
		
		annotate( prefix + sprintf('%,',data[i][3]) + suffix, [high, n-i], {size=szadj, color=c, align=al, dxdy=dxdy} ); 
		
		// baseline value
		al = 'left';
		dxdy = [3,0];
		c = 'white';
		if ( high < baseline && low < baseline )
			c = 'black';
		if ( high > baseline && low > baseline )
		{
			c = 'black';
			al = 'right';
			dxdy = [-3,0];
		}
		annotate( prefix + sprintf('%,',data[i][2]) + suffix, [baseline, n-i], {size=szadj, color=c, align=al, dxdy=dxdy} ); 
		

		if ( low > baseline && high > low )
			annotate( [ low, n-i+0.4 ], [low, n-i-0.4], {color='white', style='dot'});
		
		if ( high < baseline && low < high )
			annotate( [ high, n-i+0.4 ], [high, n-i-0.4], {color='white', style='dot'});
			
		ylab[#ylab] = [ n-i, data[i][0] ];
		
		if (i > 0)
			annotate( [xmin+0.04*baseline, n-i+0.5], [xmax-0.04*baseline, n-i+0.5], {color='light grey', style='dash', size=0.5} );
	}
		
	plotopt({border=false, showaxes=false, space=[20,0,0,50]});
	axis( 'x1', {show=true, min=xmin,max=xmax} );
	axis( 'x2', {show=true, min=xmin,max=xmax} );
	
	ytitle = 'Key Parameters for ' + label + '\nSensitivity Analysis';
	axis('y1', { label=ytitle, showlabel=true, show=true, type='label', labels=ylab, min=0, max=n+1, ticksizes=[0,0]});

	annotate( [baseline,0], [baseline,n+1], {type='line', size=2, color='white'});
	annotate( [baseline,0], [baseline,-0.5], {type='line', size=2, arrow='filled'});
	annotate( 'Baseline ' + label + ' = ' + sprintf('%g ', baseline) + units, [baseline,-1], {align='center'});
	
	plotopt( {window=[700,400/5*n]} );
}


/*
										VALUES SHOWN ON BARS    OUTPUT       BAR LABELING
	Category name and units            idwn    base  iup      low   high    prefix  suffix 
	*/
wind_data = [
[ 'CapEx\n($/kW)',                     1396,  1710, 3176,     58,   110,    '$ ',    '' ],
[ 'OpEx\n($/MWh)',                        4,    15,   30,     63,    87,    '$ ',    '' ],
[ 'Net Capacity Factor',                 51,    40,   18,     51,   142,    ' ',     ' %' ],
[ 'Discount Rate\n(nominal, after tax)',  8,    8.7, 9.4,     53,    77,    '',      ' %' ],
[ 'Operational Life\n(years)',           30,    20,   25,     57,    61,    '',      '' ]
];

sensitivity_plot( wind_data, 65, 'LCOE', '$/MWh' );