////////////////////////////////////////////////////////////////////////////////
/*

This script downloads a wind data file in the SAM SRW format from the NREL
WIND Toolkit dataset for a given latitude and longitude.
	
See API documentation at
https://developer.nrel.gov/docs/wind/wind-toolkit/wtk-srw-download/

**Note** As of SAM 2022.11.21 r2, we recommend using wind resource data from
the wtk-download endpoint instead of the wtk-srw-download endpoint because it
provides access to subhourly data, and uses the new SAM CSV format for Wind
that is consistent with files from other NREL Developer WIND Toolkit API
endpoints and with RE Explorer.

Tested in SAM 2020.11.21 r1

*/
////////////////////////////////////////////////////////////////////////////////

// To use this API outside of SAM, get your own API key from https://developer.nrel.gov
// and set api_key and api_email to values for your key.
api_key = '<SAMAPIKEY>';
api_email = '<USEREMAIL>';

year = '2008'; // available years 2007 - 2014
lat = '40';
lon = '-116';
height = '120'; // available heights 10, 40, 60, 80, 100, 120, 140, 160, 200. Use comma-separated list to download more than one height.

// set the .srw file name to store the downloaded data
path = choose_dir( cwd(), 'Choose Folder to Store SRW File' );
fname = 'wind_toolkit_' + to_string( year ) + '_' + to_string( lat ) + '_' + to_string ( lon ) + '_' + to_string( height ) + 'm.srw';
f = path +'/' + fname;

// special NREL Developer API endpoint for SAM
url = 'https://developer.nrel.gov/api/wind-toolkit/v2/wind/wtk-srw-download?year=<YEAR>&lat=<LAT>&lon=<LON>&hubheight=<HUBHEIGHT>&api_key=<YOURAPIKEY>&email=<YOUREMAIL>';
url = replace(url, '<YEAR>', year);
url = replace(url, '<LAT>', lat);
url = replace(url, '<LON>', lon);
url = replace(url, '<HUBHEIGHT>', height); 
url = replace(url, '<YOURAPIKEY>', api_key);
url = replace(url, '<YOUREMAIL>', api_key);

// download file
msg = '';
ok = curl( url, { 'file' = f , 'message' = msg } );

// check downloaded file
if ( ok ) // curl() function returned a file
{
	x = json_file( f );
	if ( typeof( x ) == 'number' ) // assume file contains wind data file
	{
		outln( 'Wind data file downloaded to ' + f );
		browse( path_only( f ) );
	}
	else // x is a json table
	{
		outln(x);
	}	
}
else // curl() function failed to return a file, url could be malformed
{
	outln( 'Download failed: ' + url );
	outln( msg );
}