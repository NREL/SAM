<<<<<<< HEAD
// Create SAM SDK Simulation Core (SSC) object
ssc = ssc_create();

// Set input pariables for the compute module
ssc_var( ssc, 'celltype', 'multiSi' );
ssc_var( ssc, 'Vmp', 30 );
ssc_var( ssc, 'Imp', 6 );
ssc_var( ssc, 'Voc', 37 );
ssc_var( ssc, 'Isc', 7 );
ssc_var( ssc, 'alpha_isc', 0.004 );
ssc_var( ssc, 'beta_voc', -0.11 );
ssc_var( ssc, 'gamma_pmp', -0.41 );
ssc_var( ssc, 'Nser', 60 );
ssc_var( ssc, 'Tref', 46 );

// Run the compute module and retrieve outputs or errors
result = ssc_exec( ssc, '6parsolve' );

if ( 0 == result )
{
	a = ssc_var( ssc, 'a' );
	Il = ssc_var( ssc, 'Il' );
	Io = ssc_var( ssc, 'Io' );
	Rs = ssc_var( ssc, 'Rs' );
	Rsh = ssc_var( ssc, 'Rsh' );
	Adj = ssc_var( ssc, 'Adj' );
	
	outln(sprintf( 'a=%g Il=%g Io=%g Rs=%g Rsh=%g Adj=%g', a, Il, Io, Rs, Rsh, Adj ) );
}
else
{
	outln( 'error: ' + result );
}

// Free up the SSC object
ssc_free( ssc );


=======
// Create SAM SDK Simulation Core (SSC) object
ssc = ssc_create();

// Set input pariables for the compute module
ssc_var( ssc, 'celltype', 'multiSi' );
ssc_var( ssc, 'Vmp', 30 );
ssc_var( ssc, 'Imp', 6 );
ssc_var( ssc, 'Voc', 37 );
ssc_var( ssc, 'Isc', 7 );
ssc_var( ssc, 'alpha_isc', 0.004 );
ssc_var( ssc, 'beta_voc', -0.11 );
ssc_var( ssc, 'gamma_pmp', -0.41 );
ssc_var( ssc, 'Nser', 60 );
ssc_var( ssc, 'Tref', 46 );

// Run the compute module and retrieve outputs or errors
result = ssc_exec( ssc, '6parsolve' );

if ( 0 == result )
{
	a = ssc_var( ssc, 'a' );
	Il = ssc_var( ssc, 'Il' );
	Io = ssc_var( ssc, 'Io' );
	Rs = ssc_var( ssc, 'Rs' );
	Rsh = ssc_var( ssc, 'Rsh' );
	Adj = ssc_var( ssc, 'Adj' );
	
	outln(sprintf( 'a=%g Il=%g Io=%g Rs=%g Rsh=%g Adj=%g', a, Il, Io, Rs, Rsh, Adj ) );
}
else
{
	outln( 'error: ' + result );
}

// Free up the SSC object
ssc_free( ssc );


>>>>>>> 2c85b0ce6a18646fb532eb72a604d646517b67ae
