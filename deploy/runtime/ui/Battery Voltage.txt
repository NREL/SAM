Battery Voltage
1007
558
20
GroupBox

1
7
Name
5
18
Voltage Properties
X
3
9
Y
3
6
Width
3
985
Height
3
528
Caption
5
18
Voltage Properties
Bold
2
1
Numeric

1
16
Name
5
11
batt_C_rate
X
3
237
Y
3
324
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
9
Numeric

1
16
Name
5
17
batt_Qexp_percent
X
3
237
Y
3
432
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
13
Numeric

1
16
Name
5
17
batt_Qnom_percent
X
3
237
Y
3
459
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
14
Numeric

1
16
Name
5
9
batt_Vexp
X
3
237
Y
3
378
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
11
Numeric

1
16
Name
5
10
batt_Vfull
X
3
237
Y
3
351
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
10
Numeric

1
16
Name
5
9
batt_Vnom
X
3
237
Y
3
405
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
12
Numeric

1
16
Name
5
17
batt_Vnom_default
X
3
171
Y
3
54
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
7
Numeric

1
16
Name
5
17
batt_bank_voltage
X
3
171
Y
3
27
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
3
Label

1
12
Name
5
17
batt_chem_message
X
3
21
Y
3
258
Width
3
297
Height
3
63
Caption
5
94
For vandium redox, only enter the voltage at 50% SOC as the nominal voltage, and resistance.  
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1
Divider

1
9
Name
5
20
batt_modeled_voltage
X
3
345
Y
3
171
Width
3
294
Height
3
22
Orientation
3
0
Colour
4
120
120
120
255
Caption
5
13
Voltage table
Bold
2
1
Divider

1
9
Name
5
22
batt_modeled_voltage19
X
3
27
Y
3
174
Width
3
288
Height
3
16
Orientation
3
0
Colour
4
120
120
120
255
Caption
5
13
Voltage model
Bold
2
1
Numeric

1
16
Name
5
15
batt_resistance
X
3
171
Y
3
81
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
8
RadioChoice

1
10
Name
5
19
batt_voltage_choice
X
3
69
Y
3
141
Width
3
570
Height
3
27
Selection
3
0
Items
6
2
Use voltage model
Use input voltage table
ShowCaptions
2
1
Horizontal
2
1
TabOrder
3
4294967295
Divider

1
9
Name
5
21
batt_voltage_choice18
X
3
30
Y
3
120
Width
3
618
Height
3
16
Orientation
3
0
Colour
4
120
120
120
255
Caption
5
27
Voltage curve specification
Bold
2
1
Label

1
12
Name
5
18
batt_voltage_label
X
3
318
Y
3
24
Width
3
567
Height
3
99
Caption
5
299
The desired bank voltage is used to calculate the interal battery configuration using the provided cell nominal voltage.  If you've manually specified the cell configuration, the desired bank voltage input will not be available. Cell resistance is used to compute the battery temperature and voltage
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1
DataMatrix

1
23
Name
5
19
batt_voltage_matrix
X
3
354
Y
3
255
Width
3
340
Height
3
201
PasteAppendRows
2
1
PasteAppendCols
2
0
ShowRows
2
1
ShowRowLabels
2
0
RowLabels
5
0
ShadeR0C0
2
0
ShadeC0
2
0
ShowCols
2
0
ShowColLabels
2
1
ColLabels
5
39
Depth-of-discharge (%),Cell voltage (V)
NumRowsLabel
5
5
Rows:
NumColsLabel
5
5
Cols:
Layout
3
1
ChoiceColumn
3
4294967295
Choices
5
15
Choice1,Choice2
HideColumn
3
4294967295
ShowColumn
3
4294967295
ColorMap
2
0
Label

1
12
Name
5
20
batt_voltage_message
X
3
21
Y
3
195
Width
3
297
Height
3
63
Caption
5
96
There is no voltage model in SAM for iron-flow batteries.  Other chemistries have models for use
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1
Label

1
12
Name
5
22
batt_voltage_message14
X
3
360
Y
3
195
Width
3
498
Height
3
108
Caption
5
268
 For iron flow batteries, enter a table of voltage vs. depth-of-discharge which will be linearly interpolated between in the simulation.  You can also choose this option for other battery chemistries.  The interpolated voltage is updated to include internal resistance
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1
Plot

1
5
Name
5
17
batt_voltage_plot
X
3
693
Y
3
306
Width
3
295
Height
3
174

11
batt_C_rate
3
1
C-rate of discharge curve
 
Battery
0
2
1
1
1
1
0.1
Default
batt_Qexp_percent
3
1
Charge removed at exponential point
%
Battery
0
2
1
1
1
1
1
Default
batt_Qnom_percent
3
1
Charge removed at nominal point
%
Battery
0
2
1
1
1
1
95
 
batt_Vexp
3
1
Exponential zone cell voltage
V
Battery
0
2
1
1
1
1
2.05
 
batt_Vfull
3
1
Fully charged cell voltage
V
Battery
0
2
1
1
1
1
2.2
 
batt_Vnom
3
1
Nominal zone cell voltage
V
Battery
0
2
1
1
1
1
2.04
 
batt_Vnom_default
3
1
Cell nominal voltage
V (DC)
Battery
0
2
1
1
1
1
2
Default
batt_bank_voltage
3
1
Desired bank voltage
V (DC)
Battery
0
2
1
1
1
1
450
Default
batt_resistance
3
1
Cell internal resistance
Ohm
Battery
0
2
1
1
1
1
0.1
Default
batt_voltage_choice
3
1
Battery voltage model choice
 
Battery
0
1
1
1
1
1
0
Default
batt_voltage_matrix
3
3
Battery voltage table input
 
Battery
40
Depth of discharge [%]| Cell voltage [V]
3
1
3
6
2
0 1.2 
20 1.1 
40 1.05 
60 1 
80 0.95 
100 0.5 

Default

0
4865
on_load{'Battery Voltage'} = define()
{
	set_voltage_choice(false);
	update_voltage_plot();

	on_change{'batt_voltage_choice'};
	on_change{'batt_bank_voltage'};
	on_change{'batt_C_rate'};
	on_change{'batt_resistance'};
	on_change{'batt_Vfull'};
	on_change{'batt_Vexp'};
	on_change{'batt_Vnom'};
	on_change{'batt_Vnom_default'};
	on_change{'batt_Qexp_percent'};
	on_change{'batt_Qnom_percent'};
	on_change{'batt_voltage_matrix'};
};
on_change{'batt_voltage_choice'} = define()
{		
	set_voltage_choice(false);
	update_voltage_plot();
};
on_change{'batt_bank_voltage'} = define(){battsize_warning_check();};
on_change{'batt_C_rate'} = define(){update_voltage_plot();};
on_change{'batt_resistance'} = define(){update_voltage_plot();};
on_change{'batt_Vfull'} = define(){update_voltage_plot();};
on_change{'batt_Vexp'} = define(){update_voltage_plot();};
on_change{'batt_Vnom'} = define(){update_voltage_plot();};
on_change{'batt_Vnom_default'} = define()
{
	update_voltage_plot();
	battsize_warning_check();
};
on_change{'batt_Qexp_percent'} = define(){update_voltage_plot();};
on_change{'batt_Qnom_percent'} = define(){update_voltage_plot();};
on_change{'batt_voltage_matrix'} = define(){update_voltage_plot();};

function set_voltage_choice(update_defaults)
{
	is_vanadium = (value('batt_chem') == 2);
	is_iron = (value('batt_chem') == 3);
						
	// need to disable inputs for voltage model for iron and vanadium
	model_inputs_on = !value('batt_voltage_choice');
	if (is_vanadium)
		model_inputs_on = false;
		
	// never allow iron to use a voltage model (doesn't exist)
	if (is_iron && model_inputs_on)
		value('batt_voltage_choice', 1);

	//show_voltage_model_inputs(show_model_inputs);	
	enable_voltage_model_inputs(model_inputs_on);
}

function show_voltage_model_inputs(show_inputs)
{
	show('batt_C_rate', show_inputs);
	show('batt_Vfull', show_inputs);
	show('batt_Vexp', show_inputs);
	show('batt_Vnom', show_inputs);
	show('batt_Qexp_percent', show_inputs);
	show('batt_Qnom_percent', show_inputs);
}

function enable_voltage_model_inputs(on)
{
	enable('batt_C_rate', on);
	enable('batt_Vfull', on);
	enable('batt_Vexp', on);
	enable('batt_Vnom', on);
	enable('batt_Qexp_percent', on);
	enable('batt_Qnom_percent', on);
	
	// if voltage model not enabled, enable table input
	enable('batt_voltage_matrix', !on);
}
function update_voltage_plot()
{
	table = cell_voltage_vs_dod();
	Vfull = table{'Vfull'};
	DOD_vect = table{'DOD'};
	V_vect = table{'V'};
	clearplot( 'batt_voltage_plot');
	plot( DOD_vect, V_vect, {'thick'=2, 'type'='line', 'color'='blue'});
	plotopt( {'title'='Voltage Discharge', 'legend'=false });
	axis( 'x1', {'label'='Depth of Discharge (%)', 'min'=-0.5, 'max'=100+0.5});
	axis( 'y1', {'label'='Voltage (V)', 'min'=min(V_vect), 'max'=Vfull+0.1});
	
	// also update calendar life plot, since depends on voltage in model case
	mode = value('batt_calendar_choice');
	if (mode == 1){
		// hack, directly calling plot function results in non-embedded plot
		value('batt_calendar_choice', 2);
		value('batt_calendar_choice', 1);
	}

	
}

function cell_voltage_vs_dod()
{
	voltage_mode = value('batt_voltage_choice');
	DOD_vect = [];
	V_vect = [];
	Vfull = 0;
	
	if (voltage_mode == 0)
	{
		Qfull = ${batt_Qfull};

		Qnom_percent = ${batt_Qnom_percent};
		Qexp_percent = ${batt_Qexp_percent};
		Vfull = ${batt_Vfull};
		Vexp = ${batt_Vexp};
		Vnom = ${batt_Vnom};
		C_rate = ${batt_C_rate};
		eta = 0.995;
		
		// strange bug, after simulation Qnom is calculated erroneously
		Qnom = Qnom_percent*Qfull*0.01;
		Qexp = Qexp_percent*Qfull*0.01;
		
		I = Qfull*C_rate;
		R = ${batt_resistance};//Vnom*(1-eta)/(C_rate*Qnom);
		A = Vfull - Vexp;
		B = 3/Qexp;
		K = ((Vfull - Vnom + A*(exp(-B*Qnom) - 1))*(Qfull - Qnom))/(Qnom);
		E0 = Vfull + K + R*I - A;
		
		q0 = Qfull;
		V_vect[0] = Vfull;
		t_vect[0] = 0;
		DOD_vect[0] = 0;
		stop = 1000; // just run for 1000 steps, it will cutoff before
		count = 0;

		//logmsg('Vfull: ' + Vfull + ' Vexp: ' + Vexp + ' Vnom: ' + Vnom + ' Qfull: ' + Qfull + ' Qexp: ' + Qexp + ' Qnom: ' + Qnom + 'Qnom_percent: ' + Qnom_percent + ' C: ' + C_rate); 
		//logmsg('A: ' + A + ' B: ' + B + ' K: ' + K + 'R: ' + R + ' EO: ' + E0 ); 

		for (i = 1; i <= stop; i++){
			count++;
			t = i*0.1;
			q0 = Qfull - I*t;
			V = E0 - R*I - K*(Qfull/(Qfull-I*t)) + A*exp(-B*I*t);
			DOD = (1.-(q0/Qfull))*100;
			//logmsg('t: ' + t + ' V: ' + V + 'DOD: ' + DOD);
			if ( (V < Vfull/2) || (V > 2*Vfull) || DOD > 100)
				break;
			else
			{
				t_vect[count] = t;
				V_vect[count] = V;
				DOD_vect[count] = DOD;
			}
		}
	}
	else
	{
		voltage_matrix = value('batt_voltage_matrix');
		for (r = 0; r != #voltage_matrix; r++)
		{
			row = voltage_matrix[r];
			DOD_vect[r] = row[0];
			V_vect[r] = row[1];
		}
		Vfull = max(V_vect);
	}
	
	table{'DOD'} = DOD_vect;
	table{'V'} = V_vect;
	table{'Vfull'} = Vfull;
	return table;
}