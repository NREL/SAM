Battery Current and Capacity
1051
429
27
GroupBox

1
8
Name
5
21
Current and Capacity 
X
3
6
Y
3
3
Width
3
1042
Height
3
421
Tool Tip
5
0
Caption
5
21
Current and Capacity 
Bold
2
1
Numeric

1
17
Name
5
22
batt_C_rate_max_charge
X
3
186
Y
3
348
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
16
Numeric

1
17
Name
5
25
batt_C_rate_max_discharge
X
3
186
Y
3
321
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
17
Numeric

1
17
Name
5
10
batt_Qfull
X
3
117
Y
3
33
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
1
Numeric

1
17
Name
5
28
batt_cell_current_charge_max
X
3
789
Y
3
78
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
5
Numeric

1
17
Name
5
31
batt_cell_current_discharge_max
X
3
789
Y
3
105
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
6
Numeric

1
17
Name
5
26
batt_cell_power_charge_max
X
3
789
Y
3
24
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
3
Numeric

1
17
Name
5
29
batt_cell_power_discharge_max
X
3
789
Y
3
51
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4
Numeric

1
17
Name
5
27
batt_computed_bank_capacity
X
3
186
Y
3
159
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
18
Label

1
13
Name
5
32
batt_computed_cells_series_label
X
3
30
Y
3
240
Width
3
153
Height
3
24
Tool Tip
5
0
Caption
5
15
Cells in series
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
0
AlignRight
2
1
AlignTop
2
0
Label

1
13
Name
5
28
batt_computed_parallel_label
X
3
30
Y
3
267
Width
3
153
Height
3
24
Tool Tip
5
0
Caption
5
19
Strings in parallel
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
0
AlignRight
2
1
AlignTop
2
0
Numeric

1
17
Name
5
20
batt_computed_series
X
3
186
Y
3
240
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
0
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
7
Numeric

1
17
Name
5
27
batt_computed_stacks_series
X
3
186
Y
3
294
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
0
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
20
Numeric

1
17
Name
5
21
batt_computed_strings
X
3
186
Y
3
267
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
0
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
8
Numeric

1
17
Name
5
21
batt_computed_voltage
X
3
186
Y
3
186
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
19
Numeric

1
17
Name
5
23
batt_current_charge_max
X
3
573
Y
3
321
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
22
RadioChoice

1
11
Name
5
19
batt_current_choice
X
3
321
Y
3
27
Width
3
222
Height
3
102
Tool Tip
5
0
Selection
3
0
Items
6
3
Power limited
Current limited
Limit both current and power
ShowCaptions
2
1
Horizontal
2
0
TabOrder
3
2
Numeric

1
17
Name
5
26
batt_current_discharge_max
X
3
573
Y
3
294
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
23
Numeric

1
17
Name
5
14
batt_num_cells
X
3
186
Y
3
213
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
0
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
20
Numeric

1
17
Name
5
26
batt_power_charge_max_kwac
X
3
573
Y
3
240
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Numeric

1
17
Name
5
26
batt_power_charge_max_kwdc
X
3
573
Y
3
186
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Numeric

1
17
Name
5
29
batt_power_discharge_max_kwac
X
3
573
Y
3
213
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Numeric

1
17
Name
5
29
batt_power_discharge_max_kwdc
X
3
573
Y
3
159
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Label

1
13
Name
5
17
batt_size_warning
X
3
12
Y
3
387
Width
3
714
Height
3
24
Tool Tip
5
0
Caption
5
0
TextColour
4
255
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1
Numeric

1
17
Name
5
18
batt_time_capacity
X
3
573
Y
3
267
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Label

1
13
Name
5
25
computed_properties_label
X
3
720
Y
3
165
Width
3
318
Height
3
216
Tool Tip
5
0
Caption
5
448
The computed properties are the battery bank properties SAM uses for simulations. The nominal bank voltage is the product of the cell nominal voltage and number of cells in series. The nominal voltage is the product of the cell capacity, bank voltage, and number of strings in parallel.  The C-rate is a measure of how much of the battery capacity can be charged or discharged per hour.  The max power is computed from the max C-rate of discharge. 
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1
Divider

1
10
Name
5
9
object 22
X
3
24
Y
3
138
Width
3
1020
Height
3
16
Tool Tip
5
0
Orientation
3
0
Colour
4
120
120
120
255
Caption
5
19
Computed Properties
Bold
2
1

22
batt_C_rate_max_charge
3
1
Max C-rate of charge
per/hour
Battery Current and Capacity
0
8
1
1
1
1
1
Default
batt_C_rate_max_discharge
3
1
Max C-rate of discharge
per/hour
Battery Current and Capacity
0
8
1
1
1
1
1
Default
batt_Qfull
3
1
Cell capacity
Ah
Battery Current and Capacity
0
2
1
1
1
1
5
Default
batt_Qfull_flow
3
1
Cell capacity
Ah
Battery Current and Capacity
0
8
1
1
1
1
0
Default
batt_cell_current_charge_max
3
1
Cell max current charge
A
Battery Current and Capacity
0
2
1
1
1
1
10
Default
batt_cell_current_discharge_max
3
1
Cell max current discharge
A
Battery Current and Capacity
0
2
1
1
1
1
10
Default
batt_cell_power_charge_max
3
1
Cell max power charge
Wdc
Battery Current and Capacity
0
2
1
1
1
1
2
Numeric
batt_cell_power_discharge_max
3
1
Cell max power discharge
Wdc
Battery Current and Capacity
0
2
1
1
1
1
2
Numeric
batt_computed_bank_capacity
3
1
Nominal bank capacity
kWh (DC)
Battery Current and Capacity
0
8
1
1
1
1
0
Default
batt_computed_series
3
1
Cells in series
 
Battery Current and Capacity
0
9
1
1
1
1
0
Default
batt_computed_stacks_series
3
1
Stacks in series
 
Battery Current and Capacity
0
8
1
1
1
1
1
Numeric
batt_computed_strings
3
1
Strings in parallel
 
Battery Current and Capacity
0
9
1
1
1
1
1
Default
batt_computed_voltage
3
1
Nominal bank voltage
V (DC)
Battery Current and Capacity
0
8
1
1
1
1
0
Default
batt_current_charge_max
3
1
Maximum charge current
A
Battery Current and Capacity
0
8
1
1
1
1
100
Default
batt_current_choice
3
1
Flow battery current or power limited
 
Battery Current and Capacity
59
Power limited|Current Limited| Limit both current and power
1
1
1
1
1
1
RadioChoice
batt_current_discharge_max
3
1
Maximum discharge current
A
Battery Current and Capacity
0
8
1
1
1
1
100
Default
batt_num_cells
3
1
Total number of cells
 
Battery Current and Capacity
0
8
1
1
1
1
1
Numeric
batt_power_charge_max_kwac
3
1
Maximum charge power (AC)
kWac
Battery Current and Capacity
0
8
1
1
1
1
0
Numeric
batt_power_charge_max_kwdc
3
1
Maximum charge power (DC)
kWdc
Battery Current and Capacity
0
8
1
1
1
1
0
Default
batt_power_discharge_max_kwac
3
1
Maximum discharge power (AC)
kWac
Battery Current and Capacity
0
8
1
1
1
1
0
Numeric
batt_power_discharge_max_kwdc
3
1
Maximum discharge power (DC)
kWdc
Battery Current and Capacity
0
8
1
1
1
1
0
Default
batt_time_capacity
3
1
Time at maximum power
h
Battery Current and Capacity
0
8
1
1
1
1
2
Default

10783
equations{ '$MIMO$ batt_bank_computed' } = define() {

	choice = ${batt_size_choice};
	isflow = ${batt_chem} == 2 || ${batt_chem} == 3;
	
	// if user input AC quantities, convert to DC
	batt_bank_power = ${batt_bank_power};
	batt_bank_capacity = ${batt_bank_size};
	inv_eff = 96;
	
	if (batt_bank_power == 0 || batt_bank_capacity == 0)
	{
		${batt_current_charge_max} = 0;
		${batt_current_discharge_max} = 0;
		${batt_computed_voltage} = 0;
		${batt_computed_series} = 0;
		${batt_computed_strings} = 0;
		${batt_computed_stacks_series} = 0;
		${batt_num_cells} = 0;
		${batt_computed_bank_capacity} = 0;
		${batt_power_discharge_max_kwdc} = 0;
		${batt_power_charge_max_kwdc} = 0;
		${batt_time_capacity} = 0;
		${batt_C_rate_max_charge} = 0;
		${batt_C_rate_max_discharge} = 0;
		${batt_power_charge_max_kwac} = 0;
		${batt_power_discharge_max_kwac} = 0;
		return;
	}
	
	// AC-coupled
	if (${batt_ac_or_dc} == 1)
	{
		// Size for AC discharge capacity
		if (${batt_bank_size_dc_ac} == 1)
			batt_bank_capacity /= (${batt_dc_ac_efficiency}*0.01);
		if (${batt_bank_power_dc_ac} == 1)
			batt_bank_power /= (${batt_dc_ac_efficiency}*0.01);
	}
	// DC-coupled
	else 
	{ 
		inv_model = ${inverter_model};
		if (inv_model == 0){
			inv_eff = ${inv_snl_eff_cec};
		}
		else if (inv_model == 1){
			inv_eff = ${inv_ds_eff};
		}
		else if (inv_model == 2){
			inv_eff = ${inv_pd_eff};
		}
		else if (inv_model == 3){
			inv_eff = ${inv_cec_cg_eff_cec};
		}
		inv_eff *= ${batt_dc_dc_efficiency} * 0.01 * 0.01;
		
		// Size for AC side discharge
		if (${batt_bank_size_dc_ac} == 1)
			batt_bank_capacity /= inv_eff;
		if (${batt_bank_power_dc_ac} == 1)
			batt_bank_power /= inv_eff;
	}
	
	
	// conventional battery
	if (!isflow)
	{
        batt_C_rate_max_discharge = 0;
        batt_C_rate_max_charge = 0;
        string_current = 0;
        bank_desired_voltage = 0;
        num_strings = 0;
        num_series = 0;
        num_parallel = 0;
    
		// auto-sizing
		if (choice==0)
		{
			batt_C_rate_max_discharge = batt_bank_power / batt_bank_capacity;
			batt_C_rate_max_charge = batt_C_rate_max_discharge;
			string_current = ${batt_Qfull}*batt_C_rate_max_discharge;
			bank_desired_voltage = ${batt_bank_voltage};
			num_series = ceil(bank_desired_voltage / ${batt_Vnom_default});
			num_strings = round(batt_bank_capacity * 1000 / (${batt_Qfull} * ${batt_Vnom_default}*num_series));	
		}
		// manual sizing
		else
		{
			num_series = ${batt_bank_ncells_serial};
			num_strings = ${batt_bank_nstrings};
			batt_C_rate_max_discharge = ${batt_C_rate_max_discharge_input};
			batt_C_rate_max_charge = ${batt_C_rate_max_charge_input};
		}
		
		batt_computed_voltage = ${batt_Vnom_default}*num_series;
		bank_capacity = ${batt_Qfull} *batt_computed_voltage* num_strings * 0.001;
		bank_power =  bank_capacity*batt_C_rate_max_discharge;
		bank_power_charge = bank_capacity*batt_C_rate_max_charge;
		
		${batt_computed_voltage} = batt_computed_voltage;
		${batt_computed_series} = num_series;
		${batt_computed_strings} = num_strings; 
		${batt_num_cells} = num_series * num_strings;
		${batt_computed_bank_capacity} = bank_capacity;
		${batt_power_discharge_max_kwdc} = bank_power;
		${batt_power_charge_max_kwdc} = bank_power_charge;
		${batt_time_capacity} = bank_capacity/bank_power;
		${batt_C_rate_max_charge} = batt_C_rate_max_charge;
		${batt_C_rate_max_discharge} = batt_C_rate_max_discharge;
		${batt_current_charge_max} =  ${batt_Qfull} * num_strings * batt_C_rate_max_charge;
		${batt_current_discharge_max} =  ${batt_Qfull} * num_strings * batt_C_rate_max_discharge;
	}
    // flow battery
	else 
	{
		power_limited = ${batt_current_choice} == 0;
		current_limited = !power_limited;
        num_series = 0;
        num_stacks_parallel = 0;
        num_stacks_series = 1;
        batt_computed_voltage = 0;
        bank_capacity = 0;
        bank_current_discharge = 0;
        bank_current_charge = 0;
		bank_power_discharge = 0;
        bank_power_charge = 0;
		
		// auto-sizing
		if (choice==0)
		{
			// flow battery capacity is always exactly defined by electrolyte in tank
			bank_capacity = batt_bank_capacity;
			num_series = ceil(${batt_bank_voltage} / (num_stacks_series * ${batt_Vnom_default}));
			batt_computed_voltage = ${batt_Vnom_default}*num_series * num_stacks_series;
			
			if (power_limited)
				num_stacks_parallel = ceil(batt_bank_power/(${batt_cell_power_discharge_max}*num_series*num_stacks_series*0.001));
			else if (current_limited)
				num_stacks_parallel = ceil(batt_bank_power/(batt_computed_voltage * ${batt_cell_current_discharge_max} * 0.001));

		}
		// manual sizing
		else
		{
			num_series = ${batt_bank_ncells_serial};
			num_stacks_parallel = ${batt_bank_nstrings};
			num_stacks_series = ${batt_bank_nseries_stacks};
			bank_capacity = ${batt_bank_size_specify};
			batt_computed_voltage = ${batt_Vnom_default}*num_series * num_stacks_series;
		}

		if (power_limited)
		{
			bank_power_discharge =  ${batt_cell_power_discharge_max} * 0.001 * num_series * num_stacks_series * num_stacks_parallel;
			bank_power_charge =  ${batt_cell_power_charge_max} * 0.001 * num_series * num_stacks_series * num_stacks_parallel;
			bank_current_discharge = bank_power_discharge * 1000 / batt_computed_voltage;
			bank_current_charge = bank_power_charge * 1000 / batt_computed_voltage;
		}
		else if (current_limited)
		{
			bank_current_discharge = num_stacks_parallel *  ${batt_cell_current_discharge_max};
			bank_current_charge = num_stacks_parallel *  ${batt_cell_current_charge_max};
			bank_power_discharge =  batt_computed_voltage * bank_current_discharge * 0.001;
			bank_power_charge =  batt_computed_voltage * bank_current_charge * 0.001;
		}

		// C-rates are derived.  Flow battery power/energy is fully decoupled
		batt_C_rate_max_discharge = bank_power_charge / bank_capacity;
		batt_C_rate_max_charge = bank_power_discharge / bank_capacity;
		
		${batt_current_charge_max} = bank_current_charge;
		${batt_current_discharge_max} = bank_current_discharge;
		${batt_computed_voltage} = batt_computed_voltage;
		${batt_computed_series} = num_series;
		${batt_computed_strings} = num_stacks_parallel;
		${batt_computed_stacks_series} = num_stacks_series;
		${batt_num_cells} = num_series * num_stacks_series * num_stacks_parallel;
		${batt_computed_bank_capacity} = bank_capacity;
		${batt_power_discharge_max_kwdc} = bank_power_discharge;
		${batt_power_charge_max_kwdc} = bank_power_charge;
		${batt_time_capacity} = bank_capacity/bank_power_discharge;
		${batt_C_rate_max_charge} = batt_C_rate_max_charge;
		${batt_C_rate_max_discharge} = batt_C_rate_max_discharge;
	}
	
	// Calculate AC charge and discharge power
	batt_bank_power_discharge_ac = 0;
	batt_bank_power_charge_ac = 0;
	if (isflow) // flow batteries
	{
		p_discharge = bank_power_discharge;
        p_charge = bank_power_charge;
	}
	else // chemical batteries
	{
		if ( choice == 0 ) // Set bank capacity
		{
			p_discharge = ${batt_bank_power};
			p_charge = p_discharge;
		}
		else // specify cells
		{
			p_discharge = bank_power;
			p_charge = bank_power_charge;
		}	
	}
	if ( choice == 0 ) // Set desired bank size
	{
		if (${batt_ac_or_dc} == 1) // AC-connected
		{
			if ( ${batt_bank_power_dc_ac} == 1 ) // Bank power units in AC kW
			{
				batt_bank_power_discharge_ac = p_discharge;
				batt_bank_power_charge_ac = p_charge;
				batt_bank_power_discharge_dc = batt_bank_power_discharge_ac / (${batt_dc_ac_efficiency}*0.01);
				batt_bank_power_charge_dc = batt_bank_power_charge_ac * (${batt_ac_dc_efficiency}*0.01);
				${batt_power_charge_max_kwdc} = batt_bank_power_charge_dc;
				${batt_power_discharge_max_kwdc} = batt_bank_power_discharge_dc;
				${batt_current_charge_max} = batt_bank_power_charge_dc*1000/batt_computed_voltage;
				${batt_current_discharge_max} = batt_bank_power_discharge_dc*1000/batt_computed_voltage;
				${batt_C_rate_max_discharge} = batt_bank_power_discharge_dc/bank_capacity;
				${batt_C_rate_max_charge} = batt_bank_power_charge_dc/bank_capacity;
				
			}
			else // Bank power units in DC kW
			{
				batt_bank_power_discharge_ac = p_discharge * (${batt_dc_ac_efficiency}*0.01);
				batt_bank_power_charge_ac =  p_charge / (${batt_ac_dc_efficiency}*0.01);
				
				
				//batt_bank_power_discharge_dc = batt_bank_power_discharge_ac / (inv_eff*0.01);
				//batt_bank_power_charge_dc = batt_bank_power_charge_ac * (inv_eff*0.01);
				//${batt_power_charge_max_kwdc} = batt_bank_power_charge_dc;
				//${batt_power_discharge_max_kwdc} = batt_bank_power_discharge_dc;
			}
			
		}
		else // DC-connected
		{
			if ( ${batt_bank_power_dc_ac} == 1) // Bank power units in AC kW
			{
				batt_bank_power_discharge_ac = p_discharge;
				batt_bank_power_charge_ac = p_charge;
				batt_bank_power_discharge_dc = batt_bank_power_discharge_ac / (inv_eff);
				batt_bank_power_charge_dc = batt_bank_power_charge_ac * (inv_eff);
				${batt_power_charge_max_kwdc} = batt_bank_power_charge_dc;
				${batt_power_discharge_max_kwdc} = batt_bank_power_discharge_dc;
				${batt_current_charge_max} = batt_bank_power_charge_dc*1000/batt_computed_voltage;
				${batt_current_discharge_max} = batt_bank_power_discharge_dc*1000/batt_computed_voltage;
				${batt_C_rate_max_discharge} = batt_bank_power_discharge_dc/bank_capacity;
				${batt_C_rate_max_charge} = batt_bank_power_charge_dc/bank_capacity;
				
			}
			else // Bank power units in DC kW
			{
				batt_bank_power_discharge_ac = p_discharge * inv_eff;
				batt_bank_power_charge_ac =  p_charge / inv_eff;
			}
		}
	}
	else // Specify cells
	{
		if (${batt_ac_or_dc} == 1) // AC-connected
		{
			batt_bank_power_discharge_ac = p_discharge * (${batt_dc_ac_efficiency}*0.01);
			batt_bank_power_charge_ac =  p_charge * (${batt_dc_ac_efficiency}*0.01);
		}
		else // DC-connected
		{
			batt_bank_power_discharge_ac = p_discharge * inv_eff;
			batt_bank_power_charge_ac =  p_charge / inv_eff;

		}
	}

	${batt_power_charge_max_kwac} = batt_bank_power_charge_ac;
	${batt_power_discharge_max_kwac} = batt_bank_power_discharge_ac;
	//${batt_current_discharge_max} = batt_bank_power_discharge_dc/${batt_computed_voltage}*1000;
	//${batt_current_charge_max} = batt_bank_power_charge_dc/${batt_computed_voltage}*1000;
};

equations{ '$MIMO$ batt_lead_acid_computed' } = define() {
	${LeadAcid_q10_computed} = ${batt_computed_strings}*${LeadAcid_q10}*${batt_Qfull}/100;
	${LeadAcid_q20_computed} = ${batt_computed_strings}*${LeadAcid_q20}*${batt_Qfull}/100;
	${LeadAcid_qn_computed} = ${batt_computed_strings}*${LeadAcid_qn}*${batt_Qfull}/100;
};

equations{ '$MIMO$ batt_capacity'} = define(){
	${batt_Qexp} = ${batt_Qexp_percent}*${batt_Qfull}*0.01;
	${batt_Qnom} = ${batt_Qnom_percent}*${batt_Qfull}*0.01;
	${batt_Qfull_flow} =  ${batt_computed_bank_capacity} * 1000 / ${batt_computed_voltage};
};

1793
on_load{'Battery Current and Capacity'} = define()
{
	on_change{'batt_Qfull'};
	on_change{'batt_current_choice'};
	set_current_and_capacity();
};
on_change{'batt_Qfull'} = define()
{
	//update_voltage_plot(); // this makes a plot come up as a new window
	battsize_warning_check();
};
on_change{'batt_current_choice'} = define()
{
	set_current_and_capacity();
};

function battsize_warning_check()
{
	message = '';
	
	// if computed bank voltage is more than 1.5x desired, display
	if ((${batt_computed_bank_capacity} > 1.25*${batt_bank_size} ||
		 ${batt_computed_bank_capacity} < 0.75*${batt_bank_size} ) &&
	     ${batt_size_choice} == 0)
	{
		message = 'Battery size different than desired due to input battery bank voltage, cell capacity, and cell voltage';
		//logmsg('desired: ' + ${batt_bank_size} + ' computed: ' + ${batt_computed_bank_capacity});
		//logmsg('Qfull: ' + ${batt_Qfull} + ' n: ' + ${batt_num_cells} + ' Vbatt: ' + ${batt_computed_voltage});
	}
	
	property( 'batt_size_warning','Caption',message );
}

function set_current_and_capacity()
{
	current_choice = value('batt_current_choice');
	isflow = is_flow();
	current_limited = current_choice == 1 || current_choice == 2;
	power_limited = current_choice == 0 || current_choice == 2;

	show('batt_Qfull', !isflow);
	show('batt_cell_current_charge_max', isflow);
	show('batt_cell_current_discharge_max', isflow);
	show('batt_cell_power_charge_max', isflow);
	show('batt_cell_power_discharge_max', isflow);
	show('batt_computed_stacks_series', isflow);
	show('batt_current_choice', isflow);
	
	enable('batt_cell_current_charge_max', current_limited);
	enable('batt_cell_current_discharge_max', current_limited);
	enable('batt_cell_power_charge_max', power_limited);
	enable('batt_cell_power_discharge_max', power_limited);
}