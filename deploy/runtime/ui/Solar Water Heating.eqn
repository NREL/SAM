equations{ 'swh.FRUL' } = define() {
	return ?${swh.coll_mode}[ ${swh.user_FRUL}, ${swh.srcclib.frul} ]; };

equations{ 'swh.total_area' } = define() {
	return ${swh.area_coll}*${swh.ncoll}; };

equations{ 'swh.test_flow' } = define() {
	return ?${swh.coll_mode}[ ${swh.user_test_flow}, ${swh.srcclib.test_flow} ]; };

equations{ 'swh.b0' } = define() {
	return ?${swh.coll_mode}[ ${swh.user_b0}, ${swh.srcclib.iam} ]; };

equations{ 'swh.test_fluid' } = define() {
	return ?${swh.coll_mode}[ ${swh.user_test_fluid}, ${swh.srcclib.test_fluid} ]; };

equations{ 'swh.FRta' } = define() {
	return ?${swh.coll_mode}[ ${swh.user_FRta}, ${swh.srcclib.frta} ]; };

equations{ 'swh.rated_size' } = define() {
	return ${swh.area_coll}*${swh.ncoll}
	*( ${swh.FRta} - ${swh.FRUL}*(30/1000) ); };

equations{ '$MIMO$ swh_scaled_draw_profile' } = define() {
	/* need to implement */
	return 0; };

equations{ 'swh.area_coll' } = define() {
	return ?${swh.coll_mode}[ ${swh.user_area_coll}, ${swh.srcclib.area} ]; };

