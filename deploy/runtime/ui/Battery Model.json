{
    "Name": "Battery Model",
    "Width": 1052.0,
    "Height": 68.0,
    "FormObjects": {
        "GroupBox": {
            "Visible": 1.0,
            "ObjectProperties": {
                "Name": {
                    "Type": 5.0,
                    "String": "Battery Chemistry Group"
                },
                "X": {
                    "Type": 3.0,
                    "Integer": 6.0
                },
                "Y": {
                    "Type": 3.0,
                    "Integer": 3.0
                },
                "Width": {
                    "Type": 3.0,
                    "Integer": 1042.0
                },
                "Height": {
                    "Type": 3.0,
                    "Integer": 60.0
                },
                "Tool Tip": {
                    "Type": 5.0,
                    "String": ""
                },
                "Caption": {
                    "Type": 5.0,
                    "String": "Chemistry"
                },
                "Bold": {
                    "Type": 2.0,
                    "Boolean": 1.0
                }
            }
        },
        "Choice": {
            "Visible": 1.0,
            "ObjectProperties": {
                "Name": {
                    "Type": 5.0,
                    "String": "batt_type"
                },
                "X": {
                    "Type": 3.0,
                    "Integer": 153.0
                },
                "Y": {
                    "Type": 3.0,
                    "Integer": 24.0
                },
                "Width": {
                    "Type": 3.0,
                    "Integer": 438.0
                },
                "Height": {
                    "Type": 3.0,
                    "Integer": 24.0
                },
                "Tool Tip": {
                    "Type": 5.0,
                    "String": ""
                },
                "Items": {
                    "Type": 6.0,
                    "StringList": "Lead Acid Flooded|Lead Acid VRLA Gel|Lead Acid VRLA AGM|Lead Acid Custom|Lithium-ion Lithium Manganese Oxide (LMO/Graphite)|Lithium-ion Lithium Iron Phosphate (LFP/Graphite)|Lithium-ion Lithium Cobalt Oxide (LCO/Graphite)|Lithium-ion LMO/Lithium Titanate (LMO/LTO)|Lithium-ion Nickel Manganese Cobalt Oxide (NMC/Graphite)|Lithium-ion Nickel Cobalt Aluminum Oxide (NCA/Graphite)|Lithium-ion Custom"
                },
                "Selection": {
                    "Type": 3.0,
                    "Integer": -1.0
                },
                "TabOrder": {
                    "Type": 3.0,
                    "Integer": 1.0
                }
            }
        }
    },
    "VarDatabase": {
        "LeadAcid_q10": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Discharge rate 10-hour",
            "Units": "%",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 2.0,
            "DefaultValue": 93.0,
            "UIObject": "Default",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "LeadAcid_q10_computed": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Discharge rate 10-hour calculated",
            "Units": "Ah",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 8.0,
            "DefaultValue": 0.0,
            "UIObject": "Numeric",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "LeadAcid_q20": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Discharge rate 10-hour",
            "Units": "%",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 2.0,
            "DefaultValue": 100.0,
            "UIObject": "Default",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "LeadAcid_q20_computed": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Discharge rate 10-hour calculated",
            "Units": "Ah",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 8.0,
            "DefaultValue": 0.0,
            "UIObject": "Numeric",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "LeadAcid_qn": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Capacity at n-hour discharge rate",
            "Units": "%",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 1.0,
            "DefaultValue": 60.0,
            "UIObject": "Default",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "LeadAcid_qn_computed": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Capacity at n-hour discharge rate calculated",
            "Units": "Ah",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 8.0,
            "DefaultValue": 0.0,
            "UIObject": "Numeric",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "LeadAcid_tn": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Hours of storage",
            "Units": "hours",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 1.0,
            "DefaultValue": 1.0,
            "UIObject": "Default",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "batt_Qexp": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Battery capacity exp",
            "Units": "Ah",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 9.0,
            "DefaultValue": 1.0,
            "UIObject": "Numeric",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "batt_Qnom": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Battery capacity nominal",
            "Units": "Ah",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 9.0,
            "DefaultValue": 56.0,
            "UIObject": "Numeric",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "batt_chem": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Battery chemistry options",
            "Units": " ",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 9.0,
            "DefaultValue": 1.0,
            "UIObject": "Default",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "batt_life_model": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Battery life model option",
            "Units": " ",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 8.0,
            "DefaultValue": 0.0,
            "UIObject": "Default",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "batt_meter_position": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Battery meter position",
            "Units": " ",
            "Group": "Battery Chemistry",
            "IndexLabels": "",
            "Flags": 0.0,
            "DefaultValue": 0.0,
            "UIObject": "Default",
            "sscVariableName": "",
            "sscVariableValue": ""
        },
        "batt_type": {
            "Version": 4.0,
            "Type": 1.0,
            "Label": "Battery type",
            "Units": " ",
            "Group": "Battery Chemistry",
            "IndexLabels": "Lead Acid: Flooded|Lead Acid: VRLA Gel|Lead Acid: VRLA AGM|Lead Acid: Custom|Lithium Ion: Lithium Manganese Oxide (LMO/Graphite)|Lithium Ion: Lithium Iron Phosphate (LFP/Graphite)|Lithium Ion: Lithium Cobalt Oxide (LCO/Graphite)|Lithium Ion: LMO/Lithium Titanate (LMO/LTO)|Lithium Ion: Nickel Manganese Cobalt Oxide (NMC/Graphite)|Lithium Ion: Nickel Cobalt Aluminum Oxide (NCA/Graphite)|Lithium Ion: Custom|Flow Battery: Vanadium|Flow Battery: Iron",
            "Flags": 2.0,
            "DefaultValue": 0.0,
            "UIObject": "Choice",
            "sscVariableName": "",
            "sscVariableValue": ""
        }
    },
    "Equations": [
        "equations{ 'batt_chem' } = define(){",
        "\t// lead acid",
        "\tif (${batt_type} <= 3)",
        "\t\treturn 0;",
        "\t// lithium ion",
        "\telse if (${batt_type} <= 10)",
        "\t\treturn 1;",
        "\t// vanadium redox flow",
        "\telse if (${batt_type} == 11)",
        "\t\treturn 2;",
        "\t// iron flow",
        "\telse if (${batt_type} == 12)",
        "\t\treturn 3;",
        "};",
        ""
    ],
    "Callbacks": [
        "on_load{'Battery Model'} = define()",
        "{",
        "\tset_chemistry();",
        "\tset_meter_position();",
        "\tbattsize_warning_check();",
        "};",
        "",
        "on_change{'batt_type'} = define()",
        "{",
        "\ttype = value('batt_type');",
        "\t",
        "\tif (type != 3 && type != 10)",
        "\t\t{ update_default = yesno('Battery Type Change\\nReplace inputs with default values for this battery type?'); }",
        "\telse",
        "\t\t{ update_default = false; }",
        "\t",
        "\tislead = (value('batt_chem') == 0);",
        "\tislithium = (value('batt_chem') == 1);",
        "\tisvanadium = (value('batt_chem') == 2);",
        "\tisiron = (value('batt_chem') == 3);",
        "\tset_chemistry();",
        "\t",
        "\t// call to other script (Battery Bank Sizing)",
        "\tset_bank_sizing();",
        "\t",
        "\t// call to other script (Battery Voltage)",
        "\tset_voltage_choice(update_default);",
        "\t",
        "\t// call to other script (Battery Current and Capacity)",
        "\tset_current_and_capacity();",
        "\t",
        "\t// lead acid",
        "\tif (islead)",
        "\t\t{ set_lead_acid(update_default); }",
        "\t// Lithium Ion",
        "\telse if (islithium)",
        "\t\t{ set_lithium_ion(update_default); }",
        "\t// Vanadium Redox FLow",
        "\telse if (isvanadium)",
        "\t\t{ set_vanadium(update_default); }",
        "\t// Iron Flow",
        "\telse if (isiron)",
        "\t\t{ set_iron(update_default); }",
        "",
        "\tbattsize_warning_check();",
        "",
        "\t// Update inputs on Battery Life Options form",
        "\tvalue('ui_batt_life_model', ${batt_life_model});",
        "\tif (technology() != 'Fuel Cell' )",
        "\t{",
        "\t\tset_batt_life_excl_var();",
        "\t}\t",
        "",
        "};",
        "",
        "function is_flow()",
        "{",
        "\tflow = false;",
        "\tif (value('batt_chem') == 2 || value('batt_chem') == 3)",
        "\t\tflow = true;",
        "\treturn flow;",
        "}",
        "",
        "function set_flow()",
        "{",
        "\tshow('batt_bank_nseries_stacks', true);",
        "\tproperty('batt_size_choice', 'Items', ['Set desired bank size', 'Specify capacity and stack configuration']); ",
        "\tproperty('batt_series_label', 'Caption', 'Number of cells per stack');",
        "\tproperty('batt_parallel_label', 'Caption', 'Number of parallel stacks');",
        "\tproperty('batt_computed_parallel_label', 'Caption', 'Stacks in parallel');",
        "\tproperty('batt_computed_cells_series_label', 'Caption', 'Cells per stack');",
        "}\t",
        "function set_conventional()",
        "{",
        "\tshow('batt_bank_nseries_stacks', false);",
        "\tproperty('batt_size_choice', 'Items', ['Set desired bank size', 'Specify cells']); ",
        "\tproperty('batt_series_label', 'Caption', 'Number of cells in series');",
        "\tproperty('batt_parallel_label', 'Caption', 'Number of strings in parallel');",
        "\tproperty('batt_computed_parallel_label', 'Caption', 'Strings in parallel');",
        "\tproperty('batt_computed_cells_series_label', 'Caption', 'Cells in series');",
        "}",
        "",
        "function set_chemistry()",
        "{",
        "\tis_lead = (value('batt_chem') == 0);",
        "\tenable('LeadAcid_q20',is_lead);",
        "\tenable('LeadAcid_q20_computed',is_lead);",
        "\tenable('LeadAcid_q10',is_lead);",
        "\tenable('LeadAcid_q10_computed',is_lead);",
        "\tenable('LeadAcid_qn',is_lead);",
        "\tenable('LeadAcid_qn_computed',is_lead);",
        "\t",
        "\t// set widget properties",
        "\tif (is_flow())",
        "\t\tset_flow();",
        "\telse",
        "\t\tset_conventional();",
        "}",
        "",
        "function set_meter_position()",
        "{",
        "\tf = financing();",
        "\tif ( !strcmp(f, 'Residential') ",
        "\t|| !strcmp(f, 'Commercial')",
        "\t|| !strcmp(f, 'Third Party')",
        "\t|| !strcmp(f, 'Host Developer') )",
        "\t{\t",
        "\t\t// behind the meter",
        "\t\t${batt_meter_position} = 0;\t",
        "\t}",
        "\telseif (f == 'Single Owner' ",
        "\t|| f == 'Merchant Plant'",
        "\t|| f == 'Leveraged Partnership Flip'",
        "\t|| f == 'All Equity Partnership Flip'",
        "\t|| f == 'Sale Leaseback' )",
        "\t{",
        "\t\t// in front of the meter",
        "\t\t${batt_meter_position} = 1;\t",
        "\t}",
        "}",
        "function set_lead_acid(update_default)",
        "{",
        "\tlead_type = ${batt_type};",
        "\t",
        "\tif (update_default)",
        "\t{\t",
        "\t\t// flooded lead acid",
        "\t\tif (lead_type == 0)",
        "\t\t\tflooded_lead_acid();",
        "\t\telse if (lead_type == 1)",
        "\t\t\tGEL();",
        "\t\telse if (lead_type == 2)",
        "\t\t\tAGM();",
        "\t\t\t",
        "\t\tlead_acid_defaults();\t",
        "\t}",
        "}",
        "function set_lithium_ion(update_default)",
        "{",
        "\tlithium_type = ${batt_type}-4;",
        "\t",
        "\tif (update_default)",
        "\t{",
        "\t\tlithium_ion_defaults();",
        "\t\tif (lithium_type == 0)",
        "\t\t\tLMO();",
        "\t\telse if (lithium_type == 1)",
        "\t\t\tLFP();",
        "\t\telse if (lithium_type == 2)",
        "\t\t\tLCO();",
        "\t\telse if (lithium_type == 3)",
        "\t\t\tLTO();",
        "\t\telse if (lithium_type == 4)",
        "\t\t\tNMC();",
        "\t\telse if (lithium_type == 5)",
        "\t\t\tNCA();",
        "\t}",
        "\tif (financing() == 'Residential')",
        "\t\tvalue('batt_bank_voltage', 50);",
        "\telse",
        "\t\tvalue('batt_bank_voltage', 500);",
        "}",
        "function set_vanadium(update_default)",
        "{",
        "\tif (update_default)",
        "\t{",
        "\t\tif (${batt_type} == 11)",
        "\t\t\t{ VRFB(); }",
        "\t}",
        "}",
        "function set_iron(update_default)",
        "{",
        "\t// don't allow iron flow to use voltage model ever",
        "\tvalue('batt_voltage_choice', 1);",
        "\tif (update_default)",
        "\t{",
        "\t\tif (${batt_type} == 12)",
        "\t\t\tIronFlow();",
        "\t}",
        "}",
        "",
        "// Flooded Lead Acid defaults",
        "function flooded_lead_acid()",
        "{",
        "\tvalue('batt_specific_energy_per_mass',50); ",
        "\tvalue('batt_specific_energy_per_volume',98);",
        "}",
        "",
        "// AGM defaults",
        "function AGM()",
        "{",
        "\tvalue('batt_specific_energy_per_mass',35); ",
        "\tvalue('batt_specific_energy_per_volume',80);",
        "}",
        "// GEL defaults",
        "function GEL()",
        "{",
        "\tvalue('batt_specific_energy_per_mass',35); ",
        "\tvalue('batt_specific_energy_per_volume',75);",
        "}",
        "",
        "function get_batt_data_from_file(filename)",
        "{",
        "\tdefaults_dir = replace(appdir(), '\\\\', '/' ) + '/../libraries/BatteryStateful/';",
        "\tdefaults_dir += filename;",
        "\tx = read_json(defaults_dir);",
        "\tdefs = x.defaults;",
        "\tset_batt_defaults_from_data(defs);",
        "}",
        "",
        "function set_batt_defaults_from_data(defs)",
        "{",
        "\tcell_params = defs.paramscell;",
        "\tpack_params = defs.paramspack;",
        "\t",
        "\tvalue('batt_Qfull',cell_params.qfull);",
        "\tvalue('batt_Vnom_default', cell_params.vnom_default);",
        "\t\t",
        "\tif (value('batt_chem') == 0) {",
        "\t\tvalue('LeadAcid_q20',cell_params.leadacid_q20);",
        "\t\tvalue('LeadAcid_q10',cell_params.leadacid_q10);",
        "\t\tvalue('LeadAcid_qn',cell_params.leadacid_qn);",
        "\t\tvalue('LeadAcid_tn',cell_params.leadacid_tn);",
        "\t}",
        "\t",
        "\tif (cell_params.voltage_choice == 0) {",
        "\t\t// voltage curve",
        "\t\tvalue('batt_C_rate',cell_params.c_rate);",
        "\t\tvalue('batt_Vfull',cell_params.vfull);",
        "\t\tvalue('batt_Vexp',cell_params.vexp);",
        "\t\tvalue('batt_Vnom',cell_params.vnom);",
        "\t\tvalue('batt_Vcut',cell_params.vcut);",
        "\t\tvalue('batt_Qexp',cell_params.qexp);",
        "\t\tvalue('batt_Vnom',cell_params.vnom);",
        "\t\t${batt_Qexp_percent} = ${batt_Qexp}/${batt_Qfull}/0.01;",
        "\t\t${batt_Qnom_percent} = cell_params.qnom/${batt_Qfull}/0.01;",
        "\t}",
        "\telse {",
        "\t\tvalue('batt_voltage_matrix', cell_params.voltage_matrix);",
        "\t}",
        "\t",
        "\tvalue('batt_resistance', cell_params.resistance); // from UBGC2, and DC400-6",
        "\tvalue('batt_voltage_choice', cell_params.voltage_choice);",
        "",
        "  \tvalue('batt_bank_voltage', pack_params.nominal_voltage);",
        "  \t",
        "\t// Lifetime",
        "\tvalue('batt_life_model', cell_params.life_model);",
        "\tvalue('ui_batt_life_model', ${batt_life_model});",
        "\tvalue('batt_lifetime_matrix',cell_params.cycling_matrix);",
        "\t",
        "\t// turn calendar life model off",
        "\tvalue('batt_calendar_choice', cell_params.calendar_choice);",
        "\t",
        "\t// Thermal",
        "\tvalue('cap_vs_temp', pack_params.cap_vs_temp);",
        "\tvalue('batt_Cp',pack_params.cp);",
        "\t",
        "\t// ancillary system losses",
        "\tzero_array = fill_by_month(0);",
        "\tvalue('batt_losses_charging', zero_array);",
        "\tvalue('batt_losses_discharging', zero_array);",
        "\tvalue('batt_losses_idle', zero_array);",
        "",
        "}",
        "",
        "// Valve Regulated Lead Acid defaults",
        "function lead_acid_defaults()",
        "{",
        "\tConversionEfficiencies();",
        "\tget_batt_data_from_file('BatteryStateful_LeadAcid.json');",
        "}",
        "",
        "// Lithium Manganese Oxide / Graphite",
        "function LMO()",
        "{",
        "\t// voltage curve",
        "\tvalue('batt_C_rate',1);",
        "\tvalue('batt_Vfull',4.2);",
        "\tvalue('batt_Vexp',4.1);",
        "\tvalue('batt_Vnom',3.6);",
        "\tvalue('batt_Vcut',2.772);",
        "\tvalue('batt_Qfull',1.5);",
        "\tvalue('batt_Qexp_percent',0.666);",
        "\tvalue('batt_Qnom_percent',93.33);",
        "\tvalue('batt_Vnom_default',3.6);",
        "\tvalue('batt_specific_energy_per_mass',92.5);",
        "\tvalue('batt_specific_energy_per_volume',231.97);",
        "\t\t",
        "\t// Lifetime",
        "\tlifetime = [[20,0,100],",
        "\t\t\t\t[20, 2500, 92], ",
        "\t\t\t\t[20,5000,84], ",
        "\t\t\t\t[80,0,100],",
        "\t\t\t\t[80, 500, 92], ",
        "\t\t\t\t[80,1000,84] ];",
        "\tvalue('batt_lifetime_matrix',lifetime);",
        "\tvalue('batt_life_model', 0);",
        "}",
        "// Lithium Iron Phospate / Graphite",
        "function LFP()",
        "{",
        "\tget_batt_data_from_file('BatteryStateful_LFPGraphite.json');",
        "\t",
        "\tvalue('batt_specific_energy_per_mass',70);",
        "\tvalue('batt_specific_energy_per_volume',82);",
        "}",
        "// Lithium Cobalt Oxide / Graphite",
        "function LCO()",
        "{",
        "\t// voltage curve",
        "\tvalue('batt_C_rate',0.2);",
        "\tvalue('batt_Vfull',4.2);",
        "\tvalue('batt_Vexp',4.15);",
        "\tvalue('batt_Vnom',3.7);",
        "\tvalue('batt_Vcut',2.772);",
        "\tvalue('batt_Qfull',2.55);",
        "\tvalue('batt_Qexp_percent',0.40);",
        "\tvalue('batt_Qnom_percent',78.4);",
        "\tvalue('batt_Vnom_default',3.7);",
        "\tvalue('batt_specific_energy_per_mass',176.95);",
        "\tvalue('batt_specific_energy_per_volume',363.79);",
        "\t\t",
        "\t// Lifetime",
        "\tlifetime = [ [20,0,100],",
        "\t\t\t\t [20,650,98],",
        "\t\t\t\t [20,1500,95],",
        "\t\t\t\t [80,0,102],",
        "\t\t\t\t [80,150,93],",
        "\t\t\t\t [80,300,87] ];",
        "\tvalue('batt_lifetime_matrix',lifetime);",
        "\tvalue('batt_life_model', 0);",
        "}",
        "// Lithium Manganese Oxide / Lithium Titanate Oxide",
        "function LTO()",
        "{",
        "\tget_batt_data_from_file('BatteryStateful_LMOLTO.json');",
        "\t",
        "\tvalue('batt_specific_energy_per_mass',22);",
        "\tvalue('batt_specific_energy_per_volume',14);",
        "}",
        "",
        "// Lithium Nickel Manganese Cobalt Oxide / Graphite",
        "function NMC()",
        "{",
        "\tget_batt_data_from_file('BatteryStateful_NMCGraphite.json');",
        "\t",
        "\tvalue('batt_specific_energy_per_mass',101);",
        "\tvalue('batt_specific_energy_per_volume',70);",
        "}",
        "",
        "// Lithium Nickel Cobalt Aluminum Oxide / Graphite",
        "function NCA()",
        "{",
        "\t// voltage curve",
        "\tvalue('batt_Vnom_default',3.6);",
        "\tvalue('batt_C_rate',0.2);",
        "\tvalue('batt_Vfull',4.2);",
        "\tvalue('batt_Vexp',4.1);",
        "\tvalue('batt_Vnom',3.6);",
        "\tvalue('batt_Vcut',2.772);",
        "\tvalue('batt_Qfull',55);",
        "\tvalue('batt_Qexp_percent',1.8);",
        "\tvalue('batt_Qnom_percent',98.2);",
        "\tvalue('batt_specific_energy_per_mass',202.90);",
        "\tvalue('batt_specific_energy_per_volume',532.58);",
        "\t\t",
        "\t// Lifetime",
        "\tlifetime = [ [20,0,100],",
        "\t\t\t\t [20,5000,80],",
        "\t\t\t\t [20,10000,60],",
        "\t\t\t\t [80,0,100],",
        "\t\t\t\t [80,1000,80],",
        "\t\t\t\t [80,2000,60]];",
        "\tvalue('batt_lifetime_matrix',lifetime);",
        "\tvalue('batt_life_model', 0);",
        "}",
        "",
        "function lithium_ion_defaults()",
        "{",
        "",
        "\tConversionEfficiencies();",
        "",
        "\t// Can be overwritten by chemistry-specific fx",
        "\tcap_vs_temp = [[-20, 72.33333333],",
        "\t\t\t\t\t[-10, 81.8],",
        "\t\t\t\t\t[0, 88.8],",
        "\t\t\t\t\t[10, 93],",
        "\t\t\t\t\t[23, 96.66666667],",
        "\t\t\t\t\t[45, 101],",
        "\t\t\t\t\t[60, 101]];",
        "\tvalue('cap_vs_temp', cap_vs_temp);",
        "",
        "\t// Maleki 1999 Thermal Properties of Lithium-Ion Battery & Components",
        "\tvalue('batt_Cp',1500);",
        "\t",
        "\t// turn on calendar lifetime model",
        "\tvalue('batt_calendar_choice', 1);",
        "\t",
        "\t// use voltage model not matrix",
        "\tvalue('batt_voltage_choice', 0);",
        "}",
        "// Vanadium Redox Flow Battery",
        "function VRFB()",
        "{",
        "\tFlowDefaults();",
        "",
        "\t// voltage curve",
        "\tvalue('batt_Vnom_default',1.4);",
        "\tvalue('batt_C_rate',0.2);",
        "\tvalue('batt_Vfull',1.7);",
        "\tvalue('batt_Vexp',1.55);",
        "\tvalue('batt_Vnom',1.4);",
        "\tvalue('batt_Qfull',397);",
        "\tvalue('batt_Qexp_percent',10);",
        "\tvalue('batt_Qnom_percent',85);",
        "",
        "\tvalue('batt_voltage_choice', 0);",
        "\tvoltage_matrix = [[0,0]];",
        "  \tvalue('batt_voltage_matrix', voltage_matrix);",
        "",
        "\t// dispatch control",
        "\tvalue('batt_minimum_SOC', 15);",
        "\tvalue('batt_maximum_SOC', 95);",
        "\tvalue('batt_minimum_modetime', 10);",
        "",
        "\t// thermal properties ",
        "\t// (from 2016 - Yan, Modelling and simulation of thermal behavior of vanadium redox flow battery)",
        "\tvalue('batt_Cp', 3200);",
        "",
        "\t// turn calendar life model off",
        "\tvalue('batt_calendar_choice', 0);",
        "\t",
        "}",
        "// Iron flow battery",
        "function IronFlow()",
        "{",
        "\tFlowDefaults();",
        "",
        "\tvoltage_matrix = [[0, 1.18],",
        "\t\t\t\t  [20, 1.11],",
        "\t\t\t\t  [40, 1.08],",
        "\t\t\t\t  [60, 1.05],",
        "\t\t\t\t  [80, 1.02],",
        "\t\t\t\t  [100, 0.95]];",
        "",
        "\t// voltage curve",
        "\tvalue('batt_Vnom_default',1.1);",
        "\tvalue('batt_voltage_matrix', voltage_matrix);",
        "\tvalue('batt_voltage_choice', 1);",
        "",
        "\t// dispatch control",
        "\tvalue('batt_minimum_SOC', 0);",
        "\tvalue('batt_maximum_SOC', 100);",
        "\tvalue('batt_minimum_modetime', 0);",
        "",
        "\t// thermal properties",
        "\tvalue('batt_Cp', 3200); // unknown what this actually is",
        "\t\t\t",
        "\t// turn calendar life model off",
        "\tvalue('batt_calendar_choice', 0);",
        "}",
        "",
        "function FlowDefaults()",
        "{",
        "\tConversionEfficiencies();",
        "\t",
        "\tvalue('batt_resistance', 0.001);",
        "",
        "\t// desired bank voltage",
        "\tvalue('batt_bank_voltage', 48);",
        "\t",
        "\t// current control",
        "\tvalue('batt_current_choice', 0);",
        "\tvalue('batt_cell_power_discharge_max', 200);",
        "\tvalue('batt_cell_power_charge_max', 200);",
        "\t",
        "\t// ancilliary system losses",
        "\tvalue('batt_losses_charging', fill_by_month(0));",
        "\tvalue('batt_losses_discharging', fill_by_month(0));",
        "\tvalue('batt_losses_idle', fill_by_month(0));",
        "\t",
        "\t// Lifetime",
        "\tlifetime = [ [20,0,100],",
        "\t\t\t\t [20,20000,100],",
        "\t\t\t\t [80,0,100],",
        "\t\t\t\t [80,20000,100]];",
        "\tvalue('batt_lifetime_matrix',lifetime);",
        "\t",
        "\t// Thermal",
        "\tcap_vs_temp = [ [19, 100], [21, 100] ];",
        "\tvalue('cap_vs_temp', cap_vs_temp);",
        "\t",
        "\t// thermal",
        "\tvalue('batt_specific_energy_per_mass',20);",
        "\tvalue('batt_specific_energy_per_volume',20);",
        "}",
        "",
        "function ConversionEfficiencies()",
        "{",
        "\tvalue('batt_ac_dc_efficiency', 96);",
        "\tvalue('batt_dc_ac_efficiency', 96);",
        "\tvalue('batt_dc_dc_efficiency', 99);",
        "}",
        "",
        "function fill_by_month(num)",
        "{",
        "\tmonth_array = [];",
        "\tfor (m = 0; m != 12; m++)",
        "\t\tmonth_array[m] = num;",
        "\treturn month_array;",
        "}"
    ]
}