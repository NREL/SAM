Battery Thermal
1051
439
16
GroupBox

1
8
Name
5
14
Thermal Group 
X
3
6
Y
3
3
Width
3
1042
Height
3
428
Tool Tip
5
0
Caption
5
16
Thermal Behavior
Bold
2
1
Numeric

1
17
Name
5
7
batt_Cp
X
3
261
Y
3
114
Width
3
60
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
1
Numeric

1
17
Name
5
17
batt_h_to_ambient
X
3
261
Y
3
141
Width
3
60
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
2
Numeric

1
17
Name
5
9
batt_mass
X
3
486
Y
3
318
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Numeric

1
17
Name
5
28
batt_room_temperature_single
X
3
261
Y
3
195
Width
3
60
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4
DataArray

1
10
Name
5
28
batt_room_temperature_vector
X
3
261
Y
3
222
Width
3
90
Height
3
24
Tool Tip
5
0
Mode
3
1
Label
5
15
Temperature (C)
Description
5
87
Import or enter battery environement temperature in degrees Celsius for each time step.
TabOrder
3
5
Numeric

1
17
Name
5
29
batt_specific_energy_per_mass
X
3
210
Y
3
318
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
6
Numeric

1
17
Name
5
31
batt_specific_energy_per_volume
X
3
210
Y
3
345
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
7
Choice

1
9
Name
5
19
batt_thermal_choice
X
3
168
Y
3
168
Width
3
249
Height
3
24
Tool Tip
5
0
Items
6
3
Use weather file ambient temperature
Enter a single fixed temperature
Enter time series temperature data
Selection
3
4294967295
TabOrder
3
3
Numeric

1
17
Name
5
11
batt_volume
X
3
486
Y
3
345
Width
3
90
Height
3
24
Tool Tip
5
0
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
DataMatrix

1
27
Name
5
11
cap_vs_temp
X
3
423
Y
3
96
Width
3
277
Height
3
201
Tool Tip
5
0
PasteAppendRows
2
1
PasteAppendCols
2
0
ShowButtons
2
1
ShowRows
2
1
ShowRowLabels
2
0
RowLabels
5
0
ShadeR0C0
2
0
VerticalLabel
5
0
HorizontalLabel
5
0
ShadeC0
2
0
ShowCols
2
0
ShowColLabels
2
1
ColLabels
5
20
Temp (C),Capacity(%)
NumRowsLabel
5
5
Rows:
NumColsLabel
5
5
Cols:
Layout
3
1
ChoiceColumn
3
4294967295
Choices
5
15
Choice1,Choice2
HideColumn
3
4294967295
ShowColumn
3
4294967295
ColorMap
2
0
Divider

1
10
Name
5
9
object 22
X
3
18
Y
3
72
Width
3
1020
Height
3
22
Tool Tip
5
0
Orientation
3
0
Colour
4
120
120
120
255
Caption
5
18
Thermal Properties
Bold
2
1
Divider

1
10
Name
5
10
object 226
X
3
15
Y
3
294
Width
3
684
Height
3
22
Tool Tip
5
0
Orientation
3
0
Colour
4
120
120
120
255
Caption
5
19
Physical Properties
Bold
2
1
Plot

1
6
Name
5
16
plot_cap_vs_temp
X
3
714
Y
3
99
Width
3
322
Height
3
303
Tool Tip
5
0
Label

1
13
Name
5
19
thermal_model_label
X
3
21
Y
3
375
Width
3
678
Height
3
48
Tool Tip
5
0
Caption
5
214
The battery thermal model does not account for power required for thermal conditioning. Use the inputs under "Battery Losses" or on the Losses page to account for power used by battery heating or cooling equipment.
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1
Label

1
13
Name
5
20
thermal_model_label5
X
3
18
Y
3
21
Width
3
1014
Height
3
45
Tool Tip
5
0
Caption
5
241
The battery thermal model assumes that the battery with specific heat Cp is in an environment at the specified environment temperature. Heat transfer between the battery and its environment is proportional to the heat transfer coefficient h.
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1

12
batt_Cp
3
1
Specific heat Cp
J/KgK
BatteryCell
0
2
1
1
1
1
4183
Numeric
batt_h_to_ambient
3
1
Heat transfer coefficient h
W/m2K
BatteryCell
0
2
1
1
1
1
5
Numeric
batt_mass
3
1
Battery mass
kg
BatteryCell
0
8
1
1
1
1
56
Numeric
batt_room_temperature_celsius
3
2
 Calculated environment temperature
C
BatteryCell
0
8
1
2
1
1
0
Default
batt_room_temperature_single
3
1
Single environment temperature
C
BatteryCell
23
Environment temperature
2
1
1
1
1
20
Numeric
batt_room_temperature_vector
3
2
Time series environment temperature
C
BatteryCell
17
Temperature (C)|1
0
1
2
1
1
0
DataArray
batt_specific_energy_per_mass
3
1
Specific energy per mass
Wh/kg
BatteryCell
0
2
1
1
1
1
150
Numeric
batt_specific_energy_per_volume
3
1
Specific energy per volume
Wh/L
BatteryCell
0
2
1
1
1
1
300
Numeric
batt_surface_area
3
1
Battery surface area
m
BatteryCell
0
10
1
1
1
1
0.181
Numeric
batt_thermal_choice
3
1
Environment temp option
 
BatteryCell
97
Use weather file ambient temperature|Enter single fixed temperature|Enter time series temperature
0
1
1
1
1
0
Choice
batt_volume
3
1
Battery volume
m3
BatteryCell
0
8
1
1
1
1
0.001
Numeric
cap_vs_temp
3
3
Capacity vs temperature
 
BatteryCell
0
1
1
3
4
2
-15 65 
0 85 
25 100 
40 104 

DataArray

1476
equations{'batt_mass'} = define()
{
	return (${batt_computed_bank_capacity}*1000)/${batt_specific_energy_per_mass};
};
equations{'batt_volume'} = define()
{
	// m3
	return ${batt_computed_bank_capacity}/${batt_specific_energy_per_volume};
};
equations{'batt_surface_area'} = define()
{
	// assume cube
	return pow(${batt_volume},2.3333333) * 6;
};
equations{'batt_room_temperature_celsius'} = define()
{
	if (strpos(lower(technology()),'generic')<0)
	{
		wfread = ssc_create();
		solar_resource =  ${solar_resource_file};
		if (file_exists(solar_resource))
		{
			//msgbox(solar_resource);
			ssc_var(wfread, "file_name", solar_resource);
			ssc_var(wfread, "header_only", 0);
			
			T = [];
			if (!ssc_exec(wfread, "wfreader")){
				T = ssc_var(wfread, "tdry");
			}
			else {
				msgbox('failed');
				return 0;
			}
		}
		else {
			// unknown, perhaps solar resource callback isn't complete
			return 0;
		}
	}
	else {
		len = 8760;
		if (${spec_mode} == 1){
			T = ${energy_output_array};
			len = #T;
		}
		for (i = 0; i < len; i++){
			T[i] = 20;
		}
	}
	
	// initialize to ambient
	T_ambient = T;
	
	// Single value, scale to input size
	if (${batt_thermal_choice} == 1){
		T_room = ${batt_room_temperature_single};
		for (i = 0; i < #T; i++){
			T_ambient[i] = T_room;
		}
	}
	// Input time series
	if (${batt_thermal_choice} == 2){
		T_room = ${batt_room_temperature_vector};
		for (i = 0; i < #T_room; i++){
			T_ambient[i] = T_room[i];
		}
	}
	return T_ambient;
};
1418
on_load{'Battery Thermal'} = define() {
	on_change{'cap_vs_temp'}(); // update the plot
	on_change{'batt_thermal_choice'}();
	
	show_thermal_options;
};

function show_thermal_options()
{
	tech = technology();

	// there is no weather data in generic model
	if ( strpos(lower(tech), 'generic')>-1 && ${batt_thermal_choice}==0){
		${batt_thermal_choice} = 1;
		msgbox( tech + ' model has no weather file!\nCannot set environment temperature to ambient temperature data from weather file.\nChoose either single fixed or time series for the environment temperature option.\nSetting option to default "Enter single fixed temperature" with value of ' + ${batt_room_temperature_single} +' degrees C.');
	}

	enable('batt_room_temperature_single', ${batt_thermal_choice}==1);
	enable('batt_room_temperature_vector', ${batt_thermal_choice}==2);
}

on_change{'batt_thermal_choice'} = define()
{
	show_thermal_options();
};

on_change{ 'cap_vs_temp' } = define() {

	setplot( 'plot_cap_vs_temp' );
	
	cvt = ${cap_vs_temp};
	for( i=0;i<#cvt;i++ ) {
		T[i] = cvt[i][0];
		C[i] = cvt[i][1];
	}
	
	Tmin = min(T);
	Tmax = max(T);
	Tadj = 0.1*(Tmax-Tmin);
	
	clearplot();
	plot( T, C, {'thick'=2, 'type'='line', 'color'='blue'});
	plotopt( {'title'='Capacity fade', 'legend'=false });
	axis( 'x1', {'label'='Temperature (C)', 'min'=Tmin-Tadj, 'max'=Tmax+Tadj});
	axis( 'y1', {'label'='Effective capacity (%)', 'min'=0, 'max'=110});
};