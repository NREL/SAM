Supercritical Carbon Dioxide Power Cycle
910
451
33
Numeric

1
16
Name
5
11
HTR_UA_calc
X
3
753
Y
3
336
Width
3
90
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
1
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
11
LTR_UA_calc
X
3
753
Y
3
312
Width
3
90
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
1
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
80
80
80
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
9
P_IP_calc
X
3
753
Y
3
288
Width
3
90
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
2
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
9
P_in_calc
X
3
753
Y
3
264
Width
3
90
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
2
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
80
80
80
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
15
SCO2_COPY_P_ref
X
3
213
Y
3
240
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
5
Numeric

1
16
Name
5
23
SCO2_COPY_T_htf_hot_des
X
3
213
Y
3
216
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
2
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4
Numeric

1
16
Name
5
20
SCO2_COPY_design_eff
X
3
213
Y
3
264
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
240
240
240
255
TabOrder
3
6
Numeric

1
16
Name
5
11
_sco2_P_ref
X
3
411
Y
3
240
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
176
176
176
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
15
_sco2_T_amb_des
X
3
411
Y
3
288
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
176
176
176
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
16
_sco2_T_approach
X
3
411
Y
3
312
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
176
176
176
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
19
_sco2_T_htf_hot_des
X
3
411
Y
3
216
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
176
176
176
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
16
_sco2_deltaT_PHX
X
3
411
Y
3
336
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
176
176
176
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
16
_sco2_design_eff
X
3
411
Y
3
264
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
176
176
176
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
11
_sco2_eta_c
X
3
411
Y
3
360
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
176
176
176
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
11
_sco2_eta_t
X
3
411
Y
3
384
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
176
176
176
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
24
_sco2_fan_power_perc_net
X
3
411
Y
3
408
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
2
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
0
0
0
255
BackColour
4
176
176
176
255
TabOrder
3
4294967295
Button

1
7
Name
5
21
btn_sco2_des_and_udpc
X
3
33
Y
3
33
Width
3
420
Height
3
24
Caption
5
49
Calculate design point and off-design performance
TabOrder
3
1
Button

1
7
Name
5
21
btn_sco2_design_point
X
3
33
Y
3
60
Width
3
420
Height
3
24
Caption
5
53
Calculate design point without off-design performance
TabOrder
3
2
Choice

1
8
Name
5
20
dd_sco2_cycle_config
X
3
198
Y
3
162
Width
3
164
Height
3
24
Items
6
2
Recompression
Partial Cooling
Selection
3
4294967295
TabOrder
3
4294967295
Numeric

1
16
Name
5
10
deltaT_PHX
X
3
213
Y
3
336
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
2
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
9
Numeric

1
16
Name
5
5
eta_c
X
3
213
Y
3
360
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
10
Numeric

1
16
Name
5
5
eta_t
X
3
213
Y
3
384
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
11
Numeric

1
16
Name
5
18
fan_power_perc_net
X
3
213
Y
3
408
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
2
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
13
CheckBox

1
8
Name
5
18
is_sco2_preprocess
X
3
465
Y
3
33
Width
3
423
Height
3
24
Caption
5
52
Use calculated off-design performance for simulation
State
2
0
TabOrder
3
1
GroupBox

1
7
Name
5
8
object 4
X
3
6
Y
3
9
Width
3
899
Height
3
432
Caption
5
16
sCO2 Power Cycle
Bold
2
1
Label

1
12
Name
5
8
object 7
X
3
330
Y
3
189
Width
3
181
Height
3
24
Caption
5
26
Value Used for Calculation
TextColour
4
0
0
0
255
Bold
2
1
FontSize
3
0
WordWrap
2
0
AlignRight
2
1
AlignTop
2
0
Label

1
12
Name
5
10
object 711
X
3
675
Y
3
189
Width
3
169
Height
3
24
Caption
5
21
Cycle Design Solution
TextColour
4
0
0
0
255
Bold
2
1
FontSize
3
0
WordWrap
2
0
AlignRight
2
1
AlignTop
2
0
Label

1
12
Name
5
10
object 712
X
3
177
Y
3
189
Width
3
136
Height
3
24
Caption
5
11
Input Value
TextColour
4
0
0
0
255
Bold
2
1
FontSize
3
0
WordWrap
2
0
AlignRight
2
1
AlignTop
2
0
Numeric

1
16
Name
5
16
recomp_frac_calc
X
3
753
Y
3
240
Width
3
90
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
3
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
80
80
80
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
14
sco2_T_amb_des
X
3
213
Y
3
288
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
2
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
7
Numeric

1
16
Name
5
15
sco2_T_approach
X
3
213
Y
3
312
Width
3
100
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
2
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
8
Label

1
12
Name
5
11
sco2_cb_msg
X
3
30
Y
3
93
Width
3
856
Height
3
69
Caption
5
0
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
4294967295
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1
Numeric

1
16
Name
5
22
sco2ud_T_htf_cold_calc
X
3
753
Y
3
216
Width
3
90
Height
3
21
Value
1
0
Mode
3
1
Format
3
0
Decimals
3
1
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
0
ForeColour
4
80
80
80
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295

49
HTR_UA_calc
3
1
High temp recuperator conductance
MW/K
sCO2 Power Cycle
0
8
1
1
1
1
0
Default
LTR_UA_calc
3
1
Low temp recuperator conductance
MW/K
sCO2 Power Cycle
0
8
1
1
1
1
0
Default
P_IP_calc
3
1
Intermediate pressure
MPa
sCO2 Power Cycle
0
8
1
1
1
1
0
Default
P_high_limit
3
1
High pressure limit
MPa
sCO2 Power Cycle
0
0
1
1
1
1
25
Default
P_in_calc
3
1
Low pressure
MPa
sCO2 Power Cycle
0
8
1
1
1
1
0
Default
P_out_calc
3
1
Compressor outlet pressure
MPa
sCO2 Power Cycle
0
8
1
1
1
1
0
Default
SCO2_COPY_P_ref
3
1
Power cycle gross output
MWe
sCO2 Power Cycle
0
8
1
1
1
1
0
Default
SCO2_COPY_T_htf_hot_des
3
1
HTF hot temperature
°C
sCO2 Power Cycle
0
8
1
1
1
1
0
Default
SCO2_COPY_design_eff
3
1
Cycle thermal efficiency
 
sCO2 Power Cycle
0
8
1
1
1
1
0
Default
_dd_sco2_cycle_config
3
1
Cycle Configuration
 
sCO2 Power Cycle
0
0
1
1
1
1
0
Default
_sco2_P_high_limit
3
1
High pressure limit
MPa
sCO2 Power Cycle
0
0
1
1
1
1
0
Default
_sco2_P_ref
3
1
Power cycle gross output
MWe
sCO2 Power Cycle
0
1
1
1
1
1
0
Default
_sco2_T_amb_des
3
1
Ambient temperature
°C
sCO2 Power Cycle
0
1
1
1
1
1
0
Default
_sco2_T_approach
3
1
Air cooler approach temp
°C
sCO2 Power Cycle
0
1
1
1
1
1
0
Default
_sco2_T_htf_hot_des
3
1
HTF hot temp
°C
sCO2 Power Cycle
0
1
1
1
1
1
0
Default
_sco2_deltaT_PHX
3
1
PHX temp difference
°C
sCO2 Power Cycle
0
1
1
1
1
1
0
Default
_sco2_design_eff
3
1
Cycle thermal efficiency
 
sCO2 Power Cycle
0
1
1
1
1
1
0
Default
_sco2_eta_c
3
1
Compressor(s) isentropic efficiency
 
sCO2 Power Cycle
0
1
1
1
1
1
0
Default
_sco2_eta_t
3
1
Turbine isentropic efficiency
 
sCO2 Power Cycle
0
1
1
1
1
1
0
Default
_sco2_fan_power_perc_net
3
1
Fan power percent of net
 
sCO2 Power Cycle
0
1
1
1
1
1
0
Default
_sco2_recup_eff_max
3
1
Maximum recuperator effectiveness
 
sCO2 Power Cycle
0
1
1
1
1
1
0
Default
dd_sco2_cycle_config
3
1
Cycle Configuration
 
sCO2 Power Cycle
0
0
1
1
1
1
0
Default
deltaT_PHX
3
1
PHX approach temperature
°C
sCO2 Power Cycle
0
2
1
1
1
1
20
Default
eta_c
3
1
Compressor(s) Isentropic Efficiency
 
sCO2 Power Cycle
0
2
1
1
1
1
0.89
Default
eta_t
3
1
Turbine Isentropic Efficiency
 
sCO2 Power Cycle
0
2
1
1
1
1
0.9
Default
fan_power_perc_net
3
1
Cooling fan electricity consumption
%
sCO2 Power Cycle
0
2
1
1
1
1
1
Default
is_sco2_des_par_diff
3
1
are inputs different from optimization inputs?
 
sCO2 Power Cycle
0
8
1
1
1
1
0
 
is_sco2_designed
3
1
has user designed the cycle?
 
sCO2 Power Cycle
0
0
1
1
1
1
0
 
is_sco2_msg_disabled
3
1
has user read sco2 msg?
 
sCO2 Power Cycle
0
8
1
1
1
1
0
 
is_sco2_off_designed
3
1
is cycle optimized?
 
sCO2 Power Cycle
0
8
1
1
1
1
0
 
is_sco2_preprocess
3
1
Use calculated off-design parameters for simulation
 
sCO2 Power Cycle
0
1
1
1
1
1
0
Default
msg_des_par_diff
3
4
User interface message 1
 
sCO2 Power Cycle
0
0
1
4
0
Default
msg_nan
3
4
User interface message 2
 
sCO2 Power Cycle
0
0
1
4
0
Default
msg_off_des
3
4
User interface message 3
 
sCO2 Power Cycle
0
0
1
4
0
Default
recomp_frac_calc
3
1
Recompression fraction
 
sCO2 Power Cycle
0
8
1
1
1
1
0
Default
recup_eff_max
3
1
Max. recuperator effectiveness
 
sCO2 Power Cycle
0
2
1
1
1
1
1
Default
sco2_T_amb_des
3
1
Ambient temperature at design
°C
sCO2 Power Cycle
0
2
1
1
1
1
42
Default
sco2_T_approach
3
1
Air cooler approach temperature
°C
sCO2 Power Cycle
0
2
1
1
1
1
15
Default
sco2_cycle_config
3
1
Cycle configuration
 
sCO2 Power Cycle
0
8
1
1
1
1
1
Default
sco2ud_T_amb_high
3
1
 
 
sCO2 Power Cycle
0
8
1
1
1
1
0
 
sco2ud_T_amb_ind_od
3
3
 
 
sCO2 Power Cycle
0
8
1
3
3
13
1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 

 
sco2ud_T_amb_low
3
1
 
 
sCO2 Power Cycle
0
8
1
1
1
1
0
Default
sco2ud_T_htf_cold_calc
3
1
HTF cold temperature
°C
sCO2 Power Cycle
0
8
1
1
1
1
0
Default
sco2ud_T_htf_high
3
1
 
 
sCO2 Power Cycle
0
8
1
1
1
1
0
 
sco2ud_T_htf_ind_od
3
3
 
 
sCO2 Power Cycle
0
8
1
3
3
13
1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 

 
sco2ud_T_htf_low
3
1
 
 
sCO2 Power Cycle
0
8
1
1
1
1
0
 
sco2ud_m_dot_htf_high
3
1
 
 
sCO2 Power Cycle
0
8
1
1
1
1
0
 
sco2ud_m_dot_htf_ind_od
3
3
 
 
sCO2 Power Cycle
0
8
1
3
3
13
1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 

 
sco2ud_m_dot_htf_low
3
1
 
 
sCO2 Power Cycle
0
8
1
1
1
1
0
 

414
// Set copy of variables from MSPT System Design page
equations{ 'SCO2_COPY_P_ref' } = define(){
	return ${P_ref}; };

equations{ 'SCO2_COPY_design_eff' } = define(){
	return ${design_eff}; };
	
equations{ 'SCO2_COPY_T_htf_hot_des' } = define(){
	return ${T_htf_hot_des}; };
	
equations{ 'sco2_cycle_config' } = define() {
	return ?${dd_sco2_cycle_config}
	[
		1,	// Recompression
		2	// Partial Cooling
   	];
};

17080
on_load{"Supercritical Carbon Dioxide Power Cycle"} = define() {
	
	if( ${is_sco2_msg_disabled} == 0.0 )
	{
		if(${pc_config} == 2.0)
		{
			value("is_sco2_msg_disabled",1.0);
			s = "You are changing from a steam cycle to a supercritical Carbon dioxide (sCO2) cycle!";
			s += "\nThe difference between the cold and hot HTF temperatures is typically smaller for sCO2 than steam cycles ";
			s += "and may require fewer receiver panels to limit the pressure drop across the receiver. You can change the number ";
			s += "of panels on the Tower and Receiver input page.";
			s += "\n\nThe sCO2 cycle model calculates values of the HTF Cold Temperature and Minimum Turbine Operation inputs, and ";
			s += "uses the calculated values in place of the values on the System Design and Power Cyle input pages, respectively. ";
			s += "\n\nUse the buttons on the Power Cycle page to calculate and display the values of the Cold HTF Temperature ";
			s += "and Minimum Turbine Operation inputs, and to calculate the cycle's off-design performance. ";
			msgbox(s);
		}	
	}
	
	msg_nan = "When you run a simulation, SAM calculates design-point parameters and the cycle off-design performance, which can take a long time. To save time, you can do the calculations now using the \"Calculate design point and off-design performance\" button above and then check \"Use calculated off-design performance\" to use that solution in the simulation. Use the \"Calculate design point without off-design performance\" button to calculate design-point parameters and display the calculated values of \"HTF cold temperature\" and \"Minimum turbine operation\" that SAM will use for simulations.";
	value("msg_nan", msg_nan);
	
	msg_diff = "The value of each input highlighted below differs from the value used for calculations. You should either re-calculate with the new values, or change them back to the values used for the calculation to ensure that results are consistent with your inputs.";
	value("msg_des_par_diff", msg_diff);
	
	msg_off_des = "To shorten simulation run time, check \"Use calculated off-design performance for simulation\" above. This will cause SAM to use stored off-design performance instead of running the calculation again  at the start the simulation. You can also check the box if you plan to run parametric simulations or run a series of simulations using the same power cycle design.";
	value("msg_off_des", msg_off_des);
	
	//property('sco2ud_T_htf_cold_calc', "BackColour", [255, 0, 0]);
	update_ui();
	update_radio_buttons();
};

on_change{'btn_sco2_design_point'} = define() {
	sco2_design_point(0);
};

on_change{'btn_sco2_des_and_udpc'} = define() {
	sco2_design_point(1);
};

on_change{'dd_sco2_cycle_config'} = define() {
	compare_des_pars();
};

on_change{"T_htf_hot_des"} = define() {
	compare_des_pars();
};

on_change{"deltaT_PHX"} = define() {
	compare_des_pars();
};

on_change{"sco2_T_amb_des"} = define() {
	compare_des_pars();
};

on_change{"sco2_T_approach"} = define() {
	compare_des_pars();
};

on_change{"P_ref"} = define() {
	compare_des_pars();
};

on_change{"design_eff"} = define() {
	compare_des_pars();
};

on_change{"eta_c"} = define() {
	compare_des_pars();
};

on_change{"eta_t"} = define() {
	compare_des_pars();
};

on_change{"recup_eff_max"} = define() {
	compare_des_pars();
};

on_change{"P_high_limit"} = define() {
	compare_des_pars();
};

on_change{"fan_power_perc_net"} = define() {
	compare_des_pars();
};

on_change{"is_sco2_preprocess"} = define() {
	if ( ${is_sco2_preprocess} == 1.0 )
		show("sco2_cb_msg", false);
	else
		show("sco2_cb_msg", true);
	refresh();	
};

function compare_des_pars () {
	is_des_par_diff = false;
//	if(${T_htf_hot_des} != ${_sco2_T_htf_hot_des})
	if(abs(${T_htf_hot_des} - ${_sco2_T_htf_hot_des}) > 1e-5*${T_htf_hot_des})
	{
		is_des_par_diff = true;
		if(isnan(${_sco2_T_htf_hot_des}))
		{
			//property("_sco2_T_htf_hot_des", "BackColour", [192,192,192]);
			enable("_sco2_T_htf_hot_des", false);
		}
		else
		{
			//property("_sco2_T_htf_hot_des", "BackColour", [255, 0, 0]);
			enable("_sco2_T_htf_hot_des", true);
		}
	}
	else
	{
		//property("_sco2_T_htf_hot_des", "BackColour", [192, 192, 192]);
		enable("_sco2_T_htf_hot_des", false);
	}
//	if(${deltaT_PHX} != ${_sco2_deltaT_PHX})
	if(abs(${deltaT_PHX} - ${_sco2_deltaT_PHX}) > 1e-5*${deltaT_PHX})
	{
		is_des_par_diff = true;
		if(isnan(${_sco2_deltaT_PHX}))
		{
			//property("_sco2_deltaT_PHX", "BackColour", [192,192,192]);
			enable("_sco2_deltaT_PHX", false);
		}
		else
		{
			//property("_sco2_deltaT_PHX", "BackColour", [255, 0, 0]);
			enable("_sco2_deltaT_PHX", true);
		}
	}
	else
	{
		//property("_sco2_deltaT_PHX", "BackColour", [192, 192, 192]);
		enable("_sco2_deltaT_PHX", false);
	}
//	if(${sco2_T_amb_des} != ${_sco2_T_amb_des})
	if(abs(${sco2_T_amb_des} - ${_sco2_T_amb_des}) > 1e-5*${sco2_T_amb_des})
	{
		is_des_par_diff = true;
		if(isnan(${_sco2_T_amb_des}))
		{
			//property("_sco2_T_amb_des", "BackColour", [192,192,192]);
			enable("_sco2_T_amb_des", false);
		}
		else
		{
			//property("_sco2_T_amb_des", "BackColour", [255, 0, 0]);
			enable("_sco2_T_amb_des", true);
		}
	}
	else
	{
		//property("_sco2_T_amb_des", "BackColour", [192, 192, 192]);
		enable("_sco2_T_amb_des", false);
	}
//	if(${sco2_T_approach} != ${_sco2_T_approach})
	if(abs(${sco2_T_approach} - ${_sco2_T_approach}) > 1e-5*${sco2_T_approach})
	{
		is_des_par_diff = true;
		if(isnan(${_sco2_T_approach}))
		{
			//property("_sco2_T_approach", "BackColour", [192,192,192]);
			enable("_sco2_T_approach", false);
		}
		else
		{
			//property("_sco2_T_approach", "BackColour", [255, 0, 0]);
			enable("_sco2_T_approach", true);
		}
	}
	else
	{
		//property("_sco2_T_approach", "BackColour", [192, 192, 192]);
		enable("_sco2_T_approach", false);
	}
//	if(${P_ref} != ${_sco2_P_ref})
	if(abs(${P_ref} - ${_sco2_P_ref}) > 1e-5*${P_ref})
	{
		is_des_par_diff = true;
		if(isnan(${_sco2_P_ref}))
		{
			//property("_sco2_P_ref", "BackColour", [192,192,192]);
			enable("_sco2_P_ref", false);
		}
		else
		{
			//property("_sco2_P_ref", "BackColour", [255, 0, 0]);
			enable("_sco2_P_ref", true);
		}
	}
	else
	{
		//property("_sco2_P_ref", "BackColour", [192, 192, 192]);
		enable("_sco2_P_ref", false);
	}
//	if(${design_eff} != ${_sco2_design_eff})
	if(abs(${design_eff} - ${_sco2_design_eff}) > 1e-5*${design_eff})
	{
		is_des_par_diff = true;
		if(isnan(${_sco2_design_eff}))
		{
			//property("_sco2_design_eff", "BackColour", [192,192,192]);
			enable("_sco2_design_eff", false);
		}
		else
		{
			//property("_sco2_design_eff", "BackColour", [255, 0, 0]);
			enable("_sco2_design_eff", true);
		}
	}
	else
	{
		//property("_sco2_design_eff", "BackColour", [192, 192, 192]);
		enable("_sco2_design_eff", false);
	}
//	if(${eta_c} != ${_sco2_eta_c})
//msgbox("eta_c, _sco2_eta_c" + ${eta_c} + "," + ${_sco2_eta_c});
	if(abs(${eta_c} - ${_sco2_eta_c}) > 1e-5*${eta_c})
	{
		is_des_par_diff = true;
		if(isnan(${_sco2_eta_c}))
		{
			//property("_sco2_eta_c", "BackColour", [192,192,192]);
			enable("_sco2_eta_c", false);
		}
		else
		{
			//property("_sco2_eta_c", "BackColour", [255, 0, 0]);
			enable("_sco2_eta_c", true);
		}
	}
	else
	{
		//property("_sco2_eta_c", "BackColour", [192, 192, 192]);
		enable("_sco2_eta_c", false);
	}
//	if(${eta_t} != ${_sco2_eta_t})
	if(abs(${eta_t} - ${_sco2_eta_t}) > 1e-5*${eta_t})
	{
		is_des_par_diff = true;
		if(isnan(${_sco2_eta_t}))
		{
			//property("_sco2_eta_t", "BackColour", [192,192,192]);
			enable("_sco2_eta_t", false);
		}
		else
		{
			//property("_sco2_eta_t", "BackColour", [255, 0, 0]);
			enable("_sco2_eta_t", true);
		}
	}
	else
	{
		//property("_sco2_eta_t", "BackColour", [192, 192, 192]);
		enable("_sco2_eta_t", false);
	}
//	if(${recup_eff_max} != ${_sco2_recup_eff_max})
	if(abs(${recup_eff_max} - ${_sco2_recup_eff_max}) > 1e-5*${recup_eff_max})
	{
		is_des_par_diff = true;
		if(isnan(${_sco2_recup_eff_max}))
		{
			//property("_sco2_recup_eff_max", "BackColour", [192,192,192]);
			enable("_sco2_recup_eff_max", false);
		}
		else
		{
			//property("_sco2_recup_eff_max", "BackColour", [255, 0, 0]);
			enable("_sco2_recup_eff_max", true);
		}
	}
	else
	{
		//property("_sco2_recup_eff_max", "BackColour", [192, 192, 192]);
		enable("_sco2_recup_eff_max", false);
	}
//	if(${P_high_limit} != ${_sco2_P_high_limit})
	if(abs(${P_high_limit} - ${_sco2_P_high_limit}) > 1e-5*${P_high_limit})
	{
		is_des_par_diff = true;
		if(isnan(${_sco2_P_high_limit}))
		{
			//property("_sco2_P_high_limit", "BackColour", [192,192,192]);
			enable("_sco2_P_high_limit", false);
		}
		else
		{
			//property("_sco2_P_high_limit", "BackColour", [255, 0, 0]);
			enable("_sco2_P_high_limit", true);
		}
	}
	else
	{
		//property("_sco2_P_high_limit", "BackColour", [192, 192, 192]);
		enable("_sco2_P_high_limit", false);
	}
//	if(${fan_power_perc_net} != ${_sco2_fan_power_perc_net})
	if(abs(${fan_power_perc_net} - ${_sco2_fan_power_perc_net}) > 1e-5*${fan_power_perc_net})
	{
		is_des_par_diff = true;
		if(isnan(${_sco2_fan_power_perc_net}))
		{
			//property("_sco2_P_high_limit", "BackColour", [192,192,192]);
			enable("_sco2_fan_power_perc_net", false);
		}
		else
		{
			//property("_sco2_P_high_limit", "BackColour", [255, 0, 0]);
			enable("_sco2_fan_power_perc_net", true);
		}
	}
	else
	{
		//property("_sco2_P_high_limit", "BackColour", [192, 192, 192]);
		enable("_sco2_fan_power_perc_net", false);
	}
//	if(${dd_sco2_cycle_config} != ${_dd_sco2_cycle_config})
	if(abs(${dd_sco2_cycle_config} - ${_dd_sco2_cycle_config}) > 1e-5*${dd_sco2_cycle_config})
	{
		is_des_par_diff = true;
	}
	if(${dd_sco2_cycle_config}==0)
	{
		enable("P_IP_calc", false);
	}
	else
	{
		enable("P_IP_calc", true);
	}
	value("is_sco2_des_par_diff", is_des_par_diff);
	update_radio_buttons();
}

function update_radio_buttons() {
	if( ${is_sco2_off_designed} == 1.0 &&
		${is_sco2_des_par_diff} == 0.0 )
	{
		enable('is_sco2_preprocess',true);
		property("sco2_cb_msg", "caption", ${msg_off_des});
		if ( ${is_sco2_preprocess} == 1.0 )
			show("sco2_cb_msg", false);
		else
			show("sco2_cb_msg", true);
	}
	else
	{
		enable('is_sco2_preprocess',false);
		value('is_sco2_preprocess',0.0);
		if(${is_sco2_off_designed} == 1.0)
		{
			property("sco2_cb_msg", "caption", ${msg_des_par_diff});
		}
		else
		{
			property("sco2_cb_msg", "caption", ${msg_nan});
		}
		show("sco2_cb_msg", true);
	}
	refresh();
}

function update_ui() {

	if( ${is_sco2_designed} == 0.0 )
	{
		value('HTR_UA_calc',nan());
		value('LTR_UA_calc',nan());
		value('sco2ud_T_htf_cold_calc',nan());
		value("recomp_frac_calc",nan());
		value("P_in_calc",nan());
		value("P_IP_calc",nan());
		value("P_out_calc",nan());
	}
	
	if( ${is_sco2_off_designed} == 0.0 )
	{
		value("_sco2_T_htf_hot_des", nan());
		value('_sco2_deltaT_PHX', nan());
		value("_sco2_T_amb_des", nan());
		value("_sco2_T_approach", nan());
		value("_sco2_P_ref", nan());
		value("_sco2_design_eff", nan());
		value("_sco2_eta_c", nan());
		value("_sco2_eta_t", nan());
		value("_sco2_recup_eff_max", nan());
		value("_sco2_P_high_limit", nan());
		value("_sco2_fan_power_perc_net", nan());		
	}
	compare_des_pars();
	refresh();
}

function sco2_design_point(is_gen_udpc) {

	obj = ssc_create();
	ssc_var(obj, "htf",${rec_htf});		//[-] Integer code for HTF, 17: Salt_60_NaNO3_40_KNO3
	ssc_var(obj, "htf_props", ${field_fl_props});		//[-] Custom HTF props (only used if htf = 50)
	ssc_var(obj, "T_htf_hot_des", ${T_htf_hot_des});	//[C] HTF design hot temperature (PHX inlet)
	ssc_var(obj, "dT_PHX_hot_approach", ${deltaT_PHX});	//[C] Temp diff between hot HTF and turbine inlet
	ssc_var(obj, "T_amb_des", ${sco2_T_amb_des});		//[C] Ambient temperature at design
	ssc_var(obj, "dT_mc_approach", ${sco2_T_approach});	//[C] Temperature difference between main compressor CO2 inlet and ambient air
	ssc_var(obj, "site_elevation", ${elev});			//[m] Site elevation (used to calculate air density in air cooler design model)
	ssc_var(obj, "W_dot_net_des", ${P_ref});			//[MWe] Design cycle power output (no cooling parasitics)
	ssc_var(obj, "cycle_config", ${sco2_cycle_config});					//[-]
	ssc_var(obj, "design_method", 1);					//[-] 1 = Specify efficiency, 2 = Specify total recup UA
	ssc_var(obj, "eta_thermal_des", ${design_eff});		//[-] Power cycle thermal efficiency
	ssc_var(obj, "eta_isen_mc", ${eta_c});				//[-] Main compressor isentropic efficiency
	ssc_var(obj, "eta_isen_rc", ${eta_c});				//[-] Re-compressor isentropic efficiency
	ssc_var(obj, "eta_isen_pc", ${eta_c});              //[-] Precompressor isentropic efficiency
	ssc_var(obj, "eta_isen_t", ${eta_t});				//[-] Turbine isentropic efficiency
	ssc_var(obj, "LT_recup_eff_max", 1.0);				//[-] Max effectiveness in LT recuperator
	ssc_var(obj, "HT_recup_eff_max", 1.0);				//[-] Max effectiveness in HT recuperator
	ssc_var(obj, "P_high_limit", ${P_high_limit});		//[MPa] Cycle high pressure limit
	ssc_var(obj, "dT_PHX_cold_approach", ${deltaT_PHX});	//[C] Temperature difference between cold HTF and cold CO2 PHX inlet
	ssc_var(obj, "fan_power_frac", ${fan_power_perc_net}/100);	//[-] Fraction of net cycle power consumed by air cooler fan
	ssc_var(obj, "deltaP_cooler_frac", 0.002);			//[-] Fraction of cycle high pressure that is design point cooler CO2 pressure drop
	
	ssc_var(obj, "is_generate_udpc", is_gen_udpc);
	
	ssc_var(obj, "m_dot_htf_ND_low", ${cycle_cutoff_frac});	//[-]
	ssc_var(obj, "m_dot_htf_ND_high", 1.05);	//[-]

	if(is_gen_udpc)
	{
		logmsg("sCO2 Design Point Optimization");
	}
	else
	{
		logmsg("sCO2 Design Point Optimization and Off-Design Parameter Calculation");
	}


	ret = ssc_exec(obj, "sco2_csp_ud_pc_tables", {'show_dialog'=true, 'hold_dialog'=true});
		
	if(ret != 0)
	{	
		ssc_free( obj );
		value("is_sco2_designed", 0.0);
		value("is_sco2_off_designed", 0.0);
		value("is_sco2_des_par_diff", 1.0);
		update_ui();
		update_radio_buttons();
		return;
	}
	
	value("is_sco2_designed", 1.0);
	value("is_sco2_des_par_diff", 1.0);
	value("_dd_sco2_cycle_config",${dd_sco2_cycle_config});
	value("_sco2_T_htf_hot_des", ${T_htf_hot_des});
	value('_sco2_deltaT_PHX', ${deltaT_PHX});
	value("_sco2_T_amb_des", ${sco2_T_amb_des});
	value("_sco2_T_approach", ${sco2_T_approach});
	value("_sco2_P_ref", ${P_ref});
	value("_sco2_design_eff", ${design_eff});
	value("_sco2_eta_c", ${eta_c});
	value("_sco2_eta_t", ${eta_t});
	value("_sco2_recup_eff_max", ${recup_eff_max});
	value("_sco2_P_high_limit", ${P_high_limit});
	value("_sco2_fan_power_perc_net", ${fan_power_perc_net});
	
	if(is_gen_udpc)
	{
		value("is_sco2_off_designed", 1.0);
	}
	else
	{
		value("is_sco2_off_designed", 0.0);
	}

	compare_des_pars();
	refresh();
	
	recomp_frac = ssc_var(obj, "recomp_frac");
	LTR_UA_calc = ssc_var(obj, "LTR_UA_assigned");
	HTR_UA_calc = ssc_var(obj, "HTR_UA_assigned");
	if(${sco2_cycle_config}==1)
	{
		P_comp_in = ssc_var(obj, "P_comp_in");
		P_IP_calc = nan();
	}
	else
	{
		P_comp_in = ssc_var(obj, "pc_P_in_des");
		P_IP_calc = ssc_var(obj, "P_comp_in");
	}
	P_comp_out = ssc_var(obj, "P_comp_out");
	T_htf_cold = ssc_var(obj, "T_htf_cold_des");
	
	value('sco2ud_T_htf_cold_calc',T_htf_cold);
	value("recomp_frac_calc",recomp_frac);
	value("P_in_calc",P_comp_in);
	value("P_IP_calc",P_IP_calc);
	value("P_out_calc",P_comp_out);
	value("LTR_UA_calc", LTR_UA_calc);
	value("HTR_UA_calc", HTR_UA_calc);
	
	cycle_type_str = "recompression";
	sco2_min_frac = 0.5;
	
	if(recomp_frac < 0.01)
	{
		cycle_type_str = "simple";
		sco2_min_frac = 0.7;
	}
	
	htm_str = "Cycle Design Considerations.";
	htm_str += 
		"\nSAM has calculated values for the HTF cold temperature and minimum turbine operation, and will use the calculated values in the simulation instead of the values on the input pages:";
	htm_str += 
		"\n\nHTF cold temperature (System Design page) from " + to_string(value('T_htf_cold_des')) +  " to " + to_string(T_htf_cold) + " C.";
	htm_str += 
		"\nMinimum turbine operation (Power Cycle page) for the " + cycle_type_str + " cycle from " + to_string(value('cycle_cutoff_frac')) + " to " + to_string(sco2_min_frac) + ".";
	htm_str += 
		" \n\nClick Yes to replace the current values with calculated ones. This will ensure that the values on the input pages are consistent with the simulation results. You can click No to keep the current values, but SAM will still use the calculated values for simulations.";

	if( yesno(htm_str) )
	{
		value('T_htf_cold_des', T_htf_cold);
		value('cycle_cutoff_frac', sco2_min_frac);
		
		if(is_gen_udpc == 1)
		{
			value("sco2ud_m_dot_htf_low", ssc_var(obj, "m_dot_htf_ND_low"));
			value("sco2ud_m_dot_htf_high", ssc_var(obj, "m_dot_htf_ND_high"));
			value("sco2ud_T_htf_ind_od", ssc_var(obj, "T_htf_ind"));
			
			value("sco2ud_T_amb_low", ssc_var(obj, "T_amb_low"));
			value("sco2ud_T_amb_high", ssc_var(obj, "T_amb_high"));
			value("sco2ud_m_dot_htf_ind_od", ssc_var(obj, "m_dot_htf_ND_ind"));
			
			value("sco2ud_T_htf_low", ssc_var(obj, "T_htf_hot_low"));
			value("sco2ud_T_htf_high", ssc_var(obj, "T_htf_hot_high"));
			value("sco2ud_T_amb_ind_od", ssc_var(obj, "T_amb_ind"));	
		}
	}
	ssc_free( obj );	
}
