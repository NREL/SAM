{
    "Name": "Battery REopt Outage Sizing",
    "Width": 860.0,
    "Height": 113.0,
    "FormObjects": {
        "Label": {
            "Visible": 1.0,
            "ObjectProperties": {
                "Name": {
                    "Type": 5.0,
                    "String": "batt_size_label3"
                },
                "X": {
                    "Type": 3.0,
                    "Integer": 12.0
                },
                "Y": {
                    "Type": 3.0,
                    "Integer": 21.0
                },
                "Width": {
                    "Type": 3.0,
                    "Integer": 835.0
                },
                "Height": {
                    "Type": 3.0,
                    "Integer": 42.0
                },
                "Tool Tip": {
                    "Type": 5.0,
                    "String": ""
                },
                "Caption": {
                    "Type": 5.0,
                    "String": "Automatically size the battery bank and get a recommended PV system size using the REopt API web service. This sends values of SAM inputs to the service, runs a REopt optimization on the service, and modifies SAM battery size and dispatch inputs with results from the REopt run. See Help for details."
                },
                "TextColour": {
                    "Type": 4.0,
                    "Color": {
                        "Red": 0.0,
                        "Green": 0.0,
                        "Blue": 0.0,
                        "Alpha": 255.0
                    }
                },
                "Bold": {
                    "Type": 2.0,
                    "Boolean": 0.0
                },
                "FontSize": {
                    "Type": 3.0,
                    "Integer": 0.0
                },
                "WordWrap": {
                    "Type": 2.0,
                    "Boolean": 1.0
                },
                "AlignRight": {
                    "Type": 2.0,
                    "Boolean": 0.0
                },
                "AlignTop": {
                    "Type": 2.0,
                    "Boolean": 1.0
                }
            }
        },
        "Button": {
            "Visible": 1.0,
            "ObjectProperties": {
                "Name": {
                    "Type": 5.0,
                    "String": "call_reopt_outage"
                },
                "X": {
                    "Type": 3.0,
                    "Integer": 291.0
                },
                "Y": {
                    "Type": 3.0,
                    "Integer": 69.0
                },
                "Width": {
                    "Type": 3.0,
                    "Integer": 198.0
                },
                "Height": {
                    "Type": 3.0,
                    "Integer": 28.0
                },
                "Tool Tip": {
                    "Type": 5.0,
                    "String": ""
                },
                "Caption": {
                    "Type": 5.0,
                    "String": "Get size and dispatch"
                },
                "TabOrder": {
                    "Type": 3.0,
                    "Integer": 2.0
                }
            }
        },
        "GroupBox": {
            "Visible": 1.0,
            "ObjectProperties": {
                "Name": {
                    "Type": 5.0,
                    "String": "object 4"
                },
                "X": {
                    "Type": 3.0,
                    "Integer": 6.0
                },
                "Y": {
                    "Type": 3.0,
                    "Integer": 3.0
                },
                "Width": {
                    "Type": 3.0,
                    "Integer": 850.0
                },
                "Height": {
                    "Type": 3.0,
                    "Integer": 105.0
                },
                "Tool Tip": {
                    "Type": 5.0,
                    "String": ""
                },
                "Caption": {
                    "Type": 5.0,
                    "String": "Optimal Sizing from REopt for Outages"
                },
                "Bold": {
                    "Type": 2.0,
                    "Boolean": 1.0
                }
            }
        }
    },
    "VarDatabase": {},
    "Equations": [],
    "Callbacks": [
        "on_load{'Battery REopt Outage Sizing'} = define()\r",
        "{\r",
        "\tgrid_outage = value('grid_outage');\r",
        "\tenable('call_reopt_outage', sum(grid_outage) > 0);\r",
        "};\r",
        "\r",
        "\r",
        "on_change{'grid_outage'} = define()\r",
        "{\r",
        "\tgrid_outage = value('grid_outage');\r",
        "\tenable('call_reopt_outage', sum(grid_outage) > 0);\r",
        "};\r",
        "\r",
        "on_change{'call_reopt_outage'} = define()\r",
        "{\r",
        "\t// check inputs before making REopt call\r",
        "\twf_len = 60 / ${ui_step_minutes} * 8760;\r",
        "\tload_len = #(${load});\r",
        "\tif (wf_len != load_len) \r",
        "\t{\r",
        "\t\tmsgbox('Inconsistent time steps.\\nWeather file and load number of records must be the same.');\r",
        "\t\texit;\r",
        "\t}\r",
        "\tif (load_len != 8760 * 4 && load_len != 8760 * 2 && load_len != 8760) \r",
        "\t{\r",
        "\t\tmsgbox('Incorrect time steps.\\nSimulation timestep must be 15, 30 or 60 minutes.');\r",
        "\t\texit;\r",
        "\t}\r",
        "\r",
        "\tif (!value('batt_dispatch_auto_can_charge'))\r",
        "\t{\r",
        "\t\tchange = yesno('REopt requires that battery can charge from PV.\\nChange Battery Can Charge from System input on Battery Dispatch page automatically? Click No to exit optimization.');\r",
        "\t\tif (change)\r",
        "\t\t{\r",
        "\t\t\tvalue('batt_dispatch_auto_can_charge', true);\r",
        "\t\t\trefresh();\r",
        "\t\t}\r",
        "\t\telse \r",
        "\t\t{\r",
        "\t\t\texit;\r",
        "\t\t}\r",
        "\t}\r",
        "\tif ( value('batt_duration_choice') != 0 )\r",
        "\t{\r",
        "\t\tchange = yesno('REopt requires desired battery size in kWh.\\nChange Desired Bank Capacity units on Battery Cell and System page from h to kWh automatically? Click No to exit the optimization.');\r",
        "\t\tif (change)\r",
        "\t\t{\r",
        "\t\t\tvalue('batt_bank_size_ui',value('batt_computed_bank_capacity'));\r",
        "\t\t\tvalue('batt_duration_choice',0);\r",
        "\t\t\trefresh();\r",
        "\t\t}\r",
        "\t\telse\r",
        "\t\t{\r",
        "\t\t\texit;\r",
        "\t\t}\r",
        "\t}\r",
        "\t\r",
        "\tbatt_kw_original = value('batt_bank_power');\r",
        "\tbatt_kwh_original = value('batt_bank_size_ui');\r",
        "\tdispatch_original_mode = value('batt_dispatch_choice_ui'); //store original batt dispatch mode\r",
        "\r",
        "\t// temporarily size to 0 to remove battery costs from total_installed_cost for REopt API call\r",
        "\tvalue('batt_bank_power', 0);\r",
        "\tvalue('batt_bank_size_ui', 0);\r",
        "\t\r",
        "\tcustom_dispatch = value('batt_custom_dispatch');\r",
        "\tif (#custom_dispatch != #(${load})) {\r",
        "\t\tvalue('batt_custom_dispatch', ${load}); //reset size of dispatch array to match load and wf\r",
        "\t}\r",
        "\t\r",
        "\treopt = reopt_size_battery(true);\r",
        "\r",
        "\tif (reopt.error)\r",
        "\t{\r",
        "\t\tif (strlen(reopt.error) > 0)\r",
        "\t\t{\r",
        "\t\t\tmsgbox(reopt.error);\r",
        "\t\t}\r",
        "\t\telse\r",
        "\t\t{\r",
        "\t\t\tmsgbox('API timed out.\\nThe REopt API timed out. Please try again later.');\r",
        "\t\t}\r",
        "\t\tvalue('batt_dispatch_choice_ui',dispatch_original_mode); //make sure UI input is consistent with SSC input\r",
        "\t\tvalue('batt_bank_power', batt_kw_original);\r",
        "\t\tvalue('batt_bank_size_ui', batt_kwh_original); \r",
        "\t\trefresh();\r",
        "\t\texit;\r",
        "\t}\r",
        "\t\r",
        "\ty = reopt.response;\r",
        "\r",
        "\tif (y.outputs == null)\r",
        "\t{\r",
        "\t\tmsgbox('Error in REopt API response.\\nTry again later or try another system design.');\r",
        "\t\tvalue('batt_dispatch_choice_ui',dispatch_original_mode); //make sure UI input is consistent with SSC input\r",
        "\t\tvalue('batt_bank_power', batt_kw_original);\r",
        "\t\tvalue('batt_bank_size_ui', batt_kwh_original); \r",
        "\t\trefresh();\r",
        "\t\texit;\r",
        "\t}\r",
        "\r",
        "\tif (y.status != 'optimal')\r",
        "\t{\r",
        "\t\tmsgbox('REopt could not find optimal battery size and dispatch.\\n' + y.status);\r",
        "\t\tvalue('batt_dispatch_choice_ui',dispatch_original_mode); //make sure UI input is consistent with SSC input\r",
        "\t\tvalue('batt_bank_power', batt_kw_original);\r",
        "\t\tvalue('batt_bank_size_ui', batt_kwh_original); \r",
        "\t\trefresh();\r",
        "\t\texit;\r",
        "\t}\r",
        "\r",
        "\tpv = y.outputs.PV;\r",
        "\tbatt = y.outputs.ElectricStorage;\r",
        "\telec = y.outputs.ElectricUtility;\r",
        "\r",
        "\tif (batt.size_kw == null && batt.size_kwh == null)\r",
        "\t{\r",
        "\t\tapply_str = 'Optimal capacity: ' + to_string(0) + \r",
        "\t\t\t' kWh\\nOptimal power: ' + to_string(0) + ' kW\\n\\nApply results?';\r",
        "\t\tapply = yesno('REopt found that optimal system has no storage.\\n' + apply_str);\r",
        "\t\tif (apply)\r",
        "\t\t{\r",
        "\t\t\tvalue('batt_bank_power', 0.0);\r",
        "\t\t\tvalue('batt_bank_size_ui', 0.0);\r",
        "\t\t}\r",
        "\t\telse\r",
        "\t\t{\r",
        "\t\t\tvalue('batt_dispatch_choice_ui',dispatch_original_mode); //make sure UI input is consistent with SSC input\r",
        "\t\t\tvalue('batt_bank_power', batt_kw_original);\r",
        "\t\t\tvalue('batt_bank_size_ui', batt_kwh_original); \r",
        "\t\t}\r",
        "\t\trefresh();\r",
        "\t\texit;\r",
        "\t}\r",
        "\r",
        "\tapply_str = 'Optimal capacity: ' + to_string(batt.size_kwh) + \r",
        "\t\t' kWh\\nOptimal power: ' + to_string(batt.size_kw) + ' kW\\n\\nChange ' +\r",
        "\t\t'battery capacity, battery power, and battery dispatch battery power target inputs with to optimal values from REopt?\\n\\nClick Yes to change the inputs. Click No to continue without changing inputs.';\r",
        "\tapply = yesno('Success! REopt found an optimal battery size and time series dispatch schedule.\\n' + apply_str);\r",
        "\tif ( apply )\r",
        "\t{\r",
        "\t\tvalue('batt_bank_power', batt.size_kw);\r",
        "\t\tvalue('batt_bank_size_ui', batt.size_kwh);\r",
        "\t\trefresh();\r",
        "\t}\r",
        "\telse\r",
        "\t{\r",
        "\t\tvalue('batt_dispatch_choice_ui',dispatch_original_mode); //make sure UI input is consistent with SSC input\r",
        "\t\tvalue('batt_bank_power', batt_kw_original);\r",
        "\t\tvalue('batt_bank_size_ui', batt_kwh_original); \r",
        "\t\trefresh();\r",
        "\t\texit;\r",
        "\t}\r",
        "\r",
        "\tif ((batt.size_kw == 0 && batt.size_kwh == 0) || !apply)\r",
        "\t{\r",
        "\t\texit;\r",
        "\t}\r",
        "\r",
        "\tbatt_to_grid = null;\r",
        "\tif (batt.year_one_to_grid_series_kw)\r",
        "\t{\r",
        "\t\tbatt_to_grid = batt.year_one_to_grid_series_kw;\r",
        "\t}\r",
        "\tbatt_to_load = batt.storage_to_load_series_kw;\r",
        "\tpv_charge = pv.electric_to_storage_series_kw;\r",
        "\tgrid_charge = elec.electric_to_storage_series_kw;\r",
        "\r",
        "\tvalue('batt_dispatch_choice_ui', 2); // make sure UI input is consistent with SSC input\r",
        "\tvalue('batt_dispatch_excl', value('batt_dispatch_choice_ui'));\r",
        "\t\r",
        "\tload = ${load};\r",
        "\t\r",
        "\tdispatch = alloc(#load);\r",
        "\tfor (i=0; i<#grid_charge; i++)\r",
        "\t{\r",
        "\t\tif (batt_to_grid)\r",
        "\t\t{\r",
        "\t\t\tdischarge = batt_to_grid[i] + batt_to_load[i];\r",
        "\t\t} \r",
        "\t\telse\r",
        "\t\t{\r",
        "\t\t\tdischarge = batt_to_load[i];\r",
        "\t\t}\r",
        "\t\tcharge = -pv_charge[i] - grid_charge[i];\r",
        "\t\t\r",
        "\t\tdispatch[i] = discharge + charge;\r",
        "\t}\r",
        "\r",
        "\tvalue('batt_custom_dispatch', dispatch);\r",
        "\tvalue('batt_dispatch_charge_only_system_exceeds_load', false);\r",
        "\tvalue('batt_dispatch_discharge_only_load_exceeds_system', false);\r",
        "\trefresh();\r",
        "\r",
        "\tmsgbox('REopt found an optimal PV size of ' + to_string(pv.size_kw) + ' kW\\n' +\r",
        "\t\t\t'This will need to be applied manually.' );\r",
        "};"
    ]
}