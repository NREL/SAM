// FORMATTING EXAMPLES
function cf_formatting_examples()
{
// cfline() function defined in invoke.cpp
// behavior defined in results.cpp:	if ( lk::node_t *cfcb = SamApp::GlobalCallbacks().Lookup( "cashflow", cfg->Financing )) { ... }
// cfline arguments: type, name, digit, scale, coloff
// argument defaults:
//   type = VARIABLE
//   digit = 2
//   scale = 1.0f
//   coloff = 0c

	// digit = -1 sets type to HEADER
	cfline( 'header with shading', -1); // header with shading
	cfline('header no shading', -1, 0); // scale = 0: header with no shading

	// name = '' sets type to SPACER
	cfline( '' );

	// digit = - 2: %g generic
	cfline( 'cf_ppa_price' , -2 ); // shows all significant digits

	// digit = - 3: %d integer
	cfline( 'cf_ppa_price' , -3 ); // integer

	// no arguments
	cfline( 'cf_ppa_price' ); // rounds cash flow values to 2 decimal places

	// digit >= 0: set number of decimal places
	cfline( 'cf_ppa_price', 0 ); // truncates decimals
	cfline( 'cf_ppa_price', 1 ); // rounds cash flow values to 1 decimal place
	cfline( 'cf_ppa_price', 2 ); // rounds cash flow values to 2 decimal places
	cfline( 'cf_ppa_price', 3 ); // rounds cash flow values to 3 decimal places

	// scale multiplies values
	cfline( 'cf_ppa_price', 2, 2 ); // round to 2 decimals and multiply by 2
	cfline( 'cf_ppa_price', 3, -1 ); // round to 3 decimals and multiply by -1

	// offset shifts columns to right
	cfline( 'cf_ppa_price', 2, 2, 3 ); // round to 2 decimals,  multiply by 2, shift by 3 columns
	cfline('total_installed_cost',2,-1, 2); // round to 2 decimals, show negative value, shift 2 columns
}

////////////////////////////////////////////////////////////////////////////////
// Helper functions
////////////////////////////////////////////////////////////////////////////////

function is_batt_tech()
{
	// may need to update to include PVWatts Battery, but as of 2020.2.29:
	// no battery replacements for PVWatts Battery
	// no retail purchases for PVWatts Battery because it is only behind-the-meter
	tech = technology();
	x = ( tech == 'PV Battery' ||
	      tech == 'Standalone Battery' ||
	      tech == 'Generic Battery' ||
	      ( tech == 'Fuel Cell' && value('en_batt') == true ) );
	return x;
}

function is_fom_fin()
{
	fin = financing();
	x = ( fin == 'Single Owner' ||
	      fin == 'Leveraged Partnership Flip' ||
	      fin == 'All Equity Partnership Flip' ||
	      fin == 'Sale Leaseback' ||
	      fin == 'Merchant Plant' );
	return x;
}

function is_debt_fin()
{
	fin = financing();
	x = ( fin == 'Single Owner' ||
		  fin == 'Host Developer' ||
		  fin == 'Leveraged Partnership Flip' ||
		  fin == 'Merchant Plant' ||
		  fin == 'Community Solar' );
	return x;
}

function is_land_lease_config()
{
	if ( varinfo( 'om_land_lease' ) == null ) { return false; }
	else { return true; }
}

// determined use of Operating Costs Fuel UI form in Startup script
// see also annual_fuel_usage and annual_fuel_usage_lifetime in SSC
// (fuel cell and biomass fuel handled separately)
function is_fuel_tech()
{
	tech = technology();
	x = ( tech == 'Generic System' ||
		  tech == 'DSLF' ||
		  tech == 'MSLF' ||
		  tech == 'Generic CSP System' ||
		  tech == 'Empirical Trough' );
     return x;
}

////////////////////////////////////////////////////////////////////////////////
// Functions for Results page cash flow tab
////////////////////////////////////////////////////////////////////////////////

function cf_production()
{
	cfline( 'ENERGY', -1);
	if (( technology() == 'PVWatts Wind Battery Hybrid')  ||  ( technology() == 'PVWatts Wind FuelCell Battery Hybrid') ){
		cfline( 'pvwatts_cf_energy_net',0);
		cfline( 'wind_cf_energy_net',0);
	}
	if ( technology() == 'Photovoltaic Wind Battery Hybrid') 	{
		cfline( 'photovoltaic_cf_energy_net',0);
		cfline( 'wind_cf_energy_net',0);
	}
	if ( technology() == 'Generic PVWatts Wind FuelCell Battery Hybrid') 	{
		cfline( 'generic_cf_energy_net',0);
		cfline( 'pvwatts_cf_energy_net',0);
		cfline( 'wind_cf_energy_net',0);
	}
	if (( technology() == 'Generic PVWatts Wind FuelCell Battery Hybrid')  ||  ( technology() == 'PVWatts Wind FuelCell Battery Hybrid') ){
		cfline( 'fuelcell_fuelcell_annual_energy_discharged',0);
	}
	if ( is_fom_fin() || financing() == 'Community Solar' )
	{
		cfline( 'cf_energy_sales', 0);
		cfline( 'cf_energy_purchases', 0);
		cfline( 'cf_energy_net', 0);
	}
	else
	{
		cfline( 'cf_energy_net', 0);
	}
	if ( is_batt_tech() )
	{
		cfline( 'cf_energy_without_battery',0);
		cfline( 'batt_annual_discharge_energy',0);
	}
	if ( technology() == 'Fuel Cell' )
	{
		cfline( 'fuelcell_annual_energy_discharged',0);
	}
	cfline( '' );
}

function cf_savings()
{
	tech = technology();
	fin = financing();
	cfline( 'SAVINGS', -1 );
	cfline( 'elec_cost_without_system', 0);
	cfline('minus:', -1, 0);
	cfline( 'elec_cost_with_system', 0);
	cfline('equals:', -1, 0);
	if ( fin == 'Host Developer' ) { cfline( 'annual_energy_value', 0); }
	else if ( fin != 'Merchant Plant' ){ cfline( 'cf_energy_value', 0); }
	if (tech == 'Fuel Cell') { cfline( 'cf_thermal_value', 0); }
	if ( fin == 'Host Developer' )
	{
		cfline( '' );
		cfline( 'cf_ppa_price' , -2 );
		cfline( 'cf_nte' , -2);
		cfline( '' );
		cfline( 'cf_agreement_cost' , 0);
		cfline( 'cf_after_tax_cash_flow', 0);
		cfline( 'cf_payback_with_expenses', 0);
		cfline( 'cf_cumulative_payback_with_expenses', 0);
	}
	cfline( '' );
}

function cf_revenue()
{
	tech = technology();
	fin = financing();
	cfline( 'REVENUE', -1);
	if ( fin == 'Merchant Plant' )
	{
		cfline( 'cf_energy_market_revenue', 0);
 		cfline( 'cf_ancillary_services_1_revenue', 0);
		cfline( 'cf_ancillary_services_2_revenue', 0);
		cfline( 'cf_ancillary_services_3_revenue', 0);
		cfline( 'cf_ancillary_services_4_revenue', 0);
		cfline( 'cf_curtailment_value', 0);
		cfline( 'cf_capacity_payment', 0);
	}
	elseif ( fin == 'Single Owner' ) // Only single owner earns revenue other than PPA revenue
	{
		cfline( 'cf_ppa_price' , -2 );
		cfline( 'cf_energy_value', 0);
		cfline( 'cf_curtailment_value', 0);
		cfline( 'cf_capacity_payment', 0);
	}
	elseif ( fin == 'Community Solar')
	{
		cfline('cf_community_solar_subscriber1_revenue', 0);
		cfline('cf_community_solar_subscriber2_revenue', 0);
		cfline('cf_community_solar_subscriber3_revenue',  0);
		cfline('cf_community_solar_subscriber4_revenue',  0);
		cfline('cf_community_solar_unsubscribed_revenue', 0);
	}
	else
	{
		cfline( 'cf_ppa_price' , -2 );
		cfline( 'cf_energy_value', 0);
	}
	if (tech == 'Fuel Cell')
	{
		cfline( 'cf_thermal_value', 0);
	}
	if ( is_debt_fin() )
	{
		is_pbi_for_ds = ( value('pbi_fed_for_ds')==1 || value('pbi_sta_for_ds')==1 || value('pbi_uti_for_ds')==1 || value('pbi_oth_for_ds')==1 );
		if ( is_pbi_for_ds )
		{
			cfline('plus PBI if available for debt service:', -1, 0);
			if ( value('pbi_fed_for_ds')==1 ) { cfline('cf_pbi_total_fed',0); }
			if ( value('pbi_sta_for_ds')==1 ) { cfline('cf_pbi_total_sta',0); }
			if ( value('pbi_uti_for_ds')==1 ) { cfline('cf_pbi_total_uti',0); }
			if ( value('pbi_oth_for_ds')==1 ) { cfline('cf_pbi_total_oth',0); }
		}
	}
	else
	{
		cfline('cf_pbi_total_fed',0);
		cfline('cf_pbi_total_sta',0);
		cfline('cf_pbi_total_uti',0);
		cfline('cf_pbi_total_oth',0);
	}
	cfline( 'cf_net_salvage_value', 0);
	cfline( 'cf_total_revenue', 0);
	cfline( '' );
}

function cf_om_expenses()
{
    tech = technology();
    fin = financing();

	if ( tech == 'PVWatts Wind Battery Hybrid' || tech == 'PVWatts Wind FuelCell Battery Hybrid' || tech == 'Photovoltaic Wind Battery Hybrid' || tech == 'Generic PVWatts Wind FuelCell Battery Hybrid' )
	{
		cfline( 'System Costs', -1, 0 );
	}
	if ( tech != 'Standalone Battery' )
	{
		cfline( 'cf_om_fixed_expense,cf_om_production_expense,cf_om_capacity_expense', 0);
	}
    if ( is_batt_tech() )
	{
		cfline( 'cf_om_fixed1_expense,cf_om_production1_expense,cf_om_capacity1_expense', 0);
		cfline( 'cf_battery_replacement_cost', 0);
	}
	if (tech == 'Fuel Cell')
	{
		cfline( 'cf_om_fixed2_expense,cf_om_production2_expense,cf_om_capacity2_expense', 0);
		cfline( 'cf_fuelcell_replacement_cost', 0);
	}
	if ( is_fuel_tech() ) { cfline('cf_om_fuel_expense', 0); }
	if ( tech == 'Biopower' ) { cfline( 'cf_om_opt_fuel_1_expense,cf_om_opt_fuel_2_expense', 0); }
	if ( tech == 'Geothermal' ) { if (value('system_use_recapitalization')==1) { cfline ('cf_recapitalization', 0); } }
	if ( is_fom_fin() )
	{
		cfline('cf_utility_bill', 0 ); // electricity purchases for self-consumption and/or battery charging
	}
	if ( technology() == 'PVWatts Wind Battery Hybrid') 
	{
		cfline( 'Subsystem Costs', -1, 0 );
		if (fin == 'Single Owner')
			cfline( 'pvwatts_cf_om_fixed,pvwatts_cf_om_production,pvwatts_cf_om_capacity,pvwatts_cf_om_land_lease',0);
		else 
			cfline( 'pvwatts_cf_om_fixed,pvwatts_cf_om_production,pvwatts_cf_om_capacity',0);
		cfline( 'wind_cf_om_fixed,wind_cf_om_production,wind_cf_om_capacity',0);
		cfline( 'battery_cf_om_fixed,battery_cf_om_production,battery_cf_om_capacity,battery_cf_battery_replacement_cost_schedule',0);
		cfline( 'Project Costs', -1, 0 );
	}
	if ( technology() == 'PVWatts Wind FuelCell Battery Hybrid'){
		cfline( 'Subsystem Costs', -1, 0 );
		if (fin == 'Single Owner')
			cfline( 'pvwatts_cf_om_fixed,pvwatts_cf_om_production,pvwatts_cf_om_capacity,pvwatts_cf_om_land_lease',0);
		else 
			cfline( 'pvwatts_cf_om_fixed,pvwatts_cf_om_production,pvwatts_cf_om_capacity',0);
		cfline( 'wind_cf_om_fixed,wind_cf_om_production,wind_cf_om_capacity',0);
		cfline( 'fuelcell_cf_om_fixed,fuelcell_cf_om_production,fuelcell_cf_om_capacity,fuelcell_cf_fuelcell_replacement_cost_schedule,fuelcell_cf_om_fuel_cost',0);
		cfline( 'battery_cf_om_fixed,battery_cf_om_production,battery_cf_om_capacity,battery_cf_battery_replacement_cost_schedule',0);
		cfline( 'Project Costs', -1, 0 );
	}
	if ( technology() == 'Photovoltaic Wind Battery Hybrid') {
		cfline( 'Subsystem Costs', -1, 0 );
		if (fin == 'Single Owner')
			cfline( 'photovoltaic_cf_om_fixed,photovoltaic_cf_om_production,photovoltaic_cf_om_capacity,photovoltaic_cf_om_land_lease',0);
		else 
			cfline( 'photovoltaic_cf_om_fixed,photovoltaic_cf_om_production,photovoltaic_cf_om_capacity',0);
		cfline( 'wind_cf_om_fixed,wind_cf_om_production,wind_cf_om_capacity',0);
		cfline( 'battery_cf_om_fixed,battery_cf_om_production,battery_cf_om_capacity,battery_cf_battery_replacement_cost_schedule',0);
		cfline( 'Project Costs', -1, 0 );
	}
	if ( technology() == 'Generic PVWatts Wind FuelCell Battery Hybrid'){
		cfline( 'Subsystem Costs', -1, 0 );
		cfline( 'generic_cf_om_fixed,generic_cf_om_production,generic_cf_om_capacity,generic_cf_om_fuel_cost',0);
		if (fin == 'Single Owner')
			cfline( 'pvwatts_cf_om_fixed,pvwatts_cf_om_production,pvwatts_cf_om_capacity,pvwatts_cf_om_land_lease',0);
		else 
			cfline( 'pvwatts_cf_om_fixed,pvwatts_cf_om_production,pvwatts_cf_om_capacity',0);
		cfline( 'wind_cf_om_fixed,wind_cf_om_production,wind_cf_om_capacity',0);
		cfline( 'fuelcell_cf_om_fixed,fuelcell_cf_om_production,fuelcell_cf_om_capacity,fuelcell_cf_fuelcell_replacement_cost_schedule,fuelcell_cf_om_fuel_cost',0);
		cfline( 'battery_cf_om_fixed,battery_cf_om_production,battery_cf_om_capacity,battery_cf_battery_replacement_cost_schedule',0);
		cfline( 'Project Costs', -1, 0 );
	}

}

function cf_operating_expenses()
{
	fin = financing();
	cfline( 'cf_property_tax_assessed_value', 0);
	cfline( '' );
	cfline( 'OPERATING EXPENSES', -1 );
	cf_om_expenses();
	cfline( 'cf_property_tax_expense', 0);
	cfline( 'cf_insurance_expense', 0);
   	if ( is_land_lease_config() ) { cfline('cf_land_lease_expense', 0); }
   	if ( fin == 'Community Solar')
	{
		cfline('cf_community_solar_recurring_fixed', 0);
		cfline('cf_community_solar_recurring_capacity',  0);
		cfline('cf_community_solar_recurring_generation', 0);
		cfline( '' );
	}
	if ( fin == "Residential" || fin == "Commercial" ) { cfline( 'cf_net_salvage_value', 0); }
	if ( fin == 'Sale Leaseback' ) { cfline('cf_sponsor_margin', 0); }
	cfline( 'cf_operating_expenses', 0);
	if ( fin == "Residential" || fin == "Commercial" )
	{
		cfline( '' );
		cfline( 'cf_deductible_expenses', 0,-1);
	}
	cfline( '' );
}

function cf_earnings()
{
	fin = financing();
	if ( fin == 'Sale Leaseback' )
	{
		cfline('OPERATING MARGIN',-1);
		cfline('cf_total_revenue',0);
		cfline('cf_operating_expenses',0,-1);
		cfline('cf_sponsor_operating_margin',0);
	}
	else { cfline( 'cf_ebitda', 0); }
	cfline( '' );
}

function cf_debt_repayment()
{
	cfline( 'DEBT REPAYMENT', -1 ); // header
	cfline( 'cf_debt_balance', 0);
	cfline( 'cf_debt_payment_interest', 0);
	cfline( 'cf_debt_payment_principal', 0);
	cfline( 'cf_debt_payment_total', 0);
	cfline( '' );
}

function cf_debt_sizing()
{
	if ( value('debt_option') == 0 )
	{
		cfline( 'DSCR (DEBT FRACTION)', -1);
		cfline('cf_ebitda', 0);
		cfline('minus:', -1, 0);
		cfline('cf_funding_equip1', 0);
		cfline('cf_funding_equip2', 0);
		cfline('cf_funding_equip3', 0);
		cfline('cf_funding_receivables',0);
		cfline('equals:', -1, 0);
		cfline('cf_cash_for_ds', 0);
		cfline('cf_debt_payment_total', 0);
		cfline('cf_pretax_dscr', 2);
	}
     if ( value('debt_option') == 1 )
    {
		cfline( 'DEBT SIZING (SCULPTED DEBT PAYMENTS)', -1);
		cfline('cf_ebitda', 0);
		cfline('minus:', -1, 0);
		cfline('cf_funding_equip1', 0);
		cfline('cf_funding_equip2', 0);
		cfline('cf_funding_equip3', 0);
		cfline('cf_funding_receivables',0);
		cfline('equals:', -1, 0);
		cfline('cf_cash_for_ds', 0);
		cfline('cf_pv_interest_factor', 2);
		cfline('cf_pv_cash_for_ds', 0);
		cfline('cf_pretax_dscr', 2);
		cfline('cf_debt_size', 0);
	}
	cfline( '' );
}

function cf_incentives()
{
	cfline( 'CASH INCENTIVES', -1);
	cfline( 'ibi_total_fed,ibi_total_sta,ibi_total_uti,ibi_total_oth,ibi_total', 0);
	cfline( '' );
	cfline( 'cbi_total_fed,cbi_total_sta,cbi_total_uti,cbi_total_oth,cbi_total', 0);
	cfline( '' );
	cfline( 'cf_pbi_total_fed,cf_pbi_total_sta,cf_pbi_total_uti,cf_pbi_total_oth,cf_pbi_total', 0);
	cfline( '' );
	cfline( 'TAX CREDITS', -1);
	cfline( 'cf_ptc_fed,cf_ptc_sta' );
	cfline( '' );
	cfline( 'cf_itc_fed_amount,cf_itc_fed_percent_amount,cf_itc_fed');
	cfline( '' );
	cfline( 'cf_itc_sta_amount,cf_itc_sta_percent_amount,cf_itc_sta');
	cfline( '' );
}

function cf_income_tax_savings() // residential, commmercial only
{
	fin = financing();
	res_loan_type = 0;
	if ( fin == 'Residential' ) { res_loan_type = value('mortgage'); } // 0=standard, 1=mortgage
	cfline( 'STATE INCOME TAX', -1 );
	cfline( 'cf_sta_taxable_incentive_income',0);
	cfline( 'cf_deductible_expenses', 0);
	if ( fin == 'Commercial' ) { cfline( 'cf_sta_depr_sched',3); cfline( 'cf_sta_depreciation', 0,-1); }
	if ( fin == 'Commercial' || res_loan_type == 1 ) { cfline('cf_debt_payment_interest',0,-1); }
	cfline( 'cf_sta_taxable_income_less_deductions', 0);
	cfline( 'state tax credits:',-1,0);
	cfline( 'cf_ptc_sta', 0);
	cfline( 'cf_itc_sta', 0);
	cfline( 'minus state tax:',-1,0);
	cfline( 'cf_sta_taxable_income_less_deductions', 0);
	cfline( 'cf_state_tax_frac',3);
	cfline( 'equals state tax savings:',-1,0);
	cfline( 'cf_sta_tax_savings', 0);
	cfline( '' );
	cfline( 'FEDERAL INCOME TAX', -1 );
	cfline( 'cf_fed_taxable_incentive_income',0);
	if ( fin == 'Commercial' )
	{
		cfline( 'cf_fed_depr_sched');
		cfline( 'cf_fed_depreciation', 0);
	}
	cfline( 'cf_deductible_expenses', 0);
	cfline( 'cf_sta_tax_savings',0);
	if ( fin == 'Commercial' ) { cfline( 'cf_fed_depr_sched'); cfline( 'cf_fed_depreciation', 0,-1); }
	if ( fin == 'Commercial' || res_loan_type == 1 ) { cfline('cf_debt_payment_interest',0,-1); }
	cfline( 'cf_fed_taxable_income_less_deductions', 0);
	cfline( 'federal tax credits:',-1,0);
	cfline( 'cf_ptc_fed', 0);
	cfline( 'cf_itc_fed', 0);
	cfline( 'minus federal tax:',-1,0);
	cfline( 'cf_fed_taxable_income_less_deductions', 0);
	cfline( 'cf_federal_tax_frac',3);
	cfline( 'equals:',-1,0);
	cfline( 'cf_fed_tax_savings', 0);
	cfline( '' );
}

function cf_after_tax_cash_flow()
{
	cfline( 'cf_after_tax_net_equity_cost_flow', 0);
	cfline( 'cf_after_tax_cash_flow', 0);
	cfline( '' );
}

function cf_operating_activities() // all PPA models except Sale Leaseback
{
	fin = financing();
	cfline( 'OPERATING ACTIVITIES', -1 );
	cfline( 'cf_ebitda', 0);
	cfline( 'cf_reserve_interest', 0);
	if ( is_debt_fin() )
	{
		isnot_pbi_for_ds = ( value('pbi_fed_for_ds')==0 || value('pbi_sta_for_ds')==0 || value('pbi_uti_for_ds')==0 || value('pbi_oth_for_ds')==0 );
		if ( isnot_pbi_for_ds )
		{
			cfline('plus PBI if not available for debt service:', -1, 0);
			if ( value('pbi_fed_for_ds')==0 ) { cfline('cf_pbi_total_fed',0); }
			if ( value('pbi_sta_for_ds')==0 ) { cfline('cf_pbi_total_sta',0); }
			if ( value('pbi_uti_for_ds')==0 ) { cfline('cf_pbi_total_uti',0); }
			if ( value('pbi_oth_for_ds')==0 ) { cfline('cf_pbi_total_oth',0); }
		}
		cfline('cf_debt_payment_interest', 0,-1);
	}
	cfline('cf_project_operating_activities', 0);
	cfline('');
}

function cf_investing_activities()
{
	fin = financing();
	cfline( 'INVESTING ACTIVITIES', -1);
	cfline('cost_prefinancing',0,-1,0);
	if ( is_debt_fin() )
	{
		cfline('cost_debt_closing',0,-1,0);
		cfline('cost_debt_upfront',0,-1,0);
	}
	if ( fin == 'Leveraged Partnership Flip' || fin == 'All Equity Partnership Flip') {	cfline('cost_equity_closing', 0,-1,0); }
	if ( fin == 'Leveraged Partnership Flip' ) { cfline('sponsor_pretax_development', 0,-1,0); }
	if ( fin == 'All Equity Partnership Flip' ) { cfline('cost_dev_fee_value', 0,-1,0); }
	cfline('construction_financing_cost',0,-1,0);
	cfline('cost_other_financing',0,-1,0);
	if ( fin == 'Community Solar' ) { cfline('community_solar_upfront_cost', 0,-1,0 ); }
	cfline('minus:', -1, 0);
	cfline( 'ibi_total', 0);
	cfline( 'cbi_total', 0);
	if ( fin == 'Community Solar' )
	{
		cfline('community_solar_upfront_revenue', 0,-1,0);
	}
	cfline('equals:', -1, 0);
	cfline('purchase_of_property', 0);
	cfline('plus:', -1, 0);
	if ( is_debt_fin() ) { cfline('cf_project_dsra', 0); }
	cfline('cf_project_wcra', 0);
	cfline('cf_project_receivablesra', 0);
	cfline('cf_project_me1ra', 0);
	cfline('cf_project_me2ra', 0);
	cfline('cf_project_me3ra', 0);
	cfline('cf_project_me1cs', 0);
	cfline('cf_project_me2cs', 0);
	cfline('cf_project_me3cs', 0);
	cfline('equals:', -1, 0);
	cfline('cf_project_investing_activities', 0);
	cfline('');
}

function cf_financing_activities() // all PPA models except Sale Leaseback
{
	fin = financing();
	cfline('FINANCING ACTIVITIES', -1);
	cfline( 'issuance_of_equity',0);
	if ( is_debt_fin() ) { cfline( 'size_of_debt', 0); }
//	cfline( 'ibi_total', 0);
//	cfline( 'cbi_total', 0);
	if ( is_debt_fin() )
	{
		cfline('minus:', -1, 0);
		cfline('cf_debt_payment_principal', 0);
		cfline('equals:', -1, 0);
	}
	cfline('cf_project_financing_activities', 0);
	cfline('');
}

function cf_project_cash_flows()
{
	fin = financing();
	if ( fin == 'Sale Leaseback' )
	{
		cfline( 'PURCHASE OF PLANT AND SALE OF PROPERTY CALCULATIONS',-1);
		cfline( 'Purchase of Plant Calculation:',-1 ); /////////////////
		cfline('cost_prefinancing',0,-1,0);
		cfline('cost_equity_closing', 0,-1,0);
		cfline('construction_financing_cost',0,-1,0);
		cfline('purchase_of_plant', 0);
		cfline('');
		cfline( 'Sale of Property Calculation:',-1); /////////////////
		cfline('cost_prefinancing',0);
		cfline('distribution_of_development_fee',0,-1,0);
		cfline('cost_equity_closing',0);
		cfline('construction_financing_cost',0);
		cfline('cost_other_financing',0);
		cfline('sale_of_property',0);
		cfline('');
		cfline( 'DEVELOPER (LESSEE) CASH FLOW', -1 );
		cfline('Developer Operating Activities:', -1); /////////////////
		cfline('cf_sponsor_operating_margin', 0);
		cfline('cf_reserve_interest', 0);
		cfline('cf_sponsor_operating_activities', 0);
		cfline('');
		cfline('Developer Investing Activities:', -1); /////////////////
		cfline('sale_of_property', 0);
		cfline('purchase_of_plant', 0);
		cfline('distribution_of_development_fee',0);
		cfline('cf_net_salvage_value',0,-1,0);
		cfline('cf_sponsor_wcra', 0);
		cfline('cf_funding_leasepayment', 0,-1,0);
		cfline('cf_disbursement_leasepayment', 0,-1,0);
		cfline('cf_sponsor_me1ra', 0);
		cfline('cf_sponsor_me2ra', 0);
		cfline('cf_sponsor_me3ra', 0);
		cfline('cf_sponsor_receivablesra', 0);
		cfline('cf_sponsor_me1cs', 0);
		cfline('cf_sponsor_me2cs', 0);
		cfline('cf_sponsor_me3cs', 0);
		cfline('cf_sponsor_investing_activities', 0);
		cfline('');
		cfline('Developer Financing Activities:', -1); /////////////////
		cfline('sponsor_equity_in_lessee_llc', 0); // (funding of reserve accounts)
		cfline('cf_sponsor_financing_activities', 0);
		cfline('');
		cfline('Developer Pre-tax Cash Flow:', -1); /////////////////
		cfline('cf_sponsor_operating_activities', 0);
		cfline('cf_sponsor_investing_activities', 0);
		cfline('cf_sponsor_financing_activities', 0);
		cfline('cf_pretax_cashflow', 0);
		cfline('plus:',-1,0);
		cfline('cf_sponsor_adj_reserve_release', 0);
		cfline('equals:',-1,0);
		cfline('cf_pretax_operating_cashflow', 0);
		cfline('');
		cfline( 'INVESTOR (LESSOR) CASH FLOW', -1 );
		cfline('Investor Operating Activities:', -1);
		cfline('cf_pretax_operating_cashflow', 0);
		cfline('cf_tax_investor_operating_activities', 0);
		cfline('');
		cfline('Investor Investing Activities:', -1);
		cfline('sale_of_property',0,-1,0);
		cfline('cf_net_salvage_value', 0);
		cfline('cf_tax_investor_investing_activities', 0);
		cfline('');
		cfline('Investor Financing Activities:', -1);
		cfline('sale_of_property', 0);
		cfline('cf_tax_investor_financing_activities', 0);
		cfline('');
		cfline('Investor Pre-tax Cash Flow:', -1); /////////////////
		cfline('cf_tax_investor_operating_activities', 0);
		cfline('cf_tax_investor_investing_activities', 0);
		cfline('cf_tax_investor_financing_activities', 0);
		cfline('cf_tax_investor_pretax_cashflow',0);
		cfline('');
	}
	else
	{
		cf_operating_activities();
		cf_investing_activities();
		cf_financing_activities();
	}
}

function cf_returns()
{
	fin = financing();
	if ( fin == 'Sale Leaseback' )
	{
		cfline( 'DEVELOPER (LESSEE) RETURNS', -1);
		cfline( 'Developer Pre-tax Returns:',-1);
		cfline( 'sponsor_equity_in_lessee_llc',0,-1,0);
		cfline('distribution_of_development_fee',0,-1,0);
		cfline( 'cf_sponsor_mecs',0);
		cfline( 'cf_disbursement_equip1',0,-1,0);
		cfline( 'cf_disbursement_equip2',0,-1,0);
		cfline( 'cf_disbursement_equip3',0,-1,0);
		cfline( 'cf_disbursement_om',0,-1,0);
		cfline( 'cf_disbursement_leasepayment',0,-1,0);
		cfline( 'cf_reserve_leasepayment_interest',0);
		cfline( 'cf_sponsor_margin',0);
		cfline( 'cf_sponsor_pretax',0);
		cfline('');
		cfline( 'Developer After-tax Returns:',-1);
		cfline( 'cf_sponsor_pretax',0);
		cfline( 'cf_sponsor_statax',0);
		cfline( 'cf_sponsor_fedtax',0);
		cfline( 'cf_sponsor_aftertax_devfee',0);
		cfline( 'cf_sponsor_aftertax',0);
		cfline('');
		cfline( 'cf_sponsor_aftertax_irr',2);
		cfline( 'cf_sponsor_aftertax_npv',0);
		cfline( '' );
		cfline( 'INVESTOR (LESSOR) RETURNS', -1);
		cfline( 'Investor Pre-tax Returns:',-1);
		cfline('sale_of_property',0,-1,0);
		cfline('cf_net_salvage_value',0);
		cfline( 'ibi_total', 0);
		cfline( 'cbi_total', 0);
		cfline( 'cf_pretax_operating_cashflow',0);
		cfline( 'cf_tax_investor_pretax',0);
		cfline('');
		cfline( 'Investor After-tax Returns:',-1);
		cfline('cf_tax_investor_aftertax_cash',0);
		cfline('cf_tax_investor_aftertax_itc',0);
		cfline('cf_tax_investor_aftertax_ptc',0);
		cfline('cf_tax_investor_aftertax_tax',0);
		cfline('cf_tax_investor_aftertax',0);
		cfline('');
		cfline('cf_tax_investor_aftertax_irr',2);
		cfline('cf_tax_investor_aftertax_npv',0);
	}
	else
	{
		cfline( "PROJECT RETURNS", -1);
		cfline('Pre-tax Cash Flow:', -1);
		cfline('cf_project_operating_activities', 0);
		cfline('cf_project_investing_activities', 0);
		cfline('cf_project_financing_activities', 0);
		cfline('cf_pretax_cashflow', 0);
		cfline('');
		cfline('Pre-tax Returns:', -1);
		cfline( 'issuance_of_equity',0,-1,0);
		cfline('cf_pretax_cashflow', 0);
		cfline('cf_project_return_pretax', 0);
		cfline('');
		cfline('After-tax Returns:', -1);
		cfline('cf_project_return_pretax', 0);
		cfline('cf_itc_fed', 0);
		cfline('cf_ptc_fed', 0);
		cfline('cf_fedtax', 0);
		cfline('cf_itc_sta', 0);
		cfline('cf_ptc_sta', 0);
		cfline('cf_statax', 0);
		cfline('cf_project_return_aftertax', 0);
		cfline('');
		cfline('cf_project_return_aftertax_irr', 2);
		cfline('cf_project_return_aftertax_npv', 0);
	}
	if ( fin == 'All Equity Partnership Flip' || fin == 'Leveraged Partnership Flip' )
	{
		cfline('');
		cfline('DEVELOPER RETURNS', -1);
 		if ( fin == 'All Equity Partnership Flip' )
		{
			cfline('Developer Capital Recovery:', -1);
			cfline('cf_sponsor_capital_recovery_cash', 0);
			cfline('cf_sponsor_capital_recovery_balance', 0);
			cfline('');
		}
		cfline( 'Developer Pre-tax Returns:',-1);
		cfline('sponsor_pretax_equity', 0);
		cfline('sponsor_pretax_development', 0);
		if ( fin == 'All Equity Partnership Flip' )
		{
			cfline('cf_sponsor_pretax_cash_during_recovery', 0);
			cfline('cf_sponsor_pretax_cash_post_recovery', 0);
		}
		else
		{
			cfline('cf_sponsor_pretax_cash',0);
		}
		cfline('cf_sponsor_pretax', 0);
		cfline('');
		cfline( 'Developer After-tax Returns:', -1);
		cfline('cf_sponsor_pretax', 0);
		cfline('cf_sponsor_aftertax_itc', 0);
		cfline('cf_sponsor_aftertax_ptc', 0);
		cfline('cf_sponsor_aftertax_tax', 0);
		cfline('cost_dev_fee_tax_liability',0,-1,1);
		cfline('cf_sponsor_aftertax', 0); // includes tax paid in Year 1 on development fee that is not shown in developer share of tax
		cfline('');
		cfline('cf_sponsor_aftertax_irr', 2);
		cfline('cf_sponsor_aftertax_npv', 0);
		cfline( '' );
		cfline( 'TAX INVESTOR RETURNS', -1);
		cfline('Investor Pre-tax Returns:',-1);
 		cfline('cf_tax_investor_aftertax_cash', 0);
		cfline('cf_tax_investor_pretax', 0);
		cfline('');
		cfline( 'Investor After-tax Returns:', -1);
		cfline('cf_tax_investor_pretax', 0);
		cfline('cf_tax_investor_aftertax_itc', 0);
		cfline('cf_tax_investor_aftertax_ptc', 0);
		cfline('cf_tax_investor_aftertax_tax', 0);
		cfline('cf_tax_investor_aftertax', 0);
		cfline('');
		cfline('cf_tax_investor_aftertax_irr', 2);
		cfline('cf_tax_investor_aftertax_npv', 0);
	}
	cfline( '' );
}

function cf_levelized_metrics()
{
	fin = financing();
	tech = technology();

    has_ppa_revenue = ( fin != 'Community Solar') && ( fin != 'Merchant Plant');

	cfline('AFTER-TAX LCOE' + ? has_ppa_revenue[ '', ' AND PPA PRICE'], -1);
	cfline('cf_annual_costs', 0);
	if ( has_ppa_revenue ) { cfline('cf_energy_value', 0); }
	cfline('cf_energy_sales', 0);
	cfline( '' );
	cfline('npv_annual_costs',0 );
	cfline('npv_energy_nom', 0);
	cfline('lcoe_nom',2);

	if ( has_ppa_revenue )
	{
		cfline( '' );
		cfline('npv_ppa_revenue', 0);
		cfline('npv_energy_nom', 0);
		cfline('lppa_nom',2);
	}

	if ( is_batt_tech() )
	{
		cfline( '' );
		cfline('LCOS CALCULATIONS', -1);
		cfline('cf_annual_cost_lcos', 0);
		cfline('cf_charging_cost_grid', 0);
		cfline('cf_charging_cost_pv', 0);
		cfline('cf_om_fixed1_expense', 0);
		cfline('cf_om_production1_expense', 0);
		cfline('cf_om_capacity1_expense', 0);
		cfline('cf_salvage_cost_lcos', 0);
		cfline('cf_annual_discharge_lcos', 0);
		cfline( '' );
		cfline('npv_annual_costs_lcos', 0);
		cfline('npv_energy_lcos_nom', 0);
		cfline('lcos_nom', 2);
		cfline('lcos_real', 2);
	}
	cfline('');
}

function cf_income_tax()
{
	fin = financing();
	if ( fin == 'Sale Leaseback' )
	{
		cfline('DEVELOPER (LESSEE) INCOME TAXES', -1);
		cfline('State:', -1);
		cfline('cf_energy_value', 0);
		cfline('cf_reserve_leasepayment_interest',0);
		cfline('cf_reserve_interest', 0);
		cfline('cf_sponsor_margin',0);
		if ( technology() == 'Geothermal' ) { if (value('system_use_recapitalization')==1) { cfline ('cf_recapitalization', 0); } }
		cfline('cf_operating_expenses', 0,-1,0);
		cfline('cf_pretax_operating_cashflow', 0,-1,0);
		cfline('cf_pbi_statax_total',0);
		cfline('cf_sponsor_statax_income_with_incentives', 0);
		cfline('cf_state_tax_frac',3);
		cfline('cf_sponsor_statax', 0);
		cfline('');
		cfline('Federal:', -1);
		cfline('cf_energy_value', 0);
		cfline('cf_reserve_leasepayment_interest',0);
		cfline('cf_reserve_interest', 0);
		cfline('cf_sponsor_margin',0);
		if ( technology() == 'Geothermal' ) { if (value('system_use_recapitalization')==1) { cfline ('cf_recapitalization', 0); } }
		cfline('cf_operating_expenses', 0,-1,0);
		cfline('cf_pretax_operating_cashflow', 0,-1,0);
		cfline('cf_sponsor_statax', 0);
		cfline('cf_pbi_fedtax_total',0);
		cfline('cf_sponsor_fedtax_income_with_incentives', 0);
		cfline('cf_federal_tax_frac',3);
		cfline('cf_sponsor_fedtax', 0);
		cfline( '' );
		cfline('INVESTOR (LESSOR) INCOME TAXES', -1);
		cfline('State:', -1);
		cfline('cf_pretax_operating_cashflow',0);
		cfline('cf_net_salvage_value',0);
		cfline('cf_stadepr_total',0,-1,0);
		cfline('ibi_statax_total', 0, 1, 1);
		cfline('cbi_statax_total', 0, 1, 1);
		cfline('cf_tax_investor_statax_income_with_incentives',0);
		cfline('cf_state_tax_frac',3);
		cfline('cf_tax_investor_statax', 0);
		cfline('');
		cfline('Federal:', -1);
		cfline('cf_pretax_operating_cashflow',0);
		cfline('cf_net_salvage_value',0);
		cfline('cf_feddepr_total',0,-1,0);
		cfline('cf_tax_investor_statax', 0);
		cfline('cf_itc_sta', 0);
		cfline('cf_ptc_sta', 0);
		cfline('ibi_fedtax_total', 0, 1, 1);
		cfline('cbi_fedtax_total', 0, 1, 1);
		cfline('cf_tax_investor_fedtax_income_with_incentives',0);
		cfline('cf_federal_tax_frac',3);
		cfline('cf_tax_investor_fedtax', 0);
	}
	else
	{
		cfline('PROJECT STATE INCOME TAXES', -1);
		cfline('cf_ebitda', 0);
		cfline('cf_pbi_statax_total', 0);
		cfline('cf_reserve_interest', 0);
		cfline('ibi_statax_total', 0, 1, 1);
		cfline('cbi_statax_total', 0, 1, 1);
		cfline('minus:', -1, 0);
		if ( is_debt_fin()) {cfline('cf_debt_payment_interest', 0); }
		cfline('cf_stadepr_total', 0);
		cfline('equals:', -1, 0);
		cfline('cf_statax_income_with_incentives', 0);
		cfline( '' );
		cfline('cf_state_tax_frac',3);
		cfline('cf_statax', 0);
		cfline( '' );
		cfline('PROJECT FEDERAL INCOME TAXES', -1);
		cfline('cf_ebitda', 0);
		cfline('cf_reserve_interest', 0);
		cfline('cf_statax', 0);
		cfline('cf_itc_sta', 0);
		cfline('cf_ptc_sta', 0);
		cfline('ibi_fedtax_total', 0, 1, 1);
		cfline('cbi_fedtax_total', 0, 1, 1);
		cfline('cf_pbi_fedtax_total', 0);
		cfline('minus:', -1, 0);
		if ( is_debt_fin()) { cfline('cf_debt_payment_interest', 0); }
		cfline('cf_feddepr_total', 0);
		cfline('equals:', -1, 0);
		cfline('cf_fedtax_income_with_incentives', 0);
		cfline( '' );
		cfline('cf_federal_tax_frac',3);
		cfline('cf_fedtax', 0);
	}
	cfline('');
}

function cf_reserves()
{
	fin = financing();
	cfline('RESERVES', -1);
	cfline('cf_funding_om', 0);
	cfline('cf_disbursement_om', 0);
	cfline('cf_reserve_om', 0);
	if ( is_debt_fin() )
	{
		cfline( '' );
		cfline('cf_funding_debtservice', 0);
		cfline('cf_disbursement_debtservice', 0);
		cfline('cf_reserve_debtservice', 0);
	}
	if ( fin == 'Sale Leaseback' )
	{
		cfline( '' );
		cfline('cf_funding_leasepayment', 0);
		cfline('cf_disbursement_leasepayment', 0);
		cfline('cf_reserve_leasepayment', 0);
	}
	cfline( '' );
	cfline('cf_funding_receivables', 0);
	cfline('cf_disbursement_receivables', 0);
	cfline('cf_reserve_receivables', 0);
	cfline( '' );
	cfline('cf_funding_equip1', 0);
	cfline('cf_disbursement_equip1', 0);
	cfline('cf_reserve_equip1', 0);
	cfline( '' );
	cfline('cf_funding_equip2', 0);
	cfline('cf_disbursement_equip2', 0);
	cfline('cf_reserve_equip2', 0);
	cfline( '' );
	cfline('cf_funding_equip3', 0);
	cfline('cf_disbursement_equip3', 0);
	cfline('cf_reserve_equip3', 0);
	cfline( '' );
	cfline('cf_reserve_total', 0);
	cfline('reserves_interest');
	cfline( 'cf_reserve_interest', 0);
	if ( fin == 'Sale Leaseback' )
	{
		cfline('');
		cfline('cf_reserve_leasepayment', 0);
		cfline('reserves_interest');
		cfline( 'cf_reserve_leasepayment_interest', 0);
	}
	cfline('');
}

function depreciation_tables()
{
	cfrow('% of Total\nDepreciable Basis,Gross Amount\nAllocated,IBI\nReduction,CBI\nReduction,Depreciable Basis\nPrior to ITC,ITC Qualifying\nCosts,% of ITC\nQualifying Costs,ITC as Percent\nAmount,ITC Basis\nDisallowance,ITC as Fixed\nAmount,ITC Basis\nDisallowance,State ITC\nReduction,Federal ITC\nReduction,Depreciable Basis\nAfter ITC Reduction,First Year Bonus\nDepreciation,Depreciable Basis\nAfter Bonus Reduction',-2);
	cfrow('DEPRECIATION AND ITC: STATE',-1);
	cfrow('MACRS 5-yr,depr_stabas_percent_macrs_5,depr_alloc_macrs_5,depr_stabas_ibi_reduc_macrs_5,depr_stabas_cbi_reduc_macrs_5,depr_stabas_prior_itc_macrs_5,itc_sta_qual_macrs_5,depr_stabas_percent_qual_macrs_5,depr_stabas_percent_amount_macrs_5,itc_disallow_sta_percent_macrs_5,depr_stabas_fixed_amount_macrs_5,itc_disallow_sta_fixed_macrs_5,depr_stabas_itc_sta_reduction_macrs_5,depr_stabas_itc_fed_reduction_macrs_5,depr_stabas_after_itc_macrs_5,depr_stabas_first_year_bonus_macrs_5,depr_stabas_macrs_5' );
	cfrow('MACRS 15-yr,depr_stabas_percent_macrs_15,depr_alloc_macrs_15,depr_stabas_ibi_reduc_macrs_15,depr_stabas_cbi_reduc_macrs_15,depr_stabas_prior_itc_macrs_15,itc_sta_qual_macrs_15,depr_stabas_percent_qual_macrs_15,depr_stabas_percent_amount_macrs_15,itc_disallow_sta_percent_macrs_15,depr_stabas_fixed_amount_macrs_15,itc_disallow_sta_fixed_macrs_15,depr_stabas_itc_sta_reduction_macrs_15,depr_stabas_itc_fed_reduction_macrs_15,depr_stabas_after_itc_macrs_15,depr_stabas_first_year_bonus_macrs_15,depr_stabas_macrs_15' );
	cfrow('Straight Line 5-yr,depr_stabas_percent_sl_5,depr_alloc_sl_5,depr_stabas_ibi_reduc_sl_5,depr_stabas_cbi_reduc_sl_5,depr_stabas_prior_itc_sl_5,itc_sta_qual_sl_5,depr_stabas_percent_qual_sl_5,depr_stabas_percent_amount_sl_5,itc_disallow_sta_percent_sl_5,depr_stabas_fixed_amount_sl_5,itc_disallow_sta_fixed_sl_5,depr_stabas_itc_sta_reduction_sl_5,depr_stabas_itc_fed_reduction_sl_5,depr_stabas_after_itc_sl_5,depr_stabas_first_year_bonus_sl_5,depr_stabas_sl_5' );
	cfrow('Straight Line 15-yr,depr_stabas_percent_sl_15,depr_alloc_sl_15,depr_stabas_ibi_reduc_sl_15,depr_stabas_cbi_reduc_sl_15,depr_stabas_prior_itc_sl_15,itc_sta_qual_sl_15,depr_stabas_percent_qual_sl_15,depr_stabas_percent_amount_sl_15,itc_disallow_sta_percent_sl_15,depr_stabas_fixed_amount_sl_15,itc_disallow_sta_fixed_sl_15,depr_stabas_itc_sta_reduction_sl_15,depr_stabas_itc_fed_reduction_sl_15,depr_stabas_after_itc_sl_15,depr_stabas_first_year_bonus_sl_15,depr_stabas_sl_15' );
	cfrow('Straight Line 20-yr,depr_stabas_percent_sl_20,depr_alloc_sl_20,depr_stabas_ibi_reduc_sl_20,depr_stabas_cbi_reduc_sl_20,depr_stabas_prior_itc_sl_20,itc_sta_qual_sl_20,depr_stabas_percent_qual_sl_20,depr_stabas_percent_amount_sl_20,itc_disallow_sta_percent_sl_20,depr_stabas_fixed_amount_sl_20,itc_disallow_sta_fixed_sl_20,depr_stabas_itc_sta_reduction_sl_20,depr_stabas_itc_fed_reduction_sl_20,depr_stabas_after_itc_sl_20,depr_stabas_first_year_bonus_sl_20,depr_stabas_sl_20' );
	cfrow('Straight Line 39-yr,depr_stabas_percent_sl_39,depr_alloc_sl_39,depr_stabas_ibi_reduc_sl_39,depr_stabas_cbi_reduc_sl_39,depr_stabas_prior_itc_sl_39,itc_sta_qual_sl_39,depr_stabas_percent_qual_sl_39,depr_stabas_percent_amount_sl_39,itc_disallow_sta_percent_sl_39,depr_stabas_fixed_amount_sl_39,itc_disallow_sta_fixed_sl_39,depr_stabas_itc_sta_reduction_sl_39,depr_stabas_itc_fed_reduction_sl_39,depr_stabas_after_itc_sl_39,depr_stabas_first_year_bonus_sl_39,depr_stabas_sl_39' );
	cfrow('Custom,depr_stabas_percent_custom,depr_alloc_custom,depr_stabas_ibi_reduc_custom,depr_stabas_cbi_reduc_custom,depr_stabas_prior_itc_custom,itc_sta_qual_custom,depr_stabas_percent_qual_custom,depr_stabas_percent_amount_custom,itc_disallow_sta_percent_custom,depr_stabas_fixed_amount_custom,itc_disallow_sta_fixed_custom,depr_stabas_itc_sta_reduction_custom,depr_stabas_itc_fed_reduction_custom,depr_stabas_after_itc_custom,depr_stabas_first_year_bonus_custom,depr_stabas_custom' );
	cfrow('Total,depr_stabas_percent_total,depr_alloc_total,depr_stabas_ibi_reduc_total,depr_stabas_cbi_reduc_total,depr_stabas_prior_itc_total,itc_sta_qual_total,depr_stabas_percent_qual_total,depr_stabas_percent_amount_total,itc_disallow_sta_percent_total,depr_stabas_fixed_amount_total,itc_disallow_sta_fixed_total,depr_stabas_itc_sta_reduction_total,depr_stabas_itc_fed_reduction_total,depr_stabas_after_itc_total,depr_stabas_first_year_bonus_total,depr_stabas_total' );
	cfrow('DEPRECIATION AND ITC: FEDERAL',-1);
	cfrow('MACRS 5-yr,depr_fedbas_percent_macrs_5,depr_alloc_macrs_5,depr_fedbas_ibi_reduc_macrs_5,depr_fedbas_cbi_reduc_macrs_5,depr_fedbas_prior_itc_macrs_5,itc_fed_qual_macrs_5,depr_fedbas_percent_qual_macrs_5,depr_fedbas_percent_amount_macrs_5,itc_disallow_fed_percent_macrs_5,depr_fedbas_fixed_amount_macrs_5,itc_disallow_fed_fixed_macrs_5,depr_fedbas_itc_sta_reduction_macrs_5,depr_fedbas_itc_fed_reduction_macrs_5,depr_fedbas_after_itc_macrs_5,depr_fedbas_first_year_bonus_macrs_5,depr_fedbas_macrs_5' );
	cfrow('MACRS 15-yr,depr_fedbas_percent_macrs_15,depr_alloc_macrs_15,depr_fedbas_ibi_reduc_macrs_15,depr_fedbas_cbi_reduc_macrs_15,depr_fedbas_prior_itc_macrs_15,itc_fed_qual_macrs_15,depr_fedbas_percent_qual_macrs_15,depr_fedbas_percent_amount_macrs_15,itc_disallow_fed_percent_macrs_15,depr_fedbas_fixed_amount_macrs_15,itc_disallow_fed_fixed_macrs_15,depr_fedbas_itc_sta_reduction_macrs_15,depr_fedbas_itc_fed_reduction_macrs_15,depr_fedbas_after_itc_macrs_15,depr_fedbas_first_year_bonus_macrs_15,depr_fedbas_macrs_15' );
	cfrow('Straight Line 5-yr,depr_fedbas_percent_sl_5,depr_alloc_sl_5,depr_fedbas_ibi_reduc_sl_5,depr_fedbas_cbi_reduc_sl_5,depr_fedbas_prior_itc_sl_5,itc_fed_qual_sl_5,depr_fedbas_percent_qual_sl_5,depr_fedbas_percent_amount_sl_5,itc_disallow_fed_percent_sl_5,depr_fedbas_fixed_amount_sl_5,itc_disallow_fed_fixed_sl_5,depr_fedbas_itc_sta_reduction_sl_5,depr_fedbas_itc_fed_reduction_sl_5,depr_fedbas_after_itc_sl_5,depr_fedbas_first_year_bonus_sl_5,depr_fedbas_sl_5' );
	cfrow('Straight Line 15-yr,depr_fedbas_percent_sl_15,depr_alloc_sl_15,depr_fedbas_ibi_reduc_sl_15,depr_fedbas_cbi_reduc_sl_15,depr_fedbas_prior_itc_sl_15,itc_fed_qual_sl_15,depr_fedbas_percent_qual_sl_15,depr_fedbas_percent_amount_sl_15,itc_disallow_fed_percent_sl_15,depr_fedbas_fixed_amount_sl_15,itc_disallow_fed_fixed_sl_15,depr_fedbas_itc_sta_reduction_sl_15,depr_fedbas_itc_fed_reduction_sl_15,depr_fedbas_after_itc_sl_15,depr_fedbas_first_year_bonus_sl_15,depr_fedbas_sl_15' );
	cfrow('Straight Line 20-yr,depr_fedbas_percent_sl_20,depr_alloc_sl_20,depr_fedbas_ibi_reduc_sl_20,depr_fedbas_cbi_reduc_sl_20,depr_fedbas_prior_itc_sl_20,itc_fed_qual_sl_20,depr_fedbas_percent_qual_sl_20,depr_fedbas_percent_amount_sl_20,itc_disallow_fed_percent_sl_20,depr_fedbas_fixed_amount_sl_20,itc_disallow_fed_fixed_sl_20,depr_fedbas_itc_sta_reduction_sl_20,depr_fedbas_itc_fed_reduction_sl_20,depr_fedbas_after_itc_sl_20,depr_fedbas_first_year_bonus_sl_20,depr_fedbas_sl_20' );
	cfrow('Straight Line 39-yr,depr_fedbas_percent_sl_39,depr_alloc_sl_39,depr_fedbas_ibi_reduc_sl_39,depr_fedbas_cbi_reduc_sl_39,depr_fedbas_prior_itc_sl_39,itc_fed_qual_sl_39,depr_fedbas_percent_qual_sl_39,depr_fedbas_percent_amount_sl_39,itc_disallow_fed_percent_sl_39,depr_fedbas_fixed_amount_sl_39,itc_disallow_fed_fixed_sl_39,depr_fedbas_itc_sta_reduction_sl_39,depr_fedbas_itc_fed_reduction_sl_39,depr_fedbas_after_itc_sl_39,depr_fedbas_first_year_bonus_sl_39,depr_fedbas_sl_39' );
	cfrow('Custom,depr_fedbas_percent_custom,depr_alloc_custom,depr_fedbas_ibi_reduc_custom,depr_fedbas_cbi_reduc_custom,depr_fedbas_prior_itc_custom,itc_fed_qual_custom,depr_fedbas_percent_qual_custom,depr_fedbas_percent_amount_custom,itc_disallow_fed_percent_custom,depr_fedbas_fixed_amount_custom,itc_disallow_fed_fixed_custom,depr_fedbas_itc_sta_reduction_custom,depr_fedbas_itc_fed_reduction_custom,depr_fedbas_after_itc_custom,depr_fedbas_first_year_bonus_custom,depr_fedbas_custom' );
	cfrow('Total,depr_fedbas_percent_total,depr_alloc_total,depr_fedbas_ibi_reduc_total,depr_fedbas_cbi_reduc_total,depr_fedbas_prior_itc_total,itc_fed_qual_total,depr_fedbas_percent_qual_total,depr_fedbas_percent_amount_total,itc_disallow_fed_percent_total,depr_fedbas_fixed_amount_total,itc_disallow_fed_fixed_total,depr_fedbas_itc_sta_reduction_total,depr_fedbas_itc_fed_reduction_total,depr_fedbas_after_itc_total,depr_fedbas_first_year_bonus_total,depr_fedbas_total');
}

function community_solar_intermediates()
{
	cfline('COMMUNITY SOLAR DETAIL', -1);
	cfline('');
	cfline('cf_subscriber1_share_fraction', 4);
	cfline('cf_subscriber2_share_fraction', 4);
	cfline('cf_subscriber3_share_fraction', 4);
	cfline('cf_subscriber4_share_fraction', 4);
	cfline('cf_unsubscribed_share_fraction', 4);
	cfline('');
	cfline('cf_subscriber1_bill_credit_rate', 3);
	cfline('cf_subscriber2_bill_credit_rate', 3);
	cfline('cf_subscriber3_bill_credit_rate', 3);
	cfline('cf_subscriber4_bill_credit_rate', 3);
	cfline('');
	cfline('cf_subscriber1_generation_payment', 0);
	cfline('cf_subscriber2_generation_payment', 0);
	cfline('cf_subscriber3_generation_payment', 0);
	cfline('cf_subscriber4_generation_payment', 0);
	cfline('');
	cfline('cf_subscriber1_share_of_generation', 0);
	cfline('cf_subscriber2_share_of_generation', 0);
	cfline('cf_subscriber3_share_of_generation', 0);
	cfline('cf_subscriber4_share_of_generation', 0);
	cfline('cf_unsubscribed_share_of_generation', 0);
	cfline('');
	cfline('cf_subscriber1_revenue_generation', 0);
	cfline('cf_subscriber2_revenue_generation', 0);
	cfline('cf_subscriber3_revenue_generation', 0);
	cfline('cf_subscriber4_revenue_generation', 0);
	cfline('cf_community_solar_unsubscribed_revenue', 0);
	cfline('');
	cfline('cf_subscriber1_revenue_upfront', 0);
	cfline('cf_subscriber2_revenue_upfront', 0);
	cfline('cf_subscriber3_revenue_upfront', 0);
	cfline('cf_subscriber4_revenue_upfront', 0);
	cfline('');
	cfline('cf_subscriber1_revenue_annual_payment', 0);
	cfline('cf_subscriber2_revenue_annual_payment', 0);
	cfline('cf_subscriber3_revenue_annual_payment', 0);
	cfline('cf_subscriber4_revenue_annual_payment', 0);
	cfline('');
	cfline('cf_subscriber1_bill_credit_amount', 0);
	cfline('cf_subscriber2_bill_credit_amount', 0);
	cfline('cf_subscriber3_bill_credit_amount', 0);
	cfline('cf_subscriber4_bill_credit_amount', 0);
	cfline('');
	cfline('cf_subscriber1_cost_of_participation', 0);
	cfline('cf_subscriber2_cost_of_participation', 0);
	cfline('cf_subscriber3_cost_of_participation', 0);
	cfline('cf_subscriber4_cost_of_participation', 0);
	cfline('');
	cfline('cf_subscriber1_net_benefit', 0);
	cfline('cf_subscriber2_net_benefit', 0);
	cfline('cf_subscriber3_net_benefit', 0);
	cfline('cf_subscriber4_net_benefit', 0);
	cfline('');
	cfline('cf_subscriber1_net_benefit_cumulative', 0);
	cfline('cf_subscriber2_net_benefit_cumulative', 0);
	cfline('cf_subscriber3_net_benefit_cumulative', 0);
	cfline('cf_subscriber4_net_benefit_cumulative', 0);
}

////////////////////////////////////////////////////////////////////////////////
// Functions for send to Excel with equations
////////////////////////////////////////////////////////////////////////////////

function create_workbook( wkbk )
{

	tech = technology();
	
	if ( tech == 'PVWatts Wind Battery Hybrid' || tech == 'PVWatts Wind FuelCell Battery Hybrid' || tech == 'Photovoltaic Wind Battery Hybrid' || tech == 'Generic PVWatts Wind FuelCell Battery Hybrid' )
	{
		msgbox('Send-to Excel with Equations Not Available.\nThis option is not available for ' + tech + ' configurations.');
		exit;
	}
	
	source = runtimedir() + 'spreadsheets/' + wkbk;
    fn = case_name() + '.xlsx';
	destination = cwd();
	destination = choose_file(destination,'Save workbook','Excel Workbook (*.xlsx)|*.xlsx',true, false, fn);
	destination = copy_file( source, destination, true);
	if (!file_exists(destination))
	{
		msgbox('Failed to copy Excel file from runtime folder!\n' + source );
		exit;
	}
	cwd(path_only(destination));

	xl_obj = xl_create( destination );
	return xl_obj;
}

// convert single value array inputs into array of length n_years
// for value/schedule inputs like itc_fed_amount
function val_sched( x, n_years, ismax ) 
{
	if (#x == 1) // input is one-year array
	{
		a = alloc(n_years);
		a[0] = x[0];
		for (i=1; i<n_years; i++)
		{
			if (ismax) { a[i] = x[0]; } // percent max value applies to all years
			else { a[i] = 0; } // amount or percent only apply to year 1
		}
		return a;
	}
	else // input is multi-year array
	{
		return x;
	}
}

// functions to set excel values with a check that sam variable exists to avoid sam crashes

// shortcut for input variables when variable name and excel named range are the same
function xl_set_value( xl, variable)
{
	if ( varinfo( variable ) == null )
	{
		msgbox( 'Cashflow Error (xl_set_value)\n' + variable + ' does not exist in this context. [' +  technology() + ', ' + financing() + '].\n\nPlease let us know at sam.support@nrel.gov.' );
		return false;
	}
	else
	{
		xl_set( xl, value(variable), variable );
		return true;
	}
}

// shortcut for boolean input variables when variable name and excel named range are the same
function xl_set_value_yesno( xl, variable )
{
	if ( varinfo( variable ) == null )
	{
		msgbox( 'Cashflow Error (xl_set_value_yesno)\n' + variable + ' does not exist in this context. [' +  technology() + ', ' + financing() + '].\n\nPlease let us know at sam.support@nrel.gov.' );
		return false;
	}
	else
	{
		y_n = 'No';
		if ( value(variable) == 1 ) { y_n = 'Yes'; }
		xl_set( xl, y_n, variable );
		return true;
	}
}

// shortcut for output variables when variable name and excel named range are the same
function xl_set_output( xl, variable)
{
	if ( varinfo( variable ) == null )
	{
		msgbox( 'Cashflow Error (xl_set_output)\n' + variable + ' does not exist in this context. [' +  technology() + ', ' + financing() + '].\n\nPlease let us know at sam.support@nrel.gov.' );
		return false;
	}
	else
	{
		xl_set( xl, output(variable), variable );
		return true;
	}
}

function send_excel_depr( xl, variable )
{
	depr = '5-yr MACRS';
	if ( value(variable) == 1 ) depr = '15-yr MACRS';
	elseif ( value(variable) == 2 ) depr = '5-yr SL';
	elseif ( value(variable) == 3 ) depr = '15-yr SL';
	elseif ( value(variable) == 4 ) depr = '20-yr SL';
	elseif ( value(variable) == 5 ) depr = '39-yr SL';
	elseif ( value(variable) == 6 ) depr = 'Custom';
	xl_set( xl, depr, variable );
}

function is_ppa_price_uniform()
{
	mode = value('ppa_multiplier_model');
	if ( mode == 0 ) // TOD weekday/weekend schedule matrices
	{
		price = alloc(9);
		for (i=1; i<=#price; i++)
		{
			price[i-1] = output('firstyear_energy_price' + to_string(i) );
		}
		j=0;
		arr[j] = price[0];
		for (i=0; i<#price; i++ )
		{
			if ( i>0 && price[i]!=0 )
			{
				j++;
				arr[j] = price[i];
			}
		}
		for (i=0;i<#arr;i++)
		{
			if ( i>0 && arr[i]!=arr[i-1] ) { return false; }
		}
		return true;
	}
	else // TOD time series multipliers
	{
		multipliers = value('dispatch_factors_ts');
		for ( i=1; i<#multipliers; i++ )
		{
			if ( multipliers[i] != multipliers[i-1] ) { return false; }
		}
		return true;
	}
}

function set_fuel(xl)
{
	// TO DO test with fuel cost input as annual table -- this approach only works for single fuel price with escalation rate
	tech = technology();
	if ( varinfo('system_heat_rate') != null )
	{
		xl_set_output( xl, 'system_heat_rate' );
	}
	//biopower annual_fuel_usage is total energy in thermal kWh, for fuel cell read cash flow output
	if ( varinfo('annual_fuel_usage') != null && tech != 'Biopower' && tech != 'Fuel Cell')
	{
		xl_set_output( xl, 'annual_fuel_usage');
		xl_set_value( xl, 'om_fuel_cost');
		xl_set_value( xl, 'om_fuel_cost_escal');
	}
}

function set_incentives(xl)
{
	/*
	if ( financing() == 'Single Owner' ||
	     financing() == 'Merchant Plant' ||
	     financing() == 'Sale Leaseback' || 
	     financing() == 'Leveraged Partnership Flip' ||
	     financing() == 'All Equity Partnership Flip' || 
	     financing() == 'Host Developer' ||
	     financing() == 'Community Solar' ) 
	{
		is_sum_itc = false;
	}     
	else
	{
		is_sum_itc = true;
		a = [ value('itc_fed_percent'),
		value('itc_sta_percent'),
		value('itc_fed_amount'),
		value('itc_sta_amount'),
		value('itc_fed_percent_maxvalue'),
		value('itc_sta_percent_maxvalue') ];
		for (i=0; i<#a; i++)
		{
			if (#a[i]>1)
			{
				msgbox('Investment Tax Credit as Array\nYou specified a state or federal investment tax credit (ITC) spread over multiple years. Send-to-Excel with Equations only supports ITC in Year 1. Setting ITC in Excel to sum of annual values in SAM, so the ITC calculations in Excel will not exactly match the values in SAM.\n\nWe will fix this in an update to ' + samver() + '.');
				i=#a;
			} 
		}
	}	
	*/
	
	xl_set_value(       xl, 'ibi_fed_amount');
	xl_set_value_yesno( xl, 'ibi_fed_amount_deprbas_fed');
	xl_set_value_yesno( xl, 'ibi_fed_amount_deprbas_sta');
	xl_set_value_yesno( xl, 'ibi_fed_amount_tax_fed');
	xl_set_value_yesno( xl, 'ibi_fed_amount_tax_sta');
	xl_set_value(       xl, 'ibi_fed_percent');
	xl_set_value_yesno( xl, 'ibi_fed_percent_deprbas_fed');
	xl_set_value_yesno( xl, 'ibi_fed_percent_deprbas_sta');
	xl_set_value(       xl, 'ibi_fed_percent_maxvalue');
	xl_set_value_yesno( xl, 'ibi_fed_percent_tax_fed');
	xl_set_value_yesno( xl, 'ibi_fed_percent_tax_sta');
	xl_set_value(       xl, 'ibi_sta_amount');
	xl_set_value_yesno( xl, 'ibi_sta_amount_deprbas_fed');
	xl_set_value_yesno( xl, 'ibi_sta_amount_deprbas_sta');
	xl_set_value_yesno( xl, 'ibi_sta_amount_tax_fed');
	xl_set_value_yesno( xl, 'ibi_sta_amount_tax_sta');
	xl_set_value(       xl, 'ibi_sta_percent');
	xl_set_value_yesno( xl, 'ibi_sta_percent_deprbas_fed');
	xl_set_value_yesno( xl, 'ibi_sta_percent_deprbas_sta');
	xl_set_value(       xl, 'ibi_sta_percent_maxvalue');
	xl_set_value_yesno( xl, 'ibi_sta_percent_tax_fed');
	xl_set_value_yesno( xl, 'ibi_sta_percent_tax_sta');
	xl_set_value(       xl, 'ibi_uti_amount');
	xl_set_value_yesno( xl, 'ibi_uti_amount_deprbas_fed');
	xl_set_value_yesno( xl, 'ibi_uti_amount_deprbas_sta');
	xl_set_value_yesno( xl, 'ibi_uti_amount_tax_fed');
	xl_set_value_yesno( xl, 'ibi_uti_amount_tax_sta');
	xl_set_value(       xl, 'ibi_uti_percent');
	xl_set_value_yesno( xl, 'ibi_uti_percent_deprbas_fed');
	xl_set_value_yesno( xl, 'ibi_uti_percent_deprbas_sta');
	xl_set_value(       xl, 'ibi_uti_percent_maxvalue');
	xl_set_value_yesno( xl, 'ibi_uti_percent_tax_fed');
	xl_set_value_yesno( xl, 'ibi_uti_percent_tax_sta');
	xl_set_value(       xl, 'ibi_oth_amount');
	xl_set_value_yesno( xl, 'ibi_oth_amount_deprbas_fed');
	xl_set_value_yesno( xl, 'ibi_oth_amount_deprbas_sta');
	xl_set_value_yesno( xl, 'ibi_oth_amount_tax_fed');
	xl_set_value_yesno( xl, 'ibi_oth_amount_tax_sta');
	xl_set_value(       xl, 'ibi_oth_percent');
	xl_set_value_yesno( xl, 'ibi_oth_percent_deprbas_fed');
	xl_set_value_yesno( xl, 'ibi_oth_percent_deprbas_sta');
	xl_set_value(       xl, 'ibi_oth_percent_maxvalue');
	xl_set_value_yesno( xl, 'ibi_oth_percent_tax_fed');
	xl_set_value_yesno( xl, 'ibi_oth_percent_tax_sta');
	xl_set_value(       xl, 'cbi_fed_amount');
	xl_set_value_yesno( xl, 'cbi_fed_deprbas_fed');
	xl_set_value_yesno( xl, 'cbi_fed_deprbas_sta');
	xl_set_value(       xl, 'cbi_fed_maxvalue');
	xl_set_value_yesno( xl, 'cbi_fed_tax_fed');
	xl_set_value_yesno( xl, 'cbi_fed_tax_sta');
	xl_set_value(       xl, 'cbi_sta_amount');
	xl_set_value_yesno( xl, 'cbi_sta_deprbas_fed');
	xl_set_value_yesno( xl, 'cbi_sta_deprbas_sta');
	xl_set_value(       xl, 'cbi_sta_maxvalue');
	xl_set_value_yesno( xl, 'cbi_sta_tax_fed');
	xl_set_value_yesno( xl, 'cbi_sta_tax_sta');
	xl_set_value(       xl, 'cbi_uti_amount');
	xl_set_value_yesno( xl, 'cbi_uti_deprbas_fed');
	xl_set_value_yesno( xl, 'cbi_uti_deprbas_sta');
	xl_set_value(       xl, 'cbi_uti_maxvalue');
	xl_set_value_yesno( xl, 'cbi_uti_tax_fed');
	xl_set_value_yesno( xl, 'cbi_uti_tax_sta');
	xl_set_value(       xl, 'cbi_oth_amount');
	xl_set_value_yesno( xl, 'cbi_oth_deprbas_fed');
	xl_set_value_yesno( xl, 'cbi_oth_deprbas_sta');
	xl_set_value(       xl, 'cbi_oth_maxvalue');
	xl_set_value_yesno( xl, 'cbi_oth_tax_fed');
	xl_set_value_yesno( xl, 'cbi_oth_tax_sta');
	
	// Note PBI available for debt service is handled with debt-related inputs
	// rather than here
	pbi = value('pbi_fed_amount');
	if ( #pbi == 1 ) xl_set_value( xl, 'pbi_fed_amount');
	else
	{
		xl_set( xl, pbi, 'AnnualPBIFederal');
		xl_set( xl, 'n/a', 'pbi_fed_amount');
	}
	xl_set_value(       xl, 'pbi_fed_escal');
	xl_set_value_yesno( xl, 'pbi_fed_tax_fed');
	xl_set_value_yesno( xl, 'pbi_fed_tax_sta');
	xl_set_value(       xl, 'pbi_fed_term');
	pbi = value('pbi_sta_amount');
	if ( #pbi == 1 ) xl_set_value( xl, 'pbi_sta_amount');
	else
	{
		xl_set( xl, pbi, 'AnnualPBIState');
		xl_set( xl, 'n/a', 'pbi_sta_amount');
	}
	xl_set_value(       xl, 'pbi_sta_escal');
	xl_set_value_yesno( xl, 'pbi_sta_tax_fed');
	xl_set_value_yesno( xl, 'pbi_sta_tax_sta');
	xl_set_value(       xl, 'pbi_sta_term');
	pbi = value('pbi_uti_amount');
	if ( #pbi == 1 ) xl_set_value( xl, 'pbi_uti_amount');
	else
	{
		xl_set( xl, pbi, 'AnnualPBIUtility');
		xl_set( xl, 'n/a', 'pbi_uti_amount');
	}
	xl_set_value(       xl, 'pbi_uti_escal');
	xl_set_value_yesno( xl, 'pbi_uti_tax_fed');
	xl_set_value_yesno( xl, 'pbi_uti_tax_sta');
	xl_set_value(       xl, 'pbi_uti_term');
	pbi = value('pbi_oth_amount');
	if ( #pbi == 1 ) xl_set_value( xl, 'pbi_oth_amount');
	else
	{
		xl_set( xl, pbi, 'AnnualPBIOther');
		xl_set( xl, 'n/a', 'pbi_oth_amount');
	}
	xl_set_value(       xl, 'pbi_oth_escal');
	xl_set_value_yesno( xl, 'pbi_oth_tax_fed');
	xl_set_value_yesno( xl, 'pbi_oth_tax_sta');
	xl_set_value(       xl, 'pbi_oth_term');

	// temporary until ITC as array is fully supported
	/*if (is_sum_itc == true )
	{
		x = value('itc_fed_amount');
		xl_set( xl, sum(x), 'itc_fed_amount' );
		x = value('itc_fed_percent');
		xl_set( xl, sum(x), 'itc_fed_percent' );
		x = value('itc_fed_percent_maxvalue');
		xl_set( xl, sum(x), 'itc_fed_percent_maxvalue' );
		x = value('itc_sta_amount');
		xl_set( xl, sum(x), 'itc_sta_amount' );
		x = value('itc_sta_percent');
		xl_set( xl, sum(x), 'itc_sta_percent' );
		x = value('itc_sta_percent_maxvalue');
		xl_set( xl, sum(x), 'itc_sta_percent_maxvalue' );
	}
	else
	{
		n_yrs = value('analysis_period');
		xl_set( xl, val_sched(value('itc_fed_amount'),n_yrs,false), 'itc_fed_amount' );
		xl_set( xl, val_sched(value('itc_fed_percent'),n_yrs,false), 'itc_fed_percent' );
		xl_set( xl, val_sched(value('itc_sta_amount'),n_yrs,false), 'itc_sta_amount' );
		xl_set( xl, val_sched(value('itc_sta_percent'),n_yrs,false), 'itc_sta_percent' );
		xl_set( xl, val_sched(value('itc_sta_percent_maxvalue'),n_yrs,true), 'itc_sta_percent_maxvalue' );
		xl_set( xl, val_sched(value('itc_fed_percent_maxvalue'),n_yrs,true), 'itc_fed_percent_maxvalue' );
	}*/

	n_yrs = value('analysis_period');
	xl_set( xl, val_sched(value('itc_fed_amount'),n_yrs,false), 'itc_fed_amount' );
	xl_set( xl, val_sched(value('itc_fed_percent'),n_yrs,false), 'itc_fed_percent' );
	xl_set( xl, val_sched(value('itc_sta_amount'),n_yrs,false), 'itc_sta_amount' );
	xl_set( xl, val_sched(value('itc_sta_percent'),n_yrs,false), 'itc_sta_percent' );
	xl_set( xl, val_sched(value('itc_sta_percent_maxvalue'),n_yrs,true), 'itc_sta_percent_maxvalue' );
	xl_set( xl, val_sched(value('itc_fed_percent_maxvalue'),n_yrs,true), 'itc_fed_percent_maxvalue' );
	
	xl_set_value_yesno( xl, 'itc_fed_amount_deprbas_fed');
	xl_set_value_yesno( xl, 'itc_fed_amount_deprbas_sta');
	xl_set_value_yesno( xl, 'itc_fed_percent_deprbas_fed');
	xl_set_value_yesno( xl, 'itc_fed_percent_deprbas_sta');
	xl_set_value_yesno( xl, 'itc_sta_amount_deprbas_fed');
	xl_set_value_yesno( xl, 'itc_sta_amount_deprbas_sta');
	xl_set_value_yesno( xl, 'itc_sta_percent_deprbas_fed');
	xl_set_value_yesno( xl, 'itc_sta_percent_deprbas_sta');

	ptc = value('ptc_fed_amount');
	if ( #ptc == 1 ) xl_set_value( xl, 'ptc_fed_amount');
	else
	{
		xl_set( xl, ptc, 'AnnualPTCFederal');
		xl_set( xl, 'n/a', 'ptc_fed_amount');
	}
	xl_set_value( xl, 'ptc_fed_term');
	xl_set_value( xl, 'ptc_fed_escal');
	ptc = value('ptc_sta_amount');
	if ( #ptc == 1 ) xl_set_value( xl, 'ptc_sta_amount');
	else
	{
		xl_set( xl, ptc, 'AnnualPTCState');
		xl_set( xl, 'n/a', 'ptc_sta_amount');
	}
	xl_set_value( xl, 'ptc_sta_term');
	xl_set_value( xl, 'ptc_sta_escal');

}

function set_om(xl)
{

	tech = technology();
	fin = financing();

	// for standard O&M costs, check for single value vs annual array and calculate in spreadsheet
	if ( tech != 'Standalone Battery' )
	{
		omf = value('om_fixed');
		omc = value('om_capacity');
		omp = value('om_production');
		if ( #omf == 1 )
		{
			xl_set_value( xl, 'om_fixed');
			xl_set_value( xl, 'om_fixed_escal');
		}
		else
		{
			xl_set( xl, omf, 'AnnualOMFixed');
			xl_set( xl, 'n/a', 'om_fixed');
			xl_set( xl, 'n/a', 'om_fixed_escal');
		}

		if ( #omc == 1 )
		{
			xl_set_value( xl, 'om_capacity');
			xl_set_value( xl, 'om_capacity_escal');
		}
		else
		{
			xl_set( xl, omc, 'AnnualOMCapacity');
			xl_set( xl, 'n/a', 'om_capacity');
			xl_set( xl, 'n/a', 'om_capacity_escal');
		}

		if ( #omp == 1 )
		{
			xl_set_value( xl, 'om_production');
			xl_set_value( xl, 'om_production_escal');
		}
		else
		{
			xl_set( xl, omp, 'AnnualOMProduction');
			xl_set( xl, 'n/a', 'om_production');
			xl_set( xl, 'n/a', 'om_production_escal');
		}
	}

	if ( is_fom_fin() )
	{
		xl_set_output( xl, 'cf_utility_bill' ); // electricity purchases for self-consumption and/or battery charging
	}

	// for configuration-specific O&M costs, export annual cash flow values to minimize complexity
	if ( is_batt_tech() )
	{
		xl_set_output( xl, 'cf_om_fixed1_expense' );
		xl_set_output( xl, 'cf_om_capacity1_expense' );
		xl_set_output( xl, 'cf_om_production1_expense' );
		xl_set_output( xl, 'cf_battery_replacement_cost' );
	}

	if ( tech == 'Fuel Cell' )
	{
		xl_set_output( xl, 'cf_om_fixed2_expense' ) ;
		xl_set_output( xl, 'cf_om_capacity2_expense' ) ;
		xl_set_output( xl, 'cf_om_production2_expense' );
		xl_set_output( xl, 'cf_fuelcell_replacement_cost' );
		xl_set( xl, output('cf_om_fuel_expense'), 'FuelCellFuel' ); // fuel cell fuel different from other fuel techs
	}

	if ( is_fuel_tech() )
	{
		xl_set_output( xl, 'cf_om_fuel_expense' );
	}

	if ( tech == 'Biopower' )
	{
		xl_set_output( xl, 'cf_om_opt_fuel_1_expense' );
		xl_set_output( xl, 'cf_om_opt_fuel_2_expense' );
	}

	if ( tech == 'Geothermal' )
	{
		if (value('system_use_recapitalization')==1) { xl_set_output( xl, 'cf_recapitalization' );  }
	}

}

function set_land_lease(xl)
{
	if ( is_land_lease_config() )
	{
		// all land area values in acres
		xl_set_value( xl, 'total_land_area');
		x = value('om_land_lease');
		if ( #x == 1 )
		{
			xl_set_value( xl, 'om_land_lease');
			xl_set_value( xl, 'om_land_lease_escal');
		}
		else
		{
			xl_set( xl, x, 'AnnualLandLease');
			xl_set( xl, 'n/a', 'om_land_lease');
			xl_set( xl, 'n/a', 'om_land_lease_escal');
		}
	}
	else
	{
		return;
	}
}

function set_rescom(xl)
{

	N = value('analysis_period');
	if ( N>100 ) msgbox('The Excel workbook only shows cash flow values for a 100-year analysis period or less. Your analysis is for ' + N + ' years.');

	xl_set_value( xl, 'system_capacity');
	xl_set_value( xl, 'total_installed_cost');
	xl_set_value( xl, 'debt_fraction');
	xl_set_value( xl, 'loan_term');
	xl_set_value( xl, 'loan_rate');
	xl_set_value( xl, 'analysis_period');
	xl_set_value( xl, 'inflation_rate');
	xl_set_value( xl, 'real_discount_rate');
	set_taxes_insurance(xl);
	xl_set_value( xl, 'salvage_percentage');
	set_om(xl);

	set_incentives(xl);
}

function set_taxes_insurance(xl)
{

	tax = value('federal_tax_rate');
	t=alloc( value('analysis_period') + 1 );
	if ( #tax == 1 )
	{
		xl_set( xl, tax[0], 'federal_tax_rate' );
		t[0]=0;
		for (i=1;i<#t;i++) { t[i]=tax[0]; }
		xl_set( xl, t, 'AnnualTaxFederal');
	}
	else
	{
		xl_set( xl, tax[1], 'federal_tax_rate');
		xl_set( xl, tax, 'AnnualTaxFederal');
	}

	tax = value('state_tax_rate');
	if ( #tax == 1 )
	{
		xl_set( xl, tax[0], 'state_tax_rate');
		t[0]=0;
		for (i=1;i<#t;i++) { t[i]=tax[0]; }
		xl_set( xl, t, 'AnnualTaxState');
	}
	else
	{
		xl_set( xl, tax[1], 'state_tax_rate');
		xl_set( xl, tax, 'AnnualTaxState');
	}

	xl_set_value( xl, 'insurance_rate');
	xl_set_value( xl, 'prop_tax_assessed_decline');
	xl_set_value( xl, 'prop_tax_cost_assessed_percent');
	xl_set_value( xl, 'property_tax_rate');
	xl_set_value( xl, 'sales_tax_rate');

}

function set_analysis_period()
{
	N = value('analysis_period');
	if ( N>40 ) msgbox('The Excel workbook only shows cash flow values for a 40-year analysis period or less. Your analysis is for ' + N + ' years.');
}

function set_debt_parameters_na( xl )
{

	na = 'N/A';

	xl_set( xl, na, 'term_int_rate');
	xl_set( xl, na, 'term_tenor' );

	xl_set( xl, na, 'DebtPercent');
	xl_set( xl, na, 'DebtServiceCoverageRatio');
	xl_set( xl, 0, 'MortgageSizeOfDebt'); // set to zero to avoid breaking debt calculations for all equity partnership flip and sale leaseback
	xl_set( xl, na, 'loan_moratorium' );
	xl_set( xl, na, 'DebtPayment'); // consider changing to 'DebtPaymentSchedule'

	xl_set( xl, na, 'dscr_limit_debt_fraction');
	xl_set( xl, na, 'dscr_maximum_debt_fraction');

	xl_set( xl, na, 'cost_debt_closing');
	xl_set( xl, na, 'cost_debt_fee');
	xl_set( xl, na, 'CostDebtUpfront' );

	xl_set( xl, na, 'dscr_reserve_months');
	xl_set( xl, [0, 0], 'cf_reserve_debtservice');
	xl_set( xl, [0, 0], 'cf_funding_debtservice');
	xl_set( xl, [0, 0], 'cf_disbursement_debtservice');

	xl_set( xl, na, 'pbi_fed_for_ds');
	xl_set( xl, na, 'pbi_sta_for_ds');
	xl_set( xl, na, 'pbi_oth_for_ds');
	xl_set( xl, na, 'pbi_uti_for_ds');

}

function set_debt_parameters( xl )
{
	fin = financing();

	//send DSCR or debt fraction depending on debt sizing mode
	if ( value('debt_option') == 0 ) // debt fraction input mode (constant payments)
	{
		xl_set( xl, value('debt_percent'), 'DebtPercent');
		xl_set( xl, 'Calculated', 'DebtServiceCoverageRatio');
		xl_set( xl, output('size_of_debt'), 'MortgageSizeOfDebt');
		xl_set_value(  xl, 'loan_moratorium');
		xl_set( xl, 'No', 'dscr_limit_debt_fraction');
		xl_set( xl, '100', 'dscr_maximum_debt_fraction'); // set to 100% so Excel cash flow formulas work correctly
	}
	else // dscr input mode (sculpted debt payments, constant DSCR)
	{
		xl_set( xl, value('dscr'), 'DebtServiceCoverageRatio');
		xl_set( xl, 'Calculated', 'DebtPercent');
		xl_set( xl, 'N/A', 'MortgageSizeOfDebt');
		xl_set( xl, '0', 'loan_moratorium' ); //ensure that loan moratorium is zero so Excel cash flow formulas work correctly
		if ( fin == 'Single Owner' )
		{
			xl_set_value_yesno( xl, 'dscr_limit_debt_fraction');
			xl_set_value( xl, 'dscr_maximum_debt_fraction');
		}
		else
		{
			xl_set( xl, 'No', 'dscr_limit_debt_fraction');
			xl_set( xl, '100', 'dscr_maximum_debt_fraction');
		}
	}

	//send debt service reserve cash flow items because of iteration with debt fraction input option
	xl_set_output( xl, 'cf_reserve_debtservice');
	xl_set_output( xl, 'cf_funding_debtservice');
	xl_set_output( xl, 'cf_disbursement_debtservice');

	//send payment option flag
	if ( value('payment_option') == 0 ) // equal payments
	{
		xl_set( xl, 'Equal payments', 'DebtPayment');
	}
	else // fixed principal
	{
		xl_set( xl, 'Fixed principal', 'DebtPayment');
	}

	xl_set_value( xl, 'cost_debt_closing');
	xl_set_value( xl, 'cost_debt_fee');
	xl_set( xl, output('cost_debt_upfront'), 'CostDebtUpfront' );

	xl_set_value( xl, 'term_int_rate');
	xl_set_value( xl, 'term_tenor');

	xl_set_value( xl, 'dscr_reserve_months');

	xl_set_value_yesno( xl, 'pbi_fed_for_ds');
	xl_set_value_yesno( xl, 'pbi_sta_for_ds');
	xl_set_value_yesno( xl, 'pbi_oth_for_ds');
	xl_set_value_yesno( xl, 'pbi_uti_for_ds');
}

// export annual values to minimize rounding discrepancies between SAM and workbook
// and to minimize number of formulas to maintain in Excel
function set_annual_values( xl )
{
	fin = financing();
	// energy
	if ( fin == 'Residential' || fin == 'Commercial' )
	{
		xl_set_output( xl, 'cf_energy_net'); // electricity net generation
		xl_set_output( xl, 'cf_energy_value'); // value of electricity savings
	}
	else
	{
		xl_set_output( xl, 'cf_energy_sales' ); // electricity to grid
		xl_set_output( xl, 'cf_energy_purchases' ); // electricity from grid
		xl_set_output( xl, 'cf_energy_net' ); // electricity to grid net (for reference only)
	}
	// revenue
	if( fin == 'Merchant Plant' )
	{
		xl_set_output( xl, 'cf_energy_market_revenue');
		xl_set_output( xl, 'cf_ancillary_services_1_revenue');
		xl_set_output( xl, 'cf_ancillary_services_2_revenue');
		xl_set_output( xl, 'cf_ancillary_services_3_revenue');
		xl_set_output( xl, 'cf_ancillary_services_4_revenue');
		xl_set_output( xl, 'cf_curtailment_value');
		xl_set_output( xl, 'cf_capacity_payment');
	}
	elseif ( is_fom_fin() || (fin == 'Host Developer') )
	{
		xl_set_output( xl, 'cf_ppa_price'); // ppa price by year
		xl_set_output( xl, 'cf_energy_value'); // ppa revenue
		if ( fin == 'Single Owner' )
		{
			xl_set_output( xl, 'cf_capacity_payment'); // capacity payments
			xl_set_output( xl, 'cf_curtailment_value'); // curtailment payments
		}
	}
	// tech-dependent
	if ( is_batt_tech() )
	{
		xl_set_output( xl, 'cf_energy_without_battery' );
		xl_set_output( xl, 'batt_annual_discharge_energy');
	}
	if ( technology() == 'Fuel Cell' )
	{
		xl_set_output( xl, 'fuelcell_annual_energy_discharged') ;
		xl_set_output( xl, 'cf_thermal_value') ;
	}
}

function set_solution_mode( xl )
{
	fin = financing();
	flip = ( (fin == 'All Equity Partnership Flip') || (fin == 'Leveraged Partnership Flip') );
	//determine whether to send ppa price and irr inputs or outputs depending on solution mode
	xl_set_value( xl, 'ppa_escalation');
	xl_set_value( xl, 'flip_target_year');
	if ( flip == true ) { xl_set_output( xl, 'flip_actual_year' ); }
	if ( value('ppa_soln_mode') == 0 ) //IRR is input
	{
		xl_set( xl, value('flip_target_percent'), 'IRRTarget');
		xl_set( xl, 'Calculated', 'PPAPriceInput' );
	}
	else //PPA price is input
	{
		xl_set( xl, 'N/A', 'IRRTarget');
		xl_set( xl, value('ppa_price_input'), 'PPAPriceInput' );
	}
	// indicate whether TOD PPA price multipliers apply
	if ( is_ppa_price_uniform() ) { xl_set( xl, 'No', 'TODMultipliersApply' );}
	else { xl_set( xl, 'Yes', 'TODMultipliersApply' );}
}

function set_equity_flip_structure( xl )
{
	xl_set_value( xl, 'tax_investor_equity_percent');
	xl_set_value( xl, 'tax_investor_preflip_cash_percent');
	xl_set_value( xl, 'tax_investor_postflip_cash_percent');
	xl_set_value( xl, 'tax_investor_preflip_tax_percent' );
	xl_set_value( xl, 'tax_investor_postflip_tax_percent' );
}

function set_developer_capital_recovery( xl )
{
	fin = financing();
	if ( fin == 'All Equity Partnership Flip' )
	{
		mode = value( 'sponsor_cap_recovery_mode' );
		if ( mode == 0 ) { str = 'Time'; }
		else { str = 'Full capital recovery'; }
		xl_set( xl, str, 'SponsorCapRecoveryMode' );
		xl_set_value( xl,  'sponsor_cap_recovery_year' );
	}
	else
	{
		xl_set( xl, 'N/A', 'SponsorCapRecoveryMode' );
		xl_set( xl, 'N/A', 'sponsor_cap_recovery_year' );
	}
}

function set_construction_financing( xl )
{
	//show construction financing cost calculation in spreadsheet
	//(ssc only uses total cost as input, so these are UI inputs from input form)
	xl_set_value( xl, 'const_per_percent1');
	xl_set_value( xl, 'const_per_percent2');
	xl_set_value( xl, 'const_per_percent3');
	xl_set_value( xl, 'const_per_percent4');
	xl_set_value( xl, 'const_per_percent5');
	xl_set_value( xl, 'const_per_upfront_rate1');
	xl_set_value( xl, 'const_per_upfront_rate2');
	xl_set_value( xl, 'const_per_upfront_rate3');
	xl_set_value( xl, 'const_per_upfront_rate4');
	xl_set_value( xl, 'const_per_upfront_rate5');
	xl_set_value( xl, 'const_per_months1');
	xl_set_value( xl, 'const_per_months2');
	xl_set_value( xl, 'const_per_months3');
	xl_set_value( xl, 'const_per_months4');
	xl_set_value( xl, 'const_per_months5');
	xl_set_value( xl, 'const_per_interest_rate1');
	xl_set_value( xl, 'const_per_interest_rate2');
	xl_set_value( xl, 'const_per_interest_rate3');
	xl_set_value( xl, 'const_per_interest_rate4');
	xl_set_value( xl, 'const_per_interest_rate5');
	xl_set_value( xl, 'construction_financing_cost');
}

function set_analysis_parameters( xl )
{
	xl_set_value( xl, 'analysis_period');
	xl_set_value( xl, 'inflation_rate');
 	xl_set_value( xl, 'real_discount_rate');
}

function set_cost_of_financing( xl )
{
	fin = financing();
	xl_set_value( xl, 'cost_other_financing');
	if ( fin == 'Leveraged Partnership Flip' || fin == 'All Equity Partnership Flip' || fin == 'Sale Leaseback' ) { partner_costs = true; }
	else { partner_costs = false; }
	if ( partner_costs )
	{
		xl_set_value( xl, 'cost_equity_closing');
		xl_set_value( xl, 'cost_dev_fee_percent');
	}
}

function set_sale_leaseback( xl )
{
	xl_set_value( xl, 'sponsor_operating_margin');
	xl_set_value( xl, 'sponsor_operating_margin_escalation');
	xl_set_value( xl, 'tax_investor_required_lease_reserve');
	xl_set_value( xl, 'sponsor_operating_margin');
}

function set_depreciation_detailed ( xl )
{
	xl_set_value( xl, 'depr_alloc_macrs_15_percent');
	xl_set_value( xl, 'depr_alloc_macrs_5_percent');
	xl_set_value( xl, 'depr_alloc_sl_15_percent');
	xl_set_value( xl, 'depr_alloc_sl_20_percent');
	xl_set_value( xl, 'depr_alloc_sl_39_percent');
	xl_set_value( xl, 'depr_alloc_sl_5_percent');
	xl_set_value( xl, 'depr_alloc_custom_percent');
	xl_set_value( xl, 'depr_custom_schedule');
	xl_set_value( xl, 'depr_bonus_fed');
	xl_set_value_yesno( xl, 'depr_bonus_fed_macrs_15');
	xl_set_value_yesno( xl, 'depr_bonus_fed_macrs_5');
	xl_set_value_yesno( xl, 'depr_bonus_fed_sl_15');
	xl_set_value_yesno( xl, 'depr_bonus_fed_sl_20');
	xl_set_value_yesno( xl, 'depr_bonus_fed_sl_39');
	xl_set_value_yesno( xl, 'depr_bonus_fed_sl_5');
	xl_set_value_yesno( xl, 'depr_bonus_fed_custom');
	xl_set_value( xl, 'depr_bonus_sta');
	xl_set_value_yesno( xl, 'depr_bonus_sta_macrs_15');
	xl_set_value_yesno( xl, 'depr_bonus_sta_macrs_5');
	xl_set_value_yesno( xl, 'depr_bonus_sta_sl_15');
	xl_set_value_yesno( xl, 'depr_bonus_sta_sl_20');
	xl_set_value_yesno( xl, 'depr_bonus_sta_sl_39');
	xl_set_value_yesno( xl, 'depr_bonus_sta_sl_5');
	xl_set_value_yesno( xl, 'depr_bonus_sta_custom');
	xl_set_value_yesno( xl, 'depr_itc_fed_macrs_15');
	xl_set_value_yesno( xl, 'depr_itc_fed_macrs_5');
	xl_set_value_yesno( xl, 'depr_itc_fed_sl_15');
	xl_set_value_yesno( xl, 'depr_itc_fed_sl_20');
	xl_set_value_yesno( xl, 'depr_itc_fed_sl_39');
	xl_set_value_yesno( xl, 'depr_itc_fed_sl_5');
	xl_set_value_yesno( xl, 'depr_itc_fed_custom');
	xl_set_value_yesno( xl, 'depr_itc_sta_macrs_15');
	xl_set_value_yesno( xl, 'depr_itc_sta_macrs_5');
	xl_set_value_yesno( xl, 'depr_itc_sta_sl_15');
	xl_set_value_yesno( xl, 'depr_itc_sta_sl_20');
	xl_set_value_yesno( xl, 'depr_itc_sta_sl_39');
	xl_set_value_yesno( xl, 'depr_itc_sta_sl_5');
	xl_set_value_yesno( xl, 'depr_itc_sta_custom');
}

function set_reserves( xl )
{
	// note debt service reserves set in debt function
	xl_set_value( xl, 'reserves_interest');
	xl_set_value( xl, 'months_working_reserve');
	xl_set_value( xl, 'months_receivables_reserve');
	xl_set_value( xl, 'equip1_reserve_cost');
	xl_set_value( xl, 'equip1_reserve_freq');
	xl_set_value( xl, 'equip2_reserve_cost');
	xl_set_value( xl, 'equip2_reserve_freq');
	xl_set_value( xl, 'equip3_reserve_cost');
	xl_set_value( xl, 'equip3_reserve_freq');
	send_excel_depr(  xl, 'equip_reserve_depr_fed');
	send_excel_depr(  xl, 'equip_reserve_depr_sta');
}

function set_system_cost_salvage( xl )
{
	xl_set_value( xl, 'system_capacity');
	xl_set_value( xl, 'total_installed_cost');
	xl_set_value( xl, 'salvage_percentage');
}

function set_lcos( xl )
{
	if ( is_batt_tech() )
	{
		xl_set_output( xl, 'cf_annual_discharge_lcos');
		xl_set_output( xl, 'cf_annual_cost_lcos');
	}

}

////////////////////////////////////////////////////////////////////////////////
// Results page Cash Flow tab
////////////////////////////////////////////////////////////////////////////////

cashflow{ 'Residential' } = define()
{
	cf_production();
	cf_savings();
	cf_operating_expenses();
	cf_debt_repayment();
	cf_income_tax_savings();
	cf_after_tax_cash_flow();
	cf_incentives();
};

cashflow{ 'Commercial' } = define()
{
	cf_production();
 	cf_savings();
 	cf_operating_expenses();
	cf_debt_repayment();
	cf_income_tax_savings();
	cf_after_tax_cash_flow();
	cf_incentives();
};

cashflow{ 'Single Owner' } = define()
{
	//cf_formatting_examples();
	cf_production();
	cf_revenue();
	cf_operating_expenses();
	cf_earnings();
	cf_project_cash_flows();
	cf_returns();
	cf_levelized_metrics();
	cf_income_tax();
	cf_incentives();
	cf_debt_repayment();
	cf_debt_sizing();
    cf_reserves();
	depreciation_tables(); // cpg remove

};

cashflow{ 'Community Solar' } = define()
{
	//cf_formatting_examples();
	cf_production();
	cf_revenue();
	cf_operating_expenses();
	cf_earnings();
	cf_project_cash_flows();
	cf_returns();
	cf_levelized_metrics();
	cf_income_tax();
	cf_incentives();
	cf_debt_repayment();
	cf_debt_sizing();
    cf_reserves();
	community_solar_intermediates();
	depreciation_tables();
};

cashflow{ 'Merchant Plant' } = define()
{
	//cf_formatting_examples();
	cf_production();
	cf_revenue();
	cf_operating_expenses();
	cf_earnings();
	cf_project_cash_flows();
	cf_returns();
	cf_levelized_metrics();
	cf_income_tax();
	cf_incentives();
	cf_debt_repayment();
	cf_debt_sizing();
    cf_reserves();
	depreciation_tables();

};

cashflow{ 'Host Developer' } = define()
{
	cf_production();
	cfline( '**HOST CASH FLOWS**', -1 );
	cfline ( '' );
	cf_savings();
	cfline( '**DEVELOPER CASH FLOWS**', -1 );
	cfline( '' );
	cf_revenue();
	cf_operating_expenses();
	cf_earnings();
	cf_project_cash_flows();
	cf_returns();
	cf_levelized_metrics();
	cf_income_tax();
 	cf_incentives();
	cf_debt_repayment();
	cf_debt_sizing();
    cf_reserves();
 	depreciation_tables();
};

cashflow{ 'Leveraged Partnership Flip' } = define()
{
	cf_production();
	cf_revenue();
	cf_operating_expenses();
	cf_earnings();
	cf_project_cash_flows();
 	cf_returns();
	cf_levelized_metrics();
	cf_income_tax();
 	cf_incentives();
	cf_debt_repayment();
	cf_debt_sizing();
	cf_reserves();
	depreciation_tables();
};

cashflow{ 'All Equity Partnership Flip' } = define()
{
 	cf_production();
	cf_revenue();
 	cf_operating_expenses();
	cf_earnings();
 	cf_project_cash_flows();
 	cf_returns();
	cf_levelized_metrics();
	cf_income_tax();
	cf_incentives();
	cf_reserves();
	depreciation_tables();
};

cashflow{ 'Sale Leaseback' } = define()
{
	cf_production();
	cf_revenue();
 	cf_operating_expenses();
	cf_earnings();
	cf_project_cash_flows();
	cf_returns();
	cf_levelized_metrics();
	cf_income_tax();
 	cf_incentives();
	cf_reserves();
	depreciation_tables();
};

// end of tables for cash flow tab

////////////////////////////////////////////////////////////////////////////////
// Send to Excel with equations
////////////////////////////////////////////////////////////////////////////////

cashflow_to_excel{ 'Residential' } = define()
{
	xl = create_workbook( 'residential_commercial.xlsx' );

	set_annual_values( xl );
	set_rescom(xl);
	set_fuel(xl);

	//Variables specific to residential model
	xl_set( xl, (${mortgage}?'Yes':'No'), 'UseTaxDeductibleInterest');
	xl_set( xl, 'N/A', 'StateDepreciation');
	xl_set( xl, 'N/A', 'FederalDepreciation');
};

cashflow_to_excel{ 'Commercial' } = define()
{
	xl = create_workbook( 'residential_commercial.xlsx' );

	set_annual_values( xl );
	set_rescom(xl);
	set_fuel(xl);

	//Variables specific to commercial model
	xl_set( xl, 'Yes', 'UseTaxDeductibleInterest');
	s = value('depr_sta_type');
	if (s == 0) state = 'No Depreciation';
	if (s == 1) state = '5-yr MACRS';
	if (s == 2) state = 'Straight Line' + value('depr_sta_sl_years') + ' Years';
	if (s == 3) state = 'Custom (see cash flow)';
	xl_set( xl, state, 'StateDepreciation'); //show depreciation type in inputs table for reference only
	f = value('depr_fed_type'); //show depreciation percentages in cash flow for calculations
	if (f == 0) fed = 'No Depreciation';
	if (f == 1) fed = '5-yr MACRS';
	if (f == 2) fed = 'Straight Line' + value('depr_sta_sl_years') + ' Years';
	if (f == 3) fed = 'Custom (see cash flow)';
	xl_set( xl, fed, 'FederalDepreciation');
	xl_set ( xl, output('cf_sta_depr_sched'), 'StateDepreciationSchedule');
	xl_set ( xl, output('cf_fed_depr_sched'), 'FederalDepreciationSchedule');

};

cashflow_to_excel{ 'Merchant Plant'} = define()
{
	xl = create_workbook( 'merchant_plant.xlsx' );
 	set_analysis_period();
	set_debt_parameters( xl );
	set_annual_values( xl );
	xl_set_value( xl, 'mp_enable_energy_market_revenue' );
	xl_set_value( xl, 'mp_enable_ancserv1' );
	xl_set_value( xl, 'mp_enable_ancserv2' );
	xl_set_value( xl, 'mp_enable_ancserv3' );
	xl_set_value( xl, 'mp_enable_ancserv4' );
	set_lcos( xl );
	set_construction_financing( xl );
	set_incentives(xl);
	set_om( xl );
	set_land_lease( xl );
	set_fuel( xl );
	set_analysis_parameters( xl );
	set_cost_of_financing( xl );
	set_depreciation_detailed ( xl );
	set_reserves( xl );
	set_taxes_insurance(xl);
	set_system_cost_salvage( xl );
};

cashflow_to_excel{ 'Single Owner' } = define()
{
	xl = create_workbook( 'single_owner.xlsx' );
 	set_analysis_period();
	set_debt_parameters( xl );
	set_annual_values( xl );
	set_lcos( xl );
	set_solution_mode( xl );
	set_construction_financing( xl );
	set_incentives(xl);
	set_om( xl );
	set_land_lease( xl );
	set_fuel( xl );
	set_analysis_parameters( xl );
	set_cost_of_financing( xl );
	set_depreciation_detailed ( xl );
	set_reserves( xl );
	set_taxes_insurance(xl);
	set_system_cost_salvage( xl );
};

cashflow_to_excel{ 'Community Solar' } = define()
{
	xl = create_workbook( 'community_solar.xlsx' );
 	set_analysis_period();
	set_debt_parameters( xl );
	set_annual_values( xl );
	//set_lcos( xl );
	//set_solution_mode( xl );
	set_construction_financing( xl );
	set_incentives(xl);
	set_om( xl );
	set_land_lease( xl );
	set_fuel( xl );
	set_analysis_parameters( xl );
	set_cost_of_financing( xl );
	set_depreciation_detailed ( xl );
	set_reserves( xl );
	set_taxes_insurance(xl);
	set_system_cost_salvage( xl );
	// asd
	xl_set_value( xl, 'cs_cost_upfront');
	xl_set_value( xl, 'cs_cost_upfront_per_capacity');
	x = value( 'cs_cost_recurring_fixed');
	if ( #x == 1 )
	{
		xl_set_value( xl, 'cs_cost_recurring_fixed');
		xl_set_value( xl, 'cs_cost_recurring_fixed_escal');
	}
	else
	{
		xl_set( xl, x, 'AnnualCSCostRecurringFixed');
		xl_set( xl, 'n/a', 'cs_cost_recurring_fixed');
		xl_set( xl, 'n/a', 'cs_cost_recurring_fixed_escal');
	}
	x = value( 'cs_cost_recurring_capacity');
	if ( #x == 1 )
	{
		xl_set_value( xl, 'cs_cost_recurring_capacity');
		xl_set_value( xl, 'cs_cost_recurring_capacity_escal');
	}
	else
	{
		xl_set( xl, x, 'AnnualCSCostRecurringCapacity');
		xl_set( xl, 'n/a', 'cs_cost_recurring_capacity');
		xl_set( xl, 'n/a', 'cs_cost_recurring_capacity_escal');
	}
	x = value( 'cs_cost_recurring_generation');
	if ( #x == 1 )
	{
		xl_set_value( xl, 'cs_cost_recurring_generation');
		xl_set_value( xl, 'cs_cost_recurring_generation_escal');
	}
	else
	{
		xl_set( xl, x, 'AnnualCSCostRecurringGeneration');
		xl_set( xl, 'n/a', 'cs_cost_recurring_generation');
		xl_set( xl, 'n/a', 'cs_cost_recurring_generation_escal');
	}
	x = value( 'unsubscribed_payment_generation');
	if ( #x == 1 )
	{
		xl_set_value( xl, 'unsubscribed_payment_generation');
		xl_set_value( xl, 'unsubscribed_payment_generation_escal');
	}
	else
	{
		xl_set( xl, x, 'AnnualUnsubscribedPaymentGeneration');
		xl_set( xl, 'n/a', 'unsubscribed_payment_generation');
		xl_set( xl, 'n/a', 'unsubscribed_payment_generation_escal');
	}
	for ( i=1; i<=4; i++ )
	{
		prefix = 'subscriber' + i;
		if ( value( prefix + '_name' ) != ''  ) { xl_set_value( xl, prefix + '_name' ); }
		xl_set_value( xl, prefix + '_payment_upfront');
		xl_set( xl, output('cf_' + prefix + '_share_fraction'), 'cf_' + prefix + '_share_fraction' );
		x = value( prefix + '_share');
		if ( #x == 1 )
		{
			xl_set_value( xl, prefix + '_share');
			xl_set_value( xl, prefix + '_growth');
		}
		else
		{
			xl_set( xl, x, 'AnnualSubscriber' + i + 'Share');
			xl_set( xl, 'n/a', prefix + '_share');
			xl_set( xl, 'n/a', prefix + '_growth');
		}
		x = value( prefix + '_bill_credit_rate');
		if ( #x == 1 )
		{
			xl_set_value( xl, prefix + '_bill_credit_rate');
			xl_set_value( xl, prefix + '_bill_credit_rate_escal');
		}
		else
		{
			xl_set( xl, x, 'AnnualSubscriber' + i + 'BillCreditRate');
			xl_set( xl, 'n/a', prefix + '_bill_credit_rate');
			xl_set( xl, 'n/a', prefix + '_bill_credit_rate_escal');
		}
		x = value( prefix + '_payment_annual');
		if ( #x == 1 )
		{
			xl_set_value( xl, prefix + '_payment_annual');
			xl_set_value( xl, prefix + '_payment_annual_escal');
		}
		else
		{
			xl_set( xl, x, 'AnnualSubscriber' + i + 'PaymentAnnual');
			xl_set( xl, 'n/a', prefix + '_payment_annual');
			xl_set( xl, 'n/a', prefix + '_payment_annual_escal');
		}
		x = value( prefix + '_payment_generation');
		if ( #x == 1 )
		{
			xl_set_value( xl, prefix + '_payment_generation');
			xl_set_value( xl, prefix + '_payment_generation_escal');
		}
		else
		{
			xl_set( xl, x, 'AnnualSubscriber' + i + 'PaymentGeneration');
			xl_set( xl, 'n/a', prefix + '_payment_generation');
			xl_set( xl, 'n/a', prefix + '_payment_generation_escal');
		}
	}
};

cashflow_to_excel{ 'Host Developer' } = define()
{
	xl = create_workbook( 'host_developer.xlsx' );
  	set_analysis_period();
	set_debt_parameters( xl );
	set_annual_values( xl );
	set_solution_mode( xl );

	// HOST values
	xl_set_output( xl, 'elec_cost_with_system');
	xl_set_output( xl, 'elec_cost_without_system');
	xl_set_value( xl, 'host_real_discount_rate');

	set_lcos( xl );
	set_construction_financing( xl );
	set_incentives(xl);
	set_om(xl);
	set_land_lease( xl );
	set_fuel(xl);
	set_analysis_parameters( xl );
	set_cost_of_financing( xl );
	set_depreciation_detailed( xl );
	set_reserves( xl );
	set_taxes_insurance(xl);
	set_system_cost_salvage( xl );
};

cashflow_to_excel{ 'Leveraged Partnership Flip' } = define()
{
	xl = create_workbook( 'partnership_flip.xlsx' );
 	set_analysis_period();
	set_debt_parameters( xl );
	set_annual_values( xl );
	set_lcos( xl );
	set_solution_mode( xl );
	set_equity_flip_structure( xl );
	set_developer_capital_recovery ( xl );
	set_construction_financing( xl );
	set_incentives(xl);
	set_om(xl);
	set_land_lease( xl );
	set_fuel(xl);
	set_analysis_parameters( xl );
	set_cost_of_financing( xl );
	set_depreciation_detailed ( xl );
	set_reserves( xl );
	set_taxes_insurance(xl);
	set_system_cost_salvage( xl );
};

cashflow_to_excel{ 'All Equity Partnership Flip' } = define()
{
	xl = create_workbook( 'partnership_flip.xlsx' );
 	set_analysis_period();
	set_debt_parameters_na( xl );
	set_annual_values( xl );
	set_lcos( xl );
	set_solution_mode( xl );
	set_equity_flip_structure( xl );
	set_developer_capital_recovery ( xl );
	set_construction_financing( xl );
	set_incentives(xl);
	set_om(xl);
	set_land_lease( xl );
	set_fuel(xl);
	set_analysis_parameters( xl );
	set_cost_of_financing( xl );
	set_depreciation_detailed ( xl );
	set_reserves( xl );
	set_taxes_insurance(xl);
	set_system_cost_salvage( xl );
};

cashflow_to_excel{ 'Sale Leaseback' } = define()
{
	xl = create_workbook( 'sale_leaseback.xlsx' );
 	set_analysis_period();
	set_annual_values( xl );
	set_lcos( xl );
	set_solution_mode( xl );
	set_sale_leaseback( xl );
	set_construction_financing( xl );
	set_incentives(xl);
	set_om( xl );
	set_land_lease( xl );
	set_fuel( xl );
	set_analysis_parameters( xl );
	set_cost_of_financing( xl );
	set_depreciation_detailed ( xl );
	set_reserves( xl );
	set_taxes_insurance(xl);
	set_system_cost_salvage( xl );
};
