// naming convention with date and github branch used
// configuration and compute module appended in simulate_ssc_tests
casename =  "2022.08.08_develop_branch";

// update folder based on where you would like the generated json files (one for input and one for output comparison for each configuration)
// macOS
folder = "/Users/imacuser/Public/Projects/SAM/Documentation/FinancialMarkets/Tests/generated2";
// Windows
//folder = "C:/Projects/SAM/Documentation/FinancialMarkets/Tests/generated";

// to test all financial compute modules
cmod_list="cashloan,thirdpartyownership,host_developer,singleowner,communitysolar,merchantplant,levpartflip,equpartflip,saleleaseback,lcoefcr";

close_project();

create_case("PVWatts", "None", casename);

configs=0;

//loop through all technologies
technologies = 	list_technologies();
for (t=0; t<#technologies; t++)
{
	if ((technologies[t] != "DSPT") 
	&& (technologies[t] != "PTES")
	&& (technologies[t] != "Dish Stirling")
	&& (technologies[t] != "ISCC")
	&& (technologies[t] != "Retired"))
//	if (technologies[t] == "Fuel Cell") // for testing individual technologies
	{
	//Loop through all financing options for that technology
		financing = list_financing(technologies[t]);
		for(f=0; f<#financing; f++)
		{	

			//Write the technology and financing configuration to the file
			out( technologies[t] + '\t' + financing[f] + '\t' );
			configs++;
			
			//Check that the case and defaults load ok
			active_case( casename );
			configuration( technologies[t], financing[f]) ;
			message = '';
			
			
			if( !load_defaults(message) )
			{
				msg = 'LOADERR';
				if ( query )//&& yesno( 'Error with defaults for: ' + technologies[t] + '/' + financing[f] + '\n\n' + message + '\n\nOverwrite?'))
				{
					if(!overwrite_defaults())
					{
						outln('Defaults could not be overwritten...');
						write_line(file_num,technologies[t] + "," + financing[f] + ", Defaults could not be overwritten...");
						continue;
						msg = 'OVRERR';
					}
					else
						msg = 'OVERWRITE';
				}
				
				out( msg + '\t');
			}
			else out('OK\t');
			
			
			//Check that the case simulates ok
			message2 = '';
			if(!simulate_ssc_tests(folder, cmod_list, message2))
			{
				outln( 'fail\tfail\tfail' + message2);
				continue;
			}
					
			//Record the outputs of the case
			annual_energy = 'NA';
			lcoe_nom = 'NA';
			lcoe_real = 'NA';
			lppa_nom = 'NA'; // for comparison to SAMwx 2014.1.14
			if( null != varinfo('annual_energy') ) annual_energy = get('annual_energy');
			if(financing[f] != 'None')
			{
				if( null != varinfo('lcoe_nom') ) lcoe_nom = get('lcoe_nom');
				if( null != varinfo('lppa_nom') ) lppa_nom = get('lppa_nom');
				if( null != varinfo('lcoe_real') ) lcoe_real = get('lcoe_real');
			}
			
			str = replace( message + '; ' + message2, '\n', ' ' );
			if (technologies[t] == "ETES" || technologies[t] == "PTES" || 
				technologies[t] =="MSPT" || technologies[t] == "Physical Trough" ||
				technologies[t] == "Physical Trough IPH" || technologies[t] == "DSGL IPH"){
				str = replace( message + '; ', '\n', ' ');		// Don't write ETES messages until we reduce the quantity of notices
			}
			str = replace( str, '\r', '' );
			str = replace( str, '\t', ' ' );
			outln( annual_energy + '\t' + lcoe_nom + '\t' + lcoe_real + '\t' + str);
		}
	} // skip DSPT
}

outln( 'Total Number of Configurations: ' + configs);

