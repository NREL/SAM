#ifndef SAM_THIRDPARTYOWNERSHIP_H_
#define SAM_THIRDPARTYOWNERSHIP_H_

#include "visibility.h"
#include "SAM_api.h"


#include <stdint.h>
#ifdef __cplusplus
extern "C"
{
#endif

	//
	// Thirdpartyownership Technology Model
	//

	/** 
	 * Create a Thirdpartyownership variable table.
	 * @param def: the set of financial model-dependent defaults to use (None, Residential, ...)
	 * @param[in,out] err: a pointer to an error object
	 */

	SAM_EXPORT typedef void * SAM_Thirdpartyownership;

	/// verbosity level 0 or 1. Returns 1 on success
	SAM_EXPORT int SAM_Thirdpartyownership_execute(SAM_table data, int verbosity, SAM_error* err);


	//
	// Depreciation parameters
	//

	/**
	 * Set depr_fed_custom: Federal custom depreciation [%/year]
	 * options: None
	 * constraints: None
	 * required if: depr_fed_type=3
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_Depreciation_depr_fed_custom_aset(SAM_table ptr, double* arr, int length, SAM_error *err);

	/**
	 * Set depr_fed_sl_years: Federal depreciation straight-line Years [years]
	 * options: None
	 * constraints: INTEGER,POSITIVE
	 * required if: depr_fed_type=2
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_Depreciation_depr_fed_sl_years_nset(SAM_table ptr, double number, SAM_error *err);

	/**
	 * Set depr_fed_type: Federal depreciation type
	 * options: 0=none,1=macrs_half_year,2=sl,3=custom
	 * constraints: INTEGER,MIN=0,MAX=3
	 * required if: ?=0
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_Depreciation_depr_fed_type_nset(SAM_table ptr, double number, SAM_error *err);

	/**
	 * Set depr_sta_custom: State custom depreciation [%/year]
	 * options: None
	 * constraints: None
	 * required if: depr_sta_type=3
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_Depreciation_depr_sta_custom_aset(SAM_table ptr, double* arr, int length, SAM_error *err);

	/**
	 * Set depr_sta_sl_years: State depreciation straight-line years [years]
	 * options: None
	 * constraints: INTEGER,POSITIVE
	 * required if: depr_sta_type=2
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_Depreciation_depr_sta_sl_years_nset(SAM_table ptr, double number, SAM_error *err);

	/**
	 * Set depr_sta_type: State depreciation type
	 * options: 0=none,1=macrs_half_year,2=sl,3=custom
	 * constraints: INTEGER,MIN=0,MAX=3
	 * required if: ?=0
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_Depreciation_depr_sta_type_nset(SAM_table ptr, double number, SAM_error *err);


	//
	// Financials parameters
	//

	/**
	 * Set analysis_period: Analyis period [years]
	 * options: None
	 * constraints: INTEGER,MIN=0,MAX=50
	 * required if: ?=30
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_Financials_analysis_period_nset(SAM_table ptr, double number, SAM_error *err);

	/**
	 * Set inflation_rate: Inflation rate [%]
	 * options: None
	 * constraints: MIN=-99
	 * required if: *
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_Financials_inflation_rate_nset(SAM_table ptr, double number, SAM_error *err);

	/**
	 * Set real_discount_rate: Real discount rate [%]
	 * options: None
	 * constraints: MIN=-99
	 * required if: *
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_Financials_real_discount_rate_nset(SAM_table ptr, double number, SAM_error *err);


	//
	// FinancialThirdPartyOwnership parameters
	//

	/**
	 * Set lease_or_ppa: Lease or PPA agreement [0/1]
	 * options: 0=lease,1=ppa
	 * constraints: INTEGER,MIN=0,MAX=1
	 * required if: ?=0
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_FinancialThirdPartyOwnership_lease_or_ppa_nset(SAM_table ptr, double number, SAM_error *err);


	//
	// Common parameters
	//

	/**
	 * Set annual_energy_value: Energy value [$]
	 * options: None
	 * constraints: None
	 * required if: *
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_Common_annual_energy_value_aset(SAM_table ptr, double* arr, int length, SAM_error *err);

	/**
	 * Set gen: Power generated by renewable resource [kW]
	 * options: None
	 * constraints: None
	 * required if: *
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_Common_gen_aset(SAM_table ptr, double* arr, int length, SAM_error *err);


	//
	// AnnualOutput parameters
	//

	/**
	 * Set degradation: Annual degradation [%]
	 * options: None
	 * constraints: None
	 * required if: *
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_AnnualOutput_degradation_aset(SAM_table ptr, double* arr, int length, SAM_error *err);

	/**
	 * Set system_use_lifetime_output: Lifetime hourly system outputs [0/1]
	 * options: 0=hourly first year,1=hourly lifetime
	 * constraints: INTEGER,MIN=0
	 * required if: *
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_AnnualOutput_system_use_lifetime_output_nset(SAM_table ptr, double number, SAM_error *err);


	//
	// CashFlow parameters
	//

	/**
	 * Set lease_escalation: Monthly lease escalation [%/year]
	 * options: None
	 * constraints: None
	 * required if: lease_or_ppa=0
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_CashFlow_lease_escalation_nset(SAM_table ptr, double number, SAM_error *err);

	/**
	 * Set lease_price: Monthly lease price [$/month]
	 * options: None
	 * constraints: None
	 * required if: lease_or_ppa=0
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_CashFlow_lease_price_nset(SAM_table ptr, double number, SAM_error *err);

	/**
	 * Set ppa_escalation: Monthly lease escalation [%/year]
	 * options: None
	 * constraints: None
	 * required if: lease_or_ppa=1
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_CashFlow_ppa_escalation_nset(SAM_table ptr, double number, SAM_error *err);

	/**
	 * Set ppa_price: Monthly lease price [$/month]
	 * options: None
	 * constraints: None
	 * required if: lease_or_ppa=1
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_CashFlow_ppa_price_nset(SAM_table ptr, double number, SAM_error *err);


	//
	// ElectricityCost parameters
	//

	/**
	 * Set elec_cost_with_system: Energy value [$]
	 * options: None
	 * constraints: None
	 * required if: *
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_ElectricityCost_elec_cost_with_system_aset(SAM_table ptr, double* arr, int length, SAM_error *err);

	/**
	 * Set elec_cost_without_system: Energy value [$]
	 * options: None
	 * constraints: None
	 * required if: *
	 */
	SAM_EXPORT void SAM_Thirdpartyownership_ElectricityCost_elec_cost_without_system_aset(SAM_table ptr, double* arr, int length, SAM_error *err);


	/**
	 * Depreciation Getters
	 */

	SAM_EXPORT double* SAM_Thirdpartyownership_Depreciation_depr_fed_custom_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_Depreciation_depr_fed_sl_years_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_Depreciation_depr_fed_type_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double* SAM_Thirdpartyownership_Depreciation_depr_sta_custom_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_Depreciation_depr_sta_sl_years_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_Depreciation_depr_sta_type_nget(SAM_table ptr, SAM_error *err);


	/**
	 * Financials Getters
	 */

	SAM_EXPORT double SAM_Thirdpartyownership_Financials_analysis_period_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_Financials_inflation_rate_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_Financials_real_discount_rate_nget(SAM_table ptr, SAM_error *err);


	/**
	 * FinancialThirdPartyOwnership Getters
	 */

	SAM_EXPORT double SAM_Thirdpartyownership_FinancialThirdPartyOwnership_lease_or_ppa_nget(SAM_table ptr, SAM_error *err);


	/**
	 * Common Getters
	 */

	SAM_EXPORT double* SAM_Thirdpartyownership_Common_annual_energy_value_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double* SAM_Thirdpartyownership_Common_gen_aget(SAM_table ptr, int* length, SAM_error *err);


	/**
	 * AnnualOutput Getters
	 */

	SAM_EXPORT double* SAM_Thirdpartyownership_AnnualOutput_degradation_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_AnnualOutput_system_use_lifetime_output_nget(SAM_table ptr, SAM_error *err);


	/**
	 * CashFlow Getters
	 */

	SAM_EXPORT double SAM_Thirdpartyownership_CashFlow_lease_escalation_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_CashFlow_lease_price_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_CashFlow_ppa_escalation_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_CashFlow_ppa_price_nget(SAM_table ptr, SAM_error *err);


	/**
	 * ElectricityCost Getters
	 */

	SAM_EXPORT double* SAM_Thirdpartyownership_ElectricityCost_elec_cost_with_system_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double* SAM_Thirdpartyownership_ElectricityCost_elec_cost_without_system_aget(SAM_table ptr, int* length, SAM_error *err);


	/**
	 * Outputs Getters
	 */

	SAM_EXPORT double* SAM_Thirdpartyownership_Outputs_cf_after_tax_cash_flow_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double* SAM_Thirdpartyownership_Outputs_cf_after_tax_net_equity_cost_flow_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double* SAM_Thirdpartyownership_Outputs_cf_agreement_cost_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double* SAM_Thirdpartyownership_Outputs_cf_cumulative_payback_with_expenses_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double* SAM_Thirdpartyownership_Outputs_cf_energy_net_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_Outputs_cf_length_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double* SAM_Thirdpartyownership_Outputs_cf_nte_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double* SAM_Thirdpartyownership_Outputs_cf_payback_with_expenses_aget(SAM_table ptr, int* length, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_Outputs_lnte_nom_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_Outputs_lnte_real_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_Outputs_npv_nget(SAM_table ptr, SAM_error *err);

	SAM_EXPORT double SAM_Thirdpartyownership_Outputs_year1_nte_nget(SAM_table ptr, SAM_error *err);

#ifdef __cplusplus
} /* end of extern "C" { */
#endif

#endif